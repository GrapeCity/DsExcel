//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GrapeCity.Documents.Excel.Examples {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class StringResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StringResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GrapeCity.Documents.Excel.Examples.StringResource", typeof(StringResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to access the Cells/Rows/Columns/EntireRow/EntireColumn object in a sheet range..
        /// </summary>
        internal static string AccessCellsRowsColumns_Descrip {
            get {
                return ResourceManager.GetString("AccessCellsRowsColumns.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access cells, rows and columns in a range.
        /// </summary>
        internal static string AccessCellsRowsColumns_Name {
            get {
                return ResourceManager.GetString("AccessCellsRowsColumns.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to acess each area in a range when the range contains multiple areas..
        /// </summary>
        internal static string AccessEachAreaOfRange_Descrip {
            get {
                return ResourceManager.GetString("AccessEachAreaOfRange.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access areas in a range.
        /// </summary>
        internal static string AccessEachAreaOfRange_Name {
            get {
                return ResourceManager.GetString("AccessEachAreaOfRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range refers to an array of cells defined in a spreadsheet. GcExcel allows users to define a range and then access the rows and columns within the range to perform certain tasks like formatting of cells, merging of cells, insertion or deletion of cells along with other useful operations..
        /// </summary>
        internal static string AccessRange_Descrip {
            get {
                return ResourceManager.GetString("AccessRange.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access a range.
        /// </summary>
        internal static string AccessRange_Name {
            get {
                return ResourceManager.GetString("AccessRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can get the range of different table parts conveniently by using ITable.HeaderRange, ITable.DataRange and ITable.TotalsRange in GcExcel..
        /// </summary>
        internal static string AccessTableRanges_Descrip {
            get {
                return ResourceManager.GetString("AccessTableRanges.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access each table range.
        /// </summary>
        internal static string AccessTableRanges_Name {
            get {
                return ResourceManager.GetString("AccessTableRanges.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to get worksheet object..
        /// </summary>
        internal static string AccessWorksheet_Descrip {
            get {
                return ResourceManager.GetString("AccessWorksheet.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access a worksheet.
        /// </summary>
        internal static string AccessWorksheet_Name {
            get {
                return ResourceManager.GetString("AccessWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to activate a worksheet..
        /// </summary>
        internal static string ActivateWorksheet_Descrip {
            get {
                return ResourceManager.GetString("ActivateWorksheet.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate a worksheet.
        /// </summary>
        internal static string ActivateWorksheet_Name {
            get {
                return ResourceManager.GetString("ActivateWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can set different kinds of border style and color to a cell..
        /// </summary>
        internal static string AddBordersToCell_Descrip {
            get {
                return ResourceManager.GetString("AddBordersToCell.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add borders to cell.
        /// </summary>
        internal static string AddBordersToCell_Name {
            get {
                return ResourceManager.GetString("AddBordersToCell.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create a box&amp;whisker chart..
        /// </summary>
        internal static string AddBoxWhiskerChart_Descrip {
            get {
                return ResourceManager.GetString("AddBoxWhiskerChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a box&amp;whisker chart.
        /// </summary>
        internal static string AddBoxWhiskerChart_Name {
            get {
                return ResourceManager.GetString("AddBoxWhiskerChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create the button cell type for a cell..
        /// </summary>
        internal static string AddButtonCellType_Descrip {
            get {
                return ResourceManager.GetString("AddButtonCellType.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Button cell type.
        /// </summary>
        internal static string AddButtonCellType_Name {
            get {
                return ResourceManager.GetString("AddButtonCellType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create a chart sheet..
        /// </summary>
        internal static string AddChartSheet_Descrip {
            get {
                return ResourceManager.GetString("AddChartSheet.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a chart sheet.
        /// </summary>
        internal static string AddChartSheet_Name {
            get {
                return ResourceManager.GetString("AddChartSheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create the checkbox cell type for a cell..
        /// </summary>
        internal static string AddCheckBoxCellType_Descrip {
            get {
                return ResourceManager.GetString("AddCheckBoxCellType.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checkbox cell type.
        /// </summary>
        internal static string AddCheckBoxCellType_Name {
            get {
                return ResourceManager.GetString("AddCheckBoxCellType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create the combobox cell type for a cell..
        /// </summary>
        internal static string AddComboBoxCellType_Descrip {
            get {
                return ResourceManager.GetString("AddComboBoxCellType.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Combobox cell type.
        /// </summary>
        internal static string AddComboBoxCellType_Name {
            get {
                return ResourceManager.GetString("AddComboBoxCellType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a comment for a cell..
        /// </summary>
        internal static string AddComment_Descrip {
            get {
                return ResourceManager.GetString("AddComment.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add comment to cell.
        /// </summary>
        internal static string AddComment_Name {
            get {
                return ResourceManager.GetString("AddComment.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to add custom names and set formula to a range in a worksheet..
        /// </summary>
        internal static string AddCustomName_Descrip {
            get {
                return ResourceManager.GetString("AddCustomName.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add custom names.
        /// </summary>
        internal static string AddCustomName_Name {
            get {
                return ResourceManager.GetString("AddCustomName.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to create a custom slicer style..
        /// </summary>
        internal static string AddCustomSlicerStyle_Descrip {
            get {
                return ResourceManager.GetString("AddCustomSlicerStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a custom slicer style.
        /// </summary>
        internal static string AddCustomSlicerStyle_Name {
            get {
                return ResourceManager.GetString("AddCustomSlicerStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In GcExcel .NET, you can create custom table style elements and apply them to a table..
        /// </summary>
        internal static string AddCustomTableStyle_Descrip {
            get {
                return ResourceManager.GetString("AddCustomTableStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a custom table style.
        /// </summary>
        internal static string AddCustomTableStyle_Name {
            get {
                return ResourceManager.GetString("AddCustomTableStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to create custom theme and apply it to a workbook..
        /// </summary>
        internal static string AddCustomThemes_Descrip {
            get {
                return ResourceManager.GetString("AddCustomThemes.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add custom themes.
        /// </summary>
        internal static string AddCustomThemes_Name {
            get {
                return ResourceManager.GetString("AddCustomThemes.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create a funnel chart..
        /// </summary>
        internal static string AddFunnelChart_Descrip {
            get {
                return ResourceManager.GetString("AddFunnelChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a funnel chart.
        /// </summary>
        internal static string AddFunnelChart_Name {
            get {
                return ResourceManager.GetString("AddFunnelChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create a histogram chart..
        /// </summary>
        internal static string AddHistogramChart_Descrip {
            get {
                return ResourceManager.GetString("AddHistogramChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a histogram chart.
        /// </summary>
        internal static string AddHistogramChart_Name {
            get {
                return ResourceManager.GetString("AddHistogramChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create the hyperlink cell type for a cell..
        /// </summary>
        internal static string AddHyperlinkCellType_Descrip {
            get {
                return ResourceManager.GetString("AddHyperlinkCellType.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hyperlink cell type.
        /// </summary>
        internal static string AddHyperlinkCellType_Name {
            get {
                return ResourceManager.GetString("AddHyperlinkCellType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can set different kinds of border style and color to a range..
        /// </summary>
        internal static string AddingBordersToRange_Descrip {
            get {
                return ResourceManager.GetString("AddingBordersToRange.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add borders to range.
        /// </summary>
        internal static string AddingBordersToRange_Name {
            get {
                return ResourceManager.GetString("AddingBordersToRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create a pareto chart..
        /// </summary>
        internal static string AddParetoChart_Descrip {
            get {
                return ResourceManager.GetString("AddParetoChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a pareto chart.
        /// </summary>
        internal static string AddParetoChart_Name {
            get {
                return ResourceManager.GetString("AddParetoChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create the cell type for row/column..
        /// </summary>
        internal static string AddRowColumnCellType_Descrip {
            get {
                return ResourceManager.GetString("AddRowColumnCellType.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set cell type for row/column.
        /// </summary>
        internal static string AddRowColumnCellType_Name {
            get {
                return ResourceManager.GetString("AddRowColumnCellType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a series in a chart..
        /// </summary>
        internal static string AddSeries_Descrip {
            get {
                return ResourceManager.GetString("AddSeries.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add series for chart.
        /// </summary>
        internal static string AddSeries_Name {
            get {
                return ResourceManager.GetString("AddSeries.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a shape with custom name..
        /// </summary>
        internal static string AddShapeWithCustomName_Descrip {
            get {
                return ResourceManager.GetString("AddShapeWithCustomName.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shape with custom name.
        /// </summary>
        internal static string AddShapeWithCustomName_Name {
            get {
                return ResourceManager.GetString("AddShapeWithCustomName.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create the cell type for the whole worksheet..
        /// </summary>
        internal static string AddSheetCellType_Descrip {
            get {
                return ResourceManager.GetString("AddSheetCellType.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set cell type for the sheet.
        /// </summary>
        internal static string AddSheetCellType_Name {
            get {
                return ResourceManager.GetString("AddSheetCellType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to create slicer for a pivot table..
        /// </summary>
        internal static string AddSlicersForPivotTable_Descrip {
            get {
                return ResourceManager.GetString("AddSlicersForPivotTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add slicers to pivot tables.
        /// </summary>
        internal static string AddSlicersForPivotTable_Name {
            get {
                return ResourceManager.GetString("AddSlicersForPivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to create slicer for a table..
        /// </summary>
        internal static string AddSlicersForTable_Descrip {
            get {
                return ResourceManager.GetString("AddSlicersForTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add slicers to tables.
        /// </summary>
        internal static string AddSlicersForTable_Name {
            get {
                return ResourceManager.GetString("AddSlicersForTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add subtotal to a range with IRange.Subtotal.
        /// </summary>
        internal static string AddSubtotal_Descrip {
            get {
                return ResourceManager.GetString("AddSubtotal.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add subtotal.
        /// </summary>
        internal static string AddSubtotal_Name {
            get {
                return ResourceManager.GetString("AddSubtotal.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add subtotal to a range with IRange.Subtotal (Advanced).
        /// </summary>
        internal static string AddSubtotalAdvanced_Descrip {
            get {
                return ResourceManager.GetString("AddSubtotalAdvanced.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add subtotal (with advanced options).
        /// </summary>
        internal static string AddSubtotalAdvanced_Name {
            get {
                return ResourceManager.GetString("AddSubtotalAdvanced.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create a sunburst chart..
        /// </summary>
        internal static string AddSunburstChart_Descrip {
            get {
                return ResourceManager.GetString("AddSunburstChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a sunburst chart.
        /// </summary>
        internal static string AddSunburstChart_Name {
            get {
                return ResourceManager.GetString("AddSunburstChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to create cell rich text by adding and configuring runs..
        /// </summary>
        internal static string AddTextRun_Descrip {
            get {
                return ResourceManager.GetString("AddTextRun.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use IRichText interface.
        /// </summary>
        internal static string AddTextRun_Name {
            get {
                return ResourceManager.GetString("AddTextRun.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create a treemap chart..
        /// </summary>
        internal static string AddTreeMapChart_Descrip {
            get {
                return ResourceManager.GetString("AddTreeMapChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a treemap chart.
        /// </summary>
        internal static string AddTreeMapChart_Name {
            get {
                return ResourceManager.GetString("AddTreeMapChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert pictures, shapes into a chart. These inserted pictures or shapes are called the user shapes of this chart..
        /// </summary>
        internal static string AddUserShapes_Descrip {
            get {
                return ResourceManager.GetString("AddUserShapes.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add user shapes.
        /// </summary>
        internal static string AddUserShapes_Name {
            get {
                return ResourceManager.GetString("AddUserShapes.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create a waterfall chart..
        /// </summary>
        internal static string AddWaterfallChart_Descrip {
            get {
                return ResourceManager.GetString("AddWaterfallChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a waterfall chart.
        /// </summary>
        internal static string AddWaterfallChart_Name {
            get {
                return ResourceManager.GetString("AddWaterfallChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a new worksheet..
        /// </summary>
        internal static string AddWorksheet_Descrip {
            get {
                return ResourceManager.GetString("AddWorksheet.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a worksheet.
        /// </summary>
        internal static string AddWorksheet_Name {
            get {
                return ResourceManager.GetString("AddWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aging Report.
        /// </summary>
        internal static string AgingReport_Name {
            get {
                return ResourceManager.GetString("AgingReport.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Alignment
        ///The examples in this folder demonstrate how to use these alignment settings:
        ///- HorizontalAlignment (Left, Center, or Right)
        ///- VerticalAlignment (Top, Center, or Bottom)
        ///- ReadingOrder (sets text direction to RightToLeft or LeftToRight)
        ///- ShrinkToFit 
        ///- Orientation (sets the text rotation angle in degrees)
        ///- Wrap Text .
        /// </summary>
        internal static string Alignment_Descrip {
            get {
                return ResourceManager.GetString("Alignment.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alignment.
        /// </summary>
        internal static string Alignment_Name {
            get {
                return ResourceManager.GetString("Alignment.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annual financial report.
        /// </summary>
        internal static string AnnualFinancialReport_Name {
            get {
                return ResourceManager.GetString("AnnualFinancialReport.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to apply a slicer style..
        /// </summary>
        internal static string ApplySlicerStyle_Descrip {
            get {
                return ResourceManager.GetString("ApplySlicerStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply built-in style to slicer.
        /// </summary>
        internal static string ApplySlicerStyle_Name {
            get {
                return ResourceManager.GetString("ApplySlicerStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can get a built-in named style from IWorksheet.Styles collection then apply the style to a cell or range..
        /// </summary>
        internal static string ApplyStyle_Descrip {
            get {
                return ResourceManager.GetString("ApplyStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply style to range.
        /// </summary>
        internal static string ApplyStyle_Name {
            get {
                return ResourceManager.GetString("ApplyStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can format a table using any of the predefined table styles provided by GcExcel .NET..
        /// </summary>
        internal static string ApplyTableStyle_Descrip {
            get {
                return ResourceManager.GetString("ApplyTableStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply built-in styles to tables.
        /// </summary>
        internal static string ApplyTableStyle_Name {
            get {
                return ResourceManager.GetString("ApplyTableStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add an area chart in GcExcel..
        /// </summary>
        internal static string AreaChart_Descrip {
            get {
                return ResourceManager.GetString("AreaChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Area chart.
        /// </summary>
        internal static string AreaChart_Name {
            get {
                return ResourceManager.GetString("AreaChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export area chart to PDF file.
        /// </summary>
        internal static string AreaChartPdf_Descrip {
            get {
                return ResourceManager.GetString("AreaChartPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Area chart.
        /// </summary>
        internal static string AreaChartPdf_Name {
            get {
                return ResourceManager.GetString("AreaChartPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add an 100% stacked area chart in GcExcel..
        /// </summary>
        internal static string AreaStacked100_Descrip {
            get {
                return ResourceManager.GetString("AreaStacked100.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100% Stacked chart.
        /// </summary>
        internal static string AreaStacked100_Name {
            get {
                return ResourceManager.GetString("AreaStacked100.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add an stacked area chart in GcExcel..
        /// </summary>
        internal static string AreaStackedChart_Descrip {
            get {
                return ResourceManager.GetString("AreaStackedChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stacked Area chart.
        /// </summary>
        internal static string AreaStackedChart_Name {
            get {
                return ResourceManager.GetString("AreaStackedChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code in order to automatically fit the row height and column width in a worksheet..
        /// </summary>
        internal static string AutoFit_Descrip {
            get {
                return ResourceManager.GetString("AutoFit.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto fit column width and row height.
        /// </summary>
        internal static string AutoFit_Name {
            get {
                return ResourceManager.GetString("AutoFit.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Axis
        ///Charts contain three axis types: 
        ///- category axis
        ///- value axis
        ///- series axis
        ///
        ///They are all generated automatically, and you **can not add or delete them in code**.
        ///
        ///Examples in the Axis folder demonstrate how to specify axis-related settings such as:
        ///- axis titles
        ///- axis units
        ///- display unit labels
        ///- gridlines
        ///- tick marks
        ///- tick mark labels.
        /// </summary>
        internal static string Axes_Descrip {
            get {
                return ResourceManager.GetString("Axes.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Axis.
        /// </summary>
        internal static string Axes_Name {
            get {
                return ResourceManager.GetString("Axes.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export axis label number format to PDF file.
        /// </summary>
        internal static string AxisLabelNumberformatPdf_Descrip {
            get {
                return ResourceManager.GetString("AxisLabelNumberformatPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Axis label number format.
        /// </summary>
        internal static string AxisLabelNumberformatPdf_Name {
            get {
                return ResourceManager.GetString("AxisLabelNumberformatPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export bar chart to PDF file.
        /// </summary>
        internal static string BarChartPdf_Descrip {
            get {
                return ResourceManager.GetString("BarChartPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bar chart.
        /// </summary>
        internal static string BarChartPdf_Name {
            get {
                return ResourceManager.GetString("BarChartPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a clustered bar chart in GcExcel..
        /// </summary>
        internal static string BarClusteredChart_Descrip {
            get {
                return ResourceManager.GetString("BarClusteredChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clustered Bar chart.
        /// </summary>
        internal static string BarClusteredChart_Name {
            get {
                return ResourceManager.GetString("BarClusteredChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a 100% stacked bar chart in GcExcel..
        /// </summary>
        internal static string BarStacked100Chart_Descrip {
            get {
                return ResourceManager.GetString("BarStacked100Chart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100% Stacked Bar chart.
        /// </summary>
        internal static string BarStacked100Chart_Name {
            get {
                return ResourceManager.GetString("BarStacked100Chart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a stacked bar chart in GcExcel..
        /// </summary>
        internal static string BarStackedChart_Descrip {
            get {
                return ResourceManager.GetString("BarStackedChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stacked Bar chart.
        /// </summary>
        internal static string BarStackedChart_Name {
            get {
                return ResourceManager.GetString("BarStackedChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic sales report.
        /// </summary>
        internal static string BasicSalesReport_Name {
            get {
                return ResourceManager.GetString("BasicSalesReport.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export spreadsheets that contain preset shapes, basic shapes, connector arrows , shape with text etc. into a PDF file..
        /// </summary>
        internal static string BasicShapes_Descrip {
            get {
                return ResourceManager.GetString("BasicShapes.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic shapes.
        /// </summary>
        internal static string BasicShapes_Name {
            get {
                return ResourceManager.GetString("BasicShapes.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bid tracker.
        /// </summary>
        internal static string BidTracker_Name {
            get {
                return ResourceManager.GetString("BidTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to bind data source to sheet columns automatically..
        /// </summary>
        internal static string BindAutomatically_Descrip {
            get {
                return ResourceManager.GetString("BindAutomatically.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind to sheet automatically.
        /// </summary>
        internal static string BindAutomatically_Name {
            get {
                return ResourceManager.GetString("BindAutomatically.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to bind custom object to table..
        /// </summary>
        internal static string BindCustomObject_Descrip {
            get {
                return ResourceManager.GetString("BindCustomObject.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind custom object.
        /// </summary>
        internal static string BindCustomObject_Name {
            get {
                return ResourceManager.GetString("BindCustomObject.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to bind DataSet to tables..
        /// </summary>
        internal static string BindDataSet_Descrip {
            get {
                return ResourceManager.GetString("BindDataSet.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind DataSet.
        /// </summary>
        internal static string BindDataSet_Name {
            get {
                return ResourceManager.GetString("BindDataSet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to bind DataTable to sheet columns..
        /// </summary>
        internal static string BindDataTable_Descrip {
            get {
                return ResourceManager.GetString("BindDataTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind DataTable to sheet.
        /// </summary>
        internal static string BindDataTable_Name {
            get {
                return ResourceManager.GetString("BindDataTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to bind data source to sheet columns manually..
        /// </summary>
        internal static string BindManually_Descrip {
            get {
                return ResourceManager.GetString("BindManually.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind to sheet manually.
        /// </summary>
        internal static string BindManually_Name {
            get {
                return ResourceManager.GetString("BindManually.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blood pressure tracker.
        /// </summary>
        internal static string BloodPressureTracker_Name {
            get {
                return ResourceManager.GetString("BloodPressureTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blood sugar tracker.
        /// </summary>
        internal static string BloodSugarTracker_Name {
            get {
                return ResourceManager.GetString("BloodSugarTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Borders
        ///The examples in this folder demonstrate how to specify border settings for a range. You can set these border options:
        ///- BorderLineStyle (Dashed, DashDot, Dotted, Double, Medium, Hair, etc.)
        ///- Color (Green, Red, Blue, Tomato, LimeGreen, etc.).
        /// </summary>
        internal static string Borders_Descrip {
            get {
                return ResourceManager.GetString("Borders.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Borders.
        /// </summary>
        internal static string Borders_Name {
            get {
                return ResourceManager.GetString("Borders.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a bubble chart in GcExcel..
        /// </summary>
        internal static string BubbleChart_Descrip {
            get {
                return ResourceManager.GetString("BubbleChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bubble chart.
        /// </summary>
        internal static string BubbleChart_Name {
            get {
                return ResourceManager.GetString("BubbleChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to bind data source to cells..
        /// </summary>
        internal static string CellBinding_Descrip {
            get {
                return ResourceManager.GetString("CellBinding.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cell binding.
        /// </summary>
        internal static string CellBinding_Name {
            get {
                return ResourceManager.GetString("CellBinding.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CellInfo class can help users to convert a cell address to its row/column coordinates, column name to index, and row name to index..
        /// </summary>
        internal static string CellInfo_Descrip {
            get {
                return ResourceManager.GetString("CellInfo.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use CellInfo helper class.
        /// </summary>
        internal static string CellInfo_Name {
            get {
                return ResourceManager.GetString("CellInfo.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Cell Rich Text
        ///GcExcel provides support for applying rich text formatting in the cells of the worksheet. 
        ///Examples in this folder demonstrate how to:
        ///- Use IRange.IRichText interface to add and format text runs in a cell.
        ///- Use IRange.Characters() method to format a range of characters in a cell.
        ///- Configure font for each text run of rich text cell..
        /// </summary>
        internal static string CellRichText_Descrip {
            get {
                return ResourceManager.GetString("CellRichText.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cell Rich Text.
        /// </summary>
        internal static string CellRichText_Name {
            get {
                return ResourceManager.GetString("CellRichText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User can directly use Excel&apos;s cell style in the template. 
        ///
        ///The style will be applied to the cells as per the data grow..
        /// </summary>
        internal static string CellStyle_Descrip {
            get {
                return ResourceManager.GetString("CellStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cell style.
        /// </summary>
        internal static string CellStyle_Name {
            get {
                return ResourceManager.GetString("CellStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## CellType
        ///The examples in this folder demonstrate how to create cell types. Following cell types are supported:
        ///- Button cell type
        ///- Checkbox cell type
        ///- Combobox cell type
        ///- Hyperlink cell type.
        /// </summary>
        internal static string CellType_Descrip {
            get {
                return ResourceManager.GetString("CellType.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cell type.
        /// </summary>
        internal static string CellType_Name {
            get {
                return ResourceManager.GetString("CellType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to change the consolidation function of pivot table data field..
        /// </summary>
        internal static string ChangeDataFieldSummarizeFunction_Descrip {
            get {
                return ResourceManager.GetString("ChangeDataFieldSummarizeFunction.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set field&apos;s summarize function.
        /// </summary>
        internal static string ChangeDataFieldSummarizeFunction_Name {
            get {
                return ResourceManager.GetString("ChangeDataFieldSummarizeFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to change chart type of a data series..
        /// </summary>
        internal static string ChangeSeriesType_Descrip {
            get {
                return ResourceManager.GetString("ChangeSeriesType.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change series type.
        /// </summary>
        internal static string ChangeSeriesType_Name {
            get {
                return ResourceManager.GetString("ChangeSeriesType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to change the theme of a workbook..
        /// </summary>
        internal static string ChangeWorkbookTheme_Descrip {
            get {
                return ResourceManager.GetString("ChangeWorkbookTheme.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change workbook themes.
        /// </summary>
        internal static string ChangeWorkbookTheme_Name {
            get {
                return ResourceManager.GetString("ChangeWorkbookTheme.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to change the filtering range in a worksheet..
        /// </summary>
        internal static string ChangeWorksheetFilterRange_Descrip {
            get {
                return ResourceManager.GetString("ChangeWorksheetFilterRange.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change worksheet filter range.
        /// </summary>
        internal static string ChangeWorksheetFilterRange_Name {
            get {
                return ResourceManager.GetString("ChangeWorksheetFilterRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to create cell rich text by Characters() method..
        /// </summary>
        internal static string CharacterCellText_Descrip {
            get {
                return ResourceManager.GetString("CharacterCellText.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Character method.
        /// </summary>
        internal static string CharacterCellText_Name {
            get {
                return ResourceManager.GetString("CharacterCellText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Chart 3D format
        ///These examples in this folder demonstrate how to set charts 3D format.
        /// </summary>
        internal static string Chart3DFormat_Descrip {
            get {
                return ResourceManager.GetString("Chart3DFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart 3D format.
        /// </summary>
        internal static string Chart3DFormat_Name {
            get {
                return ResourceManager.GetString("Chart3DFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Chart area
        ///Chart area is the complete chart area, include plot area, chart title and legend.
        ///
        ///These examples demonstrate how to configure chart area style and whole chart area font style..
        /// </summary>
        internal static string ChartArea_Descrip {
            get {
                return ResourceManager.GetString("ChartArea.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart area.
        /// </summary>
        internal static string ChartArea_Name {
            get {
                return ResourceManager.GetString("ChartArea.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to copy a chart..
        /// </summary>
        internal static string ChartCopy_Descrip {
            get {
                return ResourceManager.GetString("ChartCopy.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy chart.
        /// </summary>
        internal static string ChartCopy_Name {
            get {
                return ResourceManager.GetString("ChartCopy.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to cut a chart..
        /// </summary>
        internal static string ChartCut_Descrip {
            get {
                return ResourceManager.GetString("ChartCut.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut chart.
        /// </summary>
        internal static string ChartCut_Name {
            get {
                return ResourceManager.GetString("ChartCut.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to duplicate a chart..
        /// </summary>
        internal static string ChartDuplicate_Descrip {
            get {
                return ResourceManager.GetString("ChartDuplicate.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate chart.
        /// </summary>
        internal static string ChartDuplicate_Name {
            get {
                return ResourceManager.GetString("ChartDuplicate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Chart gallery
        ///This chart gallery includes all of the **chart types** available and demonstrates how to configure each chart..
        /// </summary>
        internal static string ChartGallery_Descrip {
            get {
                return ResourceManager.GetString("ChartGallery.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart gallery.
        /// </summary>
        internal static string ChartGallery_Name {
            get {
                return ResourceManager.GetString("ChartGallery.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this example, GcExcel first opens an Excel file that contains some charts, then export it to a PDF file..
        /// </summary>
        internal static string ChartGalleryPdf_Descrip {
            get {
                return ResourceManager.GetString("ChartGalleryPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export chart gallery.
        /// </summary>
        internal static string ChartGalleryPdf_Name {
            get {
                return ResourceManager.GetString("ChartGalleryPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to plot visible cells in plot area of a chart..
        /// </summary>
        internal static string ChartJustPlotVisibleCell_Descrip {
            get {
                return ResourceManager.GetString("ChartJustPlotVisibleCell.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plot only visible cells.
        /// </summary>
        internal static string ChartJustPlotVisibleCell_Name {
            get {
                return ResourceManager.GetString("ChartJustPlotVisibleCell.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Chart lines
        ///Chart lines include: **Trendline**, **Dropline** , **High-Low Line** and **Series Line**.
        ///
        ///- **Trendline** is for specific series.
        ///- **Dropline** set for line chart or area chart.
        ///- **High-Low line** set for line chart.
        ///- **Series line** set for stacked column or bar charts. Pie-of-pie charts and bar-of-pie charts also have connector lines between their sections
        ///
        ///These examples demonstrate how to add these lines and how to configure lines style..
        /// </summary>
        internal static string ChartLines_Descrip {
            get {
                return ResourceManager.GetString("ChartLines.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart lines.
        /// </summary>
        internal static string ChartLines_Name {
            get {
                return ResourceManager.GetString("ChartLines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Charts
        ///**GrapeCity Documents for Excel** provides a comprehensive charting API:
        ///
        ///- Add charts to a worksheet using the **IWorksheet.AddChart** method
        ///-- Returns an instance of **IShape** 
        ///-- Use the **Chart** property to access the newly added chart
        ///- Add data series with the **IChart.SeriesCollection.Add** method
        ///- Customize chart titles with the **IChart.ChartTitle** property
        ///- Customize chart legends with the **IChart.Legend** property
        ///- Access and customize each data series through the **ISe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Charts_Descrip {
            get {
                return ResourceManager.GetString("Charts.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Charts.
        /// </summary>
        internal static string Charts_Name {
            get {
                return ResourceManager.GetString("Charts.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Chart title
        ///**Chart title** is the name of the chart.
        ///
        ///These examples demonstrate how to display chart name  and how to specify settings for chart title..
        /// </summary>
        internal static string ChartTitle_Descrip {
            get {
                return ResourceManager.GetString("ChartTitle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart title.
        /// </summary>
        internal static string ChartTitle_Name {
            get {
                return ResourceManager.GetString("ChartTitle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Chart walls** include **back wall** and **side wall**.
        ///
        ///These examples demonstrate how to specify settings for chart walls, include:
        ///- Configure walls style together
        ///- Configure back wall and side wall separately.
        /// </summary>
        internal static string ChartWalls_Descrip {
            get {
                return ResourceManager.GetString("ChartWalls.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart walls.
        /// </summary>
        internal static string ChartWalls_Name {
            get {
                return ResourceManager.GetString("ChartWalls.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to delete and clear comments..
        /// </summary>
        internal static string ClearComment_Descrip {
            get {
                return ResourceManager.GetString("ClearComment.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear comments.
        /// </summary>
        internal static string ClearComment_Name {
            get {
                return ResourceManager.GetString("ClearComment.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to clear filtering in a worksheet..
        /// </summary>
        internal static string ClearFilter_Descrip {
            get {
                return ResourceManager.GetString("ClearFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear worksheet filter.
        /// </summary>
        internal static string ClearFilter_Name {
            get {
                return ResourceManager.GetString("ClearFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can clear the outline level of the specified rows or columns using the ClearOutline method of the IRange interface.
        /// </summary>
        internal static string ClearOutline_Descrip {
            get {
                return ResourceManager.GetString("ClearOutline.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear outline.
        /// </summary>
        internal static string ClearOutline_Name {
            get {
                return ResourceManager.GetString("ClearOutline.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to clear sparkline groups..
        /// </summary>
        internal static string ClearSparklineGroup_Descrip {
            get {
                return ResourceManager.GetString("ClearSparklineGroup.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear the sparkline group.
        /// </summary>
        internal static string ClearSparklineGroup_Name {
            get {
                return ResourceManager.GetString("ClearSparklineGroup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to clear sparklines..
        /// </summary>
        internal static string ClearSparklines_Descrip {
            get {
                return ResourceManager.GetString("ClearSparklines.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear sparklines.
        /// </summary>
        internal static string ClearSparklines_Name {
            get {
                return ResourceManager.GetString("ClearSparklines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can collapse a group by setting the ShowDetail property of the IRange interface to boolean false. Refer to the following example code to collapse a group in a worksheet..
        /// </summary>
        internal static string CollapseGroup_Descrip {
            get {
                return ResourceManager.GetString("CollapseGroup.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collapse group.
        /// </summary>
        internal static string CollapseGroup_Name {
            get {
                return ResourceManager.GetString("CollapseGroup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export column chart to PDF file.
        /// </summary>
        internal static string ColumnChartPdf_Descrip {
            get {
                return ResourceManager.GetString("ColumnChartPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column chart.
        /// </summary>
        internal static string ColumnChartPdf_Name {
            get {
                return ResourceManager.GetString("ColumnChartPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a clustered column chart in GcExcel..
        /// </summary>
        internal static string ColumnClusteredChart_Descrip {
            get {
                return ResourceManager.GetString("ColumnClusteredChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clustered Column chart.
        /// </summary>
        internal static string ColumnClusteredChart_Name {
            get {
                return ResourceManager.GetString("ColumnClusteredChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a 100% stacked column chart in GcExcel..
        /// </summary>
        internal static string ColumnStacked100Chart_Descrip {
            get {
                return ResourceManager.GetString("ColumnStacked100Chart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100% Stacked Column chart.
        /// </summary>
        internal static string ColumnStacked100Chart_Name {
            get {
                return ResourceManager.GetString("ColumnStacked100Chart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a stacked column chart in GcExcel..
        /// </summary>
        internal static string ColumnStackedChart_Descrip {
            get {
                return ResourceManager.GetString("ColumnStackedChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stacked Column chart.
        /// </summary>
        internal static string ColumnStackedChart_Name {
            get {
                return ResourceManager.GetString("ColumnStackedChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a combination chart(column and line markers) in GcExcel..
        /// </summary>
        internal static string CombinationChart1_Descrip {
            get {
                return ResourceManager.GetString("CombinationChart1.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Combination chart.
        /// </summary>
        internal static string CombinationChart1_Name {
            get {
                return ResourceManager.GetString("CombinationChart1.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a combination chart(column stacked and area) in GcExcel..
        /// </summary>
        internal static string CombinationChart2_Descrip {
            get {
                return ResourceManager.GetString("CombinationChart2.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Combination chart.
        /// </summary>
        internal static string CombinationChart2_Name {
            get {
                return ResourceManager.GetString("CombinationChart2.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export combo chart to PDF file.
        /// </summary>
        internal static string ComboChartPdf_Descrip {
            get {
                return ResourceManager.GetString("ComboChartPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Combo chart.
        /// </summary>
        internal static string ComboChartPdf_Name {
            get {
                return ResourceManager.GetString("ComboChartPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Comments
        ///GrapeCity Documents for Excel enables users to annotate worksheets. They can write comments for cells to add information about the data it contains.
        ///
        ///Add comments for a range using the **AddComment** method. It returns an instance of the **IComment** interface. 
        ///
        ///Always show comments with the **Visible** property. 
        ///
        ///Modify comment layouts with the **Shape** property.
        ///
        ///Create rich text using the **TextFrame** property of the **IShape** interface. You can use different font styles for eac [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Comments_Descrip {
            get {
                return ResourceManager.GetString("Comments.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comments.
        /// </summary>
        internal static string Comments_Name {
            get {
                return ResourceManager.GetString("Comments.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Conditional Formatting
        ///In order to enable you to highlight important information in rows or columns of a worksheet, GrapeCity Documents for Excel allows users to create conditional formatting rules for individual cells or a range of cells based on cell values. If the format condition matches with the cell value, it is assumed as true and the cell is formatted as per the specified rule..
        ///
        ///GrapeCity Documents for Excel supports all types of conditional formatting rules:
        ///
        ///- Cell Value
        ///- Average
        ///- Col [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConditionalFormatting_Descrip {
            get {
                return ResourceManager.GetString("ConditionalFormatting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditional Formatting.
        /// </summary>
        internal static string ConditionalFormatting_Name {
            get {
                return ResourceManager.GetString("ConditionalFormatting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use IShape.Adjustments to get/set adjustment points for shapes..
        /// </summary>
        internal static string ConfigAdjustmentPoints_Descrip {
            get {
                return ResourceManager.GetString("ConfigAdjustmentPoints.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjustment points.
        /// </summary>
        internal static string ConfigAdjustmentPoints_Name {
            get {
                return ResourceManager.GetString("ConfigAdjustmentPoints.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to show and customize the axis title, you can change  the title text, font size, font color, etc..
        /// </summary>
        internal static string ConfigAxisTitle_Descrip {
            get {
                return ResourceManager.GetString("ConfigAxisTitle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure axis title style.
        /// </summary>
        internal static string ConfigAxisTitle_Name {
            get {
                return ResourceManager.GetString("ConfigAxisTitle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to customize bubble chart(BubbleScale, SizeRepresents, ShowNegativeBubbles)..
        /// </summary>
        internal static string ConfigBubbleChartLayout_Descrip {
            get {
                return ResourceManager.GetString("ConfigBubbleChartLayout.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure bubble chart&apos;s layout.
        /// </summary>
        internal static string ConfigBubbleChartLayout_Name {
            get {
                return ResourceManager.GetString("ConfigBubbleChartLayout.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure the format of category axis, such as to customize the line style, line color, fill color, etc..
        /// </summary>
        internal static string ConfigCategoryAxesFormat_Descrip {
            get {
                return ResourceManager.GetString("ConfigCategoryAxesFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure category axis style.
        /// </summary>
        internal static string ConfigCategoryAxesFormat_Name {
            get {
                return ResourceManager.GetString("ConfigCategoryAxesFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure date axis, such as axis&apos; maximum/minimum scale, major/minor unit, etc..
        /// </summary>
        internal static string ConfigCategoryAxisUnits_Descrip {
            get {
                return ResourceManager.GetString("ConfigCategoryAxisUnits.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set date axis units.
        /// </summary>
        internal static string ConfigCategoryAxisUnits_Name {
            get {
                return ResourceManager.GetString("ConfigCategoryAxisUnits.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure three-D properties of a chart..
        /// </summary>
        internal static string ConfigChart3DFormat_Descrip {
            get {
                return ResourceManager.GetString("ConfigChart3DFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart 3D format.
        /// </summary>
        internal static string ConfigChart3DFormat_Name {
            get {
                return ResourceManager.GetString("ConfigChart3DFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure font of chart area..
        /// </summary>
        internal static string ConfigChartAreaFont_Descrip {
            get {
                return ResourceManager.GetString("ConfigChartAreaFont.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart area&apos;s font.
        /// </summary>
        internal static string ConfigChartAreaFont_Name {
            get {
                return ResourceManager.GetString("ConfigChartAreaFont.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure formats of chart area..
        /// </summary>
        internal static string ConfigChartAreaFormat_Descrip {
            get {
                return ResourceManager.GetString("ConfigChartAreaFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart area format.
        /// </summary>
        internal static string ConfigChartAreaFormat_Name {
            get {
                return ResourceManager.GetString("ConfigChartAreaFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure the back wall of a three-D chart..
        /// </summary>
        internal static string ConfigChartBackWall_Descrip {
            get {
                return ResourceManager.GetString("ConfigChartBackWall.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart back wall.
        /// </summary>
        internal static string ConfigChartBackWall_Name {
            get {
                return ResourceManager.GetString("ConfigChartBackWall.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure the floor of a three-D chart..
        /// </summary>
        internal static string ConfigChartFloorStyle_Descrip {
            get {
                return ResourceManager.GetString("ConfigChartFloorStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart floor style.
        /// </summary>
        internal static string ConfigChartFloorStyle_Name {
            get {
                return ResourceManager.GetString("ConfigChartFloorStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure the side wall of a three-D chart..
        /// </summary>
        internal static string ConfigChartSideWall_Descrip {
            get {
                return ResourceManager.GetString("ConfigChartSideWall.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart side wall.
        /// </summary>
        internal static string ConfigChartSideWall_Name {
            get {
                return ResourceManager.GetString("ConfigChartSideWall.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure text angle of a chart title..
        /// </summary>
        internal static string ConfigChartTitleAngle_Descrip {
            get {
                return ResourceManager.GetString("ConfigChartTitleAngle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set angle of chart title.
        /// </summary>
        internal static string ConfigChartTitleAngle_Name {
            get {
                return ResourceManager.GetString("ConfigChartTitleAngle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure chart title with rich text format..
        /// </summary>
        internal static string ConfigChartTitleRichText_Descrip {
            get {
                return ResourceManager.GetString("ConfigChartTitleRichText.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart title with rich text.
        /// </summary>
        internal static string ConfigChartTitleRichText_Name {
            get {
                return ResourceManager.GetString("ConfigChartTitleRichText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure different formats(fill, border, font, etc) of a chart title..
        /// </summary>
        internal static string ConfigChartTitleStyle_Descrip {
            get {
                return ResourceManager.GetString("ConfigChartTitleStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart title style.
        /// </summary>
        internal static string ConfigChartTitleStyle_Name {
            get {
                return ResourceManager.GetString("ConfigChartTitleStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure all walls of a three-D chart..
        /// </summary>
        internal static string ConfigChartWallStyle_Descrip {
            get {
                return ResourceManager.GetString("ConfigChartWallStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart walls style.
        /// </summary>
        internal static string ConfigChartWallStyle_Name {
            get {
                return ResourceManager.GetString("ConfigChartWallStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to format and customize a comment..
        /// </summary>
        internal static string ConfigCommentLayout_Descrip {
            get {
                return ResourceManager.GetString("ConfigCommentLayout.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure comment&apos;s layout.
        /// </summary>
        internal static string ConfigCommentLayout_Name {
            get {
                return ResourceManager.GetString("ConfigCommentLayout.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure a custom type error bar of chart..
        /// </summary>
        internal static string ConfigCustomErrorBar_Descrip {
            get {
                return ResourceManager.GetString("ConfigCustomErrorBar.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom type.
        /// </summary>
        internal static string ConfigCustomErrorBar_Name {
            get {
                return ResourceManager.GetString("ConfigCustomErrorBar.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure text angle of data labels..
        /// </summary>
        internal static string ConfigDataLabelAngle_Descrip {
            get {
                return ResourceManager.GetString("ConfigDataLabelAngle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set angle of data labels.
        /// </summary>
        internal static string ConfigDataLabelAngle_Name {
            get {
                return ResourceManager.GetString("ConfigDataLabelAngle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to show and customize data labels of a chart..
        /// </summary>
        internal static string ConfigDataLabelFormat_Descrip {
            get {
                return ResourceManager.GetString("ConfigDataLabelFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure data label&apos;s format.
        /// </summary>
        internal static string ConfigDataLabelFormat_Name {
            get {
                return ResourceManager.GetString("ConfigDataLabelFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure the displaying content of data labels in chart..
        /// </summary>
        internal static string ConfigDataLabelText_Descrip {
            get {
                return ResourceManager.GetString("ConfigDataLabelText.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure data label&apos;s text.
        /// </summary>
        internal static string ConfigDataLabelText_Name {
            get {
                return ResourceManager.GetString("ConfigDataLabelText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to format a data point of a series in chart..
        /// </summary>
        internal static string ConfigDataPointFormat_Descrip {
            get {
                return ResourceManager.GetString("ConfigDataPointFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure data point&apos;s format.
        /// </summary>
        internal static string ConfigDataPointFormat_Name {
            get {
                return ResourceManager.GetString("ConfigDataPointFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to delete an error bar of chart..
        /// </summary>
        internal static string ConfigDeleteErrorBar_Descrip {
            get {
                return ResourceManager.GetString("ConfigDeleteErrorBar.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete error bar.
        /// </summary>
        internal static string ConfigDeleteErrorBar_Name {
            get {
                return ResourceManager.GetString("ConfigDeleteErrorBar.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to show and configure display unit label of a axis, such as the fill and border of label, as well as common font settings..
        /// </summary>
        internal static string ConfigDisplayUnitLabel_Descrip {
            get {
                return ResourceManager.GetString("ConfigDisplayUnitLabel.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure display unit label style.
        /// </summary>
        internal static string ConfigDisplayUnitLabel_Name {
            get {
                return ResourceManager.GetString("ConfigDisplayUnitLabel.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure include type and end cap type of error bar..
        /// </summary>
        internal static string ConfigErrorBarIncludeAndEndType_Descrip {
            get {
                return ResourceManager.GetString("ConfigErrorBarIncludeAndEndType.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set include type and end cap type.
        /// </summary>
        internal static string ConfigErrorBarIncludeAndEndType_Name {
            get {
                return ResourceManager.GetString("ConfigErrorBarIncludeAndEndType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure error bar&apos;s style..
        /// </summary>
        internal static string ConfigErrorBarStyle_Descrip {
            get {
                return ResourceManager.GetString("ConfigErrorBarStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Style.
        /// </summary>
        internal static string ConfigErrorBarStyle_Name {
            get {
                return ResourceManager.GetString("ConfigErrorBarStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you want a different header and footer for all the even pages, you first need to set the OddAndEvenPagesHeaderFooter property to true. When this is done, you can use the properties of the IPageSetup interface in order to configure the even page header and footer..
        /// </summary>
        internal static string ConfigEvenPageHeaderFooter_Descrip {
            get {
                return ResourceManager.GetString("ConfigEvenPageHeaderFooter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure even page header footer.
        /// </summary>
        internal static string ConfigEvenPageHeaderFooter_Name {
            get {
                return ResourceManager.GetString("ConfigEvenPageHeaderFooter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you want a different header and footer in your first page, you first need to set the DifferentFirstPageHeaderFooter property of the IPageSetup interface to true. When this is done, you can use the properties of the IPageSetup interface in order to configure the first page header and footer.
        /// </summary>
        internal static string ConfigFirstPageHeaderFooter_Descrip {
            get {
                return ResourceManager.GetString("ConfigFirstPageHeaderFooter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure first page header footer.
        /// </summary>
        internal static string ConfigFirstPageHeaderFooter_Name {
            get {
                return ResourceManager.GetString("ConfigFirstPageHeaderFooter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the FirstPageNumber property of the IPageSetup interface in order to configure the number for your first page as per your choice..
        /// </summary>
        internal static string ConfigFirstPageNumber_Descrip {
            get {
                return ResourceManager.GetString("ConfigFirstPageNumber.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure first page number.
        /// </summary>
        internal static string ConfigFirstPageNumber_Name {
            get {
                return ResourceManager.GetString("ConfigFirstPageNumber.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure a fixed value type error bar of chart..
        /// </summary>
        internal static string ConfigFixedValueErrorBar_Descrip {
            get {
                return ResourceManager.GetString("ConfigFixedValueErrorBar.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed value type.
        /// </summary>
        internal static string ConfigFixedValueErrorBar_Name {
            get {
                return ResourceManager.GetString("ConfigFixedValueErrorBar.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to set different path type of gradient fill..
        /// </summary>
        internal static string ConfigGradientFillWithPathShape_Descrip {
            get {
                return ResourceManager.GetString("ConfigGradientFillWithPathShape.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set gradient path type.
        /// </summary>
        internal static string ConfigGradientFillWithPathShape_Name {
            get {
                return ResourceManager.GetString("ConfigGradientFillWithPathShape.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure gridlines, you can show or hide the major and minor gridlines of each axis, you can also configure different properties of gridlines, such as line style, color and weight, etc..
        /// </summary>
        internal static string ConfigGridlines_Descrip {
            get {
                return ResourceManager.GetString("ConfigGridlines.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure gridline style.
        /// </summary>
        internal static string ConfigGridlines_Name {
            get {
                return ResourceManager.GetString("ConfigGridlines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In GcExcel, you can use the LeftHeader property, LeftFooter property, CenterFooter property, RightHeader property, CenterHeader property, and the RightFooter property of the IPageSetup interface in order to configure header and footer for a page..
        /// </summary>
        internal static string ConfigHeaderFooter_Descrip {
            get {
                return ResourceManager.GetString("ConfigHeaderFooter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure page header footer.
        /// </summary>
        internal static string ConfigHeaderFooter_Name {
            get {
                return ResourceManager.GetString("ConfigHeaderFooter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure font properties of a legend entry..
        /// </summary>
        internal static string ConfigLegendEntryFontStyle_Descrip {
            get {
                return ResourceManager.GetString("ConfigLegendEntryFontStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure legend entry font style.
        /// </summary>
        internal static string ConfigLegendEntryFontStyle_Name {
            get {
                return ResourceManager.GetString("ConfigLegendEntryFontStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to format legend of a chart..
        /// </summary>
        internal static string ConfigLegendFormat_Descrip {
            get {
                return ResourceManager.GetString("ConfigLegendFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure legend format.
        /// </summary>
        internal static string ConfigLegendFormat_Name {
            get {
                return ResourceManager.GetString("ConfigLegendFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to change the position of legend in a chart..
        /// </summary>
        internal static string ConfigLegendPositionAndLayout_Descrip {
            get {
                return ResourceManager.GetString("ConfigLegendPositionAndLayout.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure legend position and layout.
        /// </summary>
        internal static string ConfigLegendPositionAndLayout_Name {
            get {
                return ResourceManager.GetString("ConfigLegendPositionAndLayout.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to format the markers(fill and border) of a series..
        /// </summary>
        internal static string ConfigMarkersFormat_Descrip {
            get {
                return ResourceManager.GetString("ConfigMarkersFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure markers format.
        /// </summary>
        internal static string ConfigMarkersFormat_Name {
            get {
                return ResourceManager.GetString("ConfigMarkersFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to customize the style and size of markers..
        /// </summary>
        internal static string ConfigMarkerStyle_Descrip {
            get {
                return ResourceManager.GetString("ConfigMarkerStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure markers style.
        /// </summary>
        internal static string ConfigMarkerStyle_Name {
            get {
                return ResourceManager.GetString("ConfigMarkerStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to set the color for negative data points..
        /// </summary>
        internal static string ConfigNegativePoint_Descrip {
            get {
                return ResourceManager.GetString("ConfigNegativePoint.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure negative point style.
        /// </summary>
        internal static string ConfigNegativePoint_Name {
            get {
                return ResourceManager.GetString("ConfigNegativePoint.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the CenterHorizontally property and the CenterVertically property of the IPageSetup interface in order to configure the center of your page according to your preferences..
        /// </summary>
        internal static string ConfigPageCenter_Descrip {
            get {
                return ResourceManager.GetString("ConfigPageCenter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure page center.
        /// </summary>
        internal static string ConfigPageCenter_Name {
            get {
                return ResourceManager.GetString("ConfigPageCenter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the TopMargin property, RightMargin property and BottomMargin property of the IPageSetup interface in order to configure margins for a page..
        /// </summary>
        internal static string ConfigPageMargins_Descrip {
            get {
                return ResourceManager.GetString("ConfigPageMargins.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure page margins.
        /// </summary>
        internal static string ConfigPageMargins_Name {
            get {
                return ResourceManager.GetString("ConfigPageMargins.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the Order property of the IPageSetup interface in order to configure the order of the page as per your choice..
        /// </summary>
        internal static string ConfigPageOrder_Descrip {
            get {
                return ResourceManager.GetString("ConfigPageOrder.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure page order.
        /// </summary>
        internal static string ConfigPageOrder_Name {
            get {
                return ResourceManager.GetString("ConfigPageOrder.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the Orientation property of the IPageSetup interface in order to set the orientation for a page to Portrait or Landscape as per your preferences..
        /// </summary>
        internal static string ConfigPageOrientation_Descrip {
            get {
                return ResourceManager.GetString("ConfigPageOrientation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure page orientation.
        /// </summary>
        internal static string ConfigPageOrientation_Name {
            get {
                return ResourceManager.GetString("ConfigPageOrientation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the IsPercentScale property in order to control how to the spreadsheet is scaled; the FitToPagesTall property and the FitToPagesWide property in order to set its size; and the Zoom property in order to adjust the size of the paper that will be used for printing.You can use the IsPercentScale property in order to control how to the spreadsheet is scaled; the FitToPagesTall property and the FitToPagesWide property in order to set its size; and the Zoom property in order to adjust the size of the p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConfigPaperScaling_Descrip {
            get {
                return ResourceManager.GetString("ConfigPaperScaling.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure paper scaling.
        /// </summary>
        internal static string ConfigPaperScaling_Name {
            get {
                return ResourceManager.GetString("ConfigPaperScaling.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the PaperSize property in order to set the paper size for the paper that will be used for printing..
        /// </summary>
        internal static string ConfigPaperSize_Descrip {
            get {
                return ResourceManager.GetString("ConfigPaperSize.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure paper size.
        /// </summary>
        internal static string ConfigPaperSize_Name {
            get {
                return ResourceManager.GetString("ConfigPaperSize.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure a percentage type error bar of chart..
        /// </summary>
        internal static string ConfigPercentageErrorBar_Descrip {
            get {
                return ResourceManager.GetString("ConfigPercentageErrorBar.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Percentage type.
        /// </summary>
        internal static string ConfigPercentageErrorBar_Name {
            get {
                return ResourceManager.GetString("ConfigPercentageErrorBar.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to format plot area(fill and border)..
        /// </summary>
        internal static string ConfigPlotAreaFormat_Descrip {
            get {
                return ResourceManager.GetString("ConfigPlotAreaFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure plot area format.
        /// </summary>
        internal static string ConfigPlotAreaFormat_Name {
            get {
                return ResourceManager.GetString("ConfigPlotAreaFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel .NET supports customized printing by allowing users to select a range of cells in order to configure the desired print area in a worksheet..
        /// </summary>
        internal static string ConfigPrintArea_Descrip {
            get {
                return ResourceManager.GetString("ConfigPrintArea.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure print area.
        /// </summary>
        internal static string ConfigPrintArea_Name {
            get {
                return ResourceManager.GetString("ConfigPrintArea.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can configure columns in a worksheet in order to repeat them at the right by using the PrintTailColumns property of the IPageSetup interface..
        /// </summary>
        internal static string ConfigPrintTailColumns_Descrip {
            get {
                return ResourceManager.GetString("ConfigPrintTailColumns.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure columns to repeat at right.
        /// </summary>
        internal static string ConfigPrintTailColumns_Name {
            get {
                return ResourceManager.GetString("ConfigPrintTailColumns.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can configure rows in a worksheet in order to repeat them at the bottom using the PrintTailRows property of the IPageSetup interface..
        /// </summary>
        internal static string ConfigPrintTailRows_Descrip {
            get {
                return ResourceManager.GetString("ConfigPrintTailRows.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure rows to repeat at bottom.
        /// </summary>
        internal static string ConfigPrintTailRows_Name {
            get {
                return ResourceManager.GetString("ConfigPrintTailRows.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can configure columns in a worksheet in order to repeat them at the left by using the PrintTitleColumns property..
        /// </summary>
        internal static string ConfigPrintTitleColumns_Descrip {
            get {
                return ResourceManager.GetString("ConfigPrintTitleColumns.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure columns to repeat at left.
        /// </summary>
        internal static string ConfigPrintTitleColumns_Name {
            get {
                return ResourceManager.GetString("ConfigPrintTitleColumns.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can configure rows in a worksheet in order to repeat them at the top by using the PrintTitleRows property..
        /// </summary>
        internal static string ConfigPrintTitleRows_Descrip {
            get {
                return ResourceManager.GetString("ConfigPrintTitleRows.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure rows to repeat at top.
        /// </summary>
        internal static string ConfigPrintTitleRows_Name {
            get {
                return ResourceManager.GetString("ConfigPrintTitleRows.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to display superscript effect in a cell..
        /// </summary>
        internal static string ConfigRunFont_Descrip {
            get {
                return ResourceManager.GetString("ConfigRunFont.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure text run&apos;s font.
        /// </summary>
        internal static string ConfigRunFont_Name {
            get {
                return ResourceManager.GetString("ConfigRunFont.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure secondary plot for pie of pie chart..
        /// </summary>
        internal static string ConfigSecondarySection_Descrip {
            get {
                return ResourceManager.GetString("ConfigSecondarySection.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure secondary section for pie of pie chart.
        /// </summary>
        internal static string ConfigSecondarySection_Name {
            get {
                return ResourceManager.GetString("ConfigSecondarySection.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to format a data series..
        /// </summary>
        internal static string ConfigSeriesFormat_Descrip {
            get {
                return ResourceManager.GetString("ConfigSeriesFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure series format.
        /// </summary>
        internal static string ConfigSeriesFormat_Name {
            get {
                return ResourceManager.GetString("ConfigSeriesFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure three-D properties of a shape..
        /// </summary>
        internal static string ConfigShape3DFormat_Descrip {
            get {
                return ResourceManager.GetString("ConfigShape3DFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s 3D format.
        /// </summary>
        internal static string ConfigShape3DFormat_Name {
            get {
                return ResourceManager.GetString("ConfigShape3DFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to format the border of a shape..
        /// </summary>
        internal static string ConfigShapeLine_Descrip {
            get {
                return ResourceManager.GetString("ConfigShapeLine.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s line format.
        /// </summary>
        internal static string ConfigShapeLine_Name {
            get {
                return ResourceManager.GetString("ConfigShapeLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to set gradient fill for a shape..
        /// </summary>
        internal static string ConfigShapeWithGradientFill_Descrip {
            get {
                return ResourceManager.GetString("ConfigShapeWithGradientFill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s gradient fill.
        /// </summary>
        internal static string ConfigShapeWithGradientFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithGradientFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to set pattern fill for a shape..
        /// </summary>
        internal static string ConfigShapeWithPatternFill_Descrip {
            get {
                return ResourceManager.GetString("ConfigShapeWithPatternFill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s pattern fill.
        /// </summary>
        internal static string ConfigShapeWithPatternFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithPatternFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to set picture fill for a shape..
        /// </summary>
        internal static string ConfigShapeWithPictureFill_Descrip {
            get {
                return ResourceManager.GetString("ConfigShapeWithPictureFill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s picture fill.
        /// </summary>
        internal static string ConfigShapeWithPictureFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithPictureFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to set solid fill for a shape..
        /// </summary>
        internal static string ConfigShapeWithSolidFill_Descrip {
            get {
                return ResourceManager.GetString("ConfigShapeWithSolidFill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s solid fill.
        /// </summary>
        internal static string ConfigShapeWithSolidFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithSolidFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to set texture fill for a shape..
        /// </summary>
        internal static string ConfigShapeWithTextureFill_Descrip {
            get {
                return ResourceManager.GetString("ConfigShapeWithTextureFill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s texture fill.
        /// </summary>
        internal static string ConfigShapeWithTextureFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithTextureFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to customize the print settings of a worksheet, such as whether to print grid lines and headings..
        /// </summary>
        internal static string ConfigSheetPrintSettings_Descrip {
            get {
                return ResourceManager.GetString("ConfigSheetPrintSettings.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure sheet print settings.
        /// </summary>
        internal static string ConfigSheetPrintSettings_Name {
            get {
                return ResourceManager.GetString("ConfigSheetPrintSettings.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to config the layout of a slicer object..
        /// </summary>
        internal static string ConfigSlicerLayout_Descrip {
            get {
                return ResourceManager.GetString("ConfigSlicerLayout.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure slicer layout.
        /// </summary>
        internal static string ConfigSlicerLayout_Name {
            get {
                return ResourceManager.GetString("ConfigSlicerLayout.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure sparklines, such as line weight, marker color and series color..
        /// </summary>
        internal static string ConfigSparklineSettings_Descrip {
            get {
                return ResourceManager.GetString("ConfigSparklineSettings.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure sparkline settings.
        /// </summary>
        internal static string ConfigSparklineSettings_Name {
            get {
                return ResourceManager.GetString("ConfigSparklineSettings.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure a standard error type error bar of chart..
        /// </summary>
        internal static string ConfigStdErrErrorBar_Descrip {
            get {
                return ResourceManager.GetString("ConfigStdErrErrorBar.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard error type.
        /// </summary>
        internal static string ConfigStdErrErrorBar_Name {
            get {
                return ResourceManager.GetString("ConfigStdErrErrorBar.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure a standard deviation type error bar of chart..
        /// </summary>
        internal static string ConfigStDevErrorBar_Descrip {
            get {
                return ResourceManager.GetString("ConfigStDevErrorBar.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard deviation type.
        /// </summary>
        internal static string ConfigStDevErrorBar_Name {
            get {
                return ResourceManager.GetString("ConfigStDevErrorBar.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure the tick labels of axis, you can  customize the fill and border of tick labels, can also set different font properties, such as font size, font name, font style, etc. .
        /// </summary>
        internal static string ConfigTickMarkLabel_Descrip {
            get {
                return ResourceManager.GetString("ConfigTickMarkLabel.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set tick mark label style.
        /// </summary>
        internal static string ConfigTickMarkLabel_Name {
            get {
                return ResourceManager.GetString("ConfigTickMarkLabel.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure the tick labels&apos; angle of axis..
        /// </summary>
        internal static string ConfigTickMarkLabelAngle_Descrip {
            get {
                return ResourceManager.GetString("ConfigTickMarkLabelAngle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set angle of tick mark labels.
        /// </summary>
        internal static string ConfigTickMarkLabelAngle_Name {
            get {
                return ResourceManager.GetString("ConfigTickMarkLabelAngle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set best fit row/column to auto fit row height/column width when exporting PDF.
        /// </summary>
        internal static string ConfigureBestFitRowColumn_Descrip {
            get {
                return ResourceManager.GetString("ConfigureBestFitRowColumn.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BestFit row &amp; column.
        /// </summary>
        internal static string ConfigureBestFitRowColumn_Name {
            get {
                return ResourceManager.GetString("ConfigureBestFitRowColumn.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export spreadsheet of black and white effect to PDF file..
        /// </summary>
        internal static string ConfigureBlackAndWhite_Descrip {
            get {
                return ResourceManager.GetString("ConfigureBlackAndWhite.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Black &amp; white.
        /// </summary>
        internal static string ConfigureBlackAndWhite_Name {
            get {
                return ResourceManager.GetString("ConfigureBlackAndWhite.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export spreadsheet of draft effect to PDF file..
        /// </summary>
        internal static string ConfigureDraft_Descrip {
            get {
                return ResourceManager.GetString("ConfigureDraft.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draft.
        /// </summary>
        internal static string ConfigureDraft_Name {
            get {
                return ResourceManager.GetString("ConfigureDraft.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The header/footer settings of PageSetup will be applied in the exported PDF file..
        /// </summary>
        internal static string ConfigureHeaderFooter_Descrip {
            get {
                return ResourceManager.GetString("ConfigureHeaderFooter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Header footer.
        /// </summary>
        internal static string ConfigureHeaderFooter_Name {
            get {
                return ResourceManager.GetString("ConfigureHeaderFooter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The orientation setting of PageSetup will be applied in the exported PDF file..
        /// </summary>
        internal static string ConfigureOritation_Descrip {
            get {
                return ResourceManager.GetString("ConfigureOritation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Orientation.
        /// </summary>
        internal static string ConfigureOritation_Name {
            get {
                return ResourceManager.GetString("ConfigureOritation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The page break settings will be applied in the exported PDF file..
        /// </summary>
        internal static string ConfigurePageBreaks_Descrip {
            get {
                return ResourceManager.GetString("ConfigurePageBreaks.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page breaks.
        /// </summary>
        internal static string ConfigurePageBreaks_Name {
            get {
                return ResourceManager.GetString("ConfigurePageBreaks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel will do pagination according to the page order setting of PageSetupand and export pages to PDF file..
        /// </summary>
        internal static string ConfigurePageOrder_Descrip {
            get {
                return ResourceManager.GetString("ConfigurePageOrder.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page order.
        /// </summary>
        internal static string ConfigurePageOrder_Name {
            get {
                return ResourceManager.GetString("ConfigurePageOrder.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All page setup settings will applied in the exported PDF file..
        /// </summary>
        internal static string ConfigurePageSetup_Descrip {
            get {
                return ResourceManager.GetString("ConfigurePageSetup.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page settings.
        /// </summary>
        internal static string ConfigurePageSetup_Name {
            get {
                return ResourceManager.GetString("ConfigurePageSetup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel will first do pagination and then export each page to PDF file..
        /// </summary>
        internal static string ConfigurePagination_Descrip {
            get {
                return ResourceManager.GetString("ConfigurePagination.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pagination.
        /// </summary>
        internal static string ConfigurePagination_Name {
            get {
                return ResourceManager.GetString("ConfigurePagination.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel will only export the specified area to PDF if PageSetup.PrintArea is set..
        /// </summary>
        internal static string ConfigurePrintArea_Descrip {
            get {
                return ResourceManager.GetString("ConfigurePrintArea.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print area.
        /// </summary>
        internal static string ConfigurePrintArea_Name {
            get {
                return ResourceManager.GetString("ConfigurePrintArea.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel will only export the specified pages to PDF if PageSetup.PrintPageRange is set..
        /// </summary>
        internal static string ConfigurePrintPageRange_Descrip {
            get {
                return ResourceManager.GetString("ConfigurePrintPageRange.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print page range.
        /// </summary>
        internal static string ConfigurePrintPageRange_Name {
            get {
                return ResourceManager.GetString("ConfigurePrintPageRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tail rows and columns will be applied in the exported PDF file..
        /// </summary>
        internal static string ConfigurePrintTails_Descrip {
            get {
                return ResourceManager.GetString("ConfigurePrintTails.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print tails.
        /// </summary>
        internal static string ConfigurePrintTails_Name {
            get {
                return ResourceManager.GetString("ConfigurePrintTails.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The title rows and columns will be applied in the exported PDF file..
        /// </summary>
        internal static string ConfigurePrintTitles_Descrip {
            get {
                return ResourceManager.GetString("ConfigurePrintTitles.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print titles.
        /// </summary>
        internal static string ConfigurePrintTitles_Name {
            get {
                return ResourceManager.GetString("ConfigurePrintTitles.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scale settings will be applied in the exported PDF file..
        /// </summary>
        internal static string ConfigureScaling_Descrip {
            get {
                return ResourceManager.GetString("ConfigureScaling.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scaling.
        /// </summary>
        internal static string ConfigureScaling_Name {
            get {
                return ResourceManager.GetString("ConfigureScaling.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure a workbook view, such as such as whether to display scrollbars, whether to show tabs, and so on..
        /// </summary>
        internal static string ConfigureWorkbookView_Descrip {
            get {
                return ResourceManager.GetString("ConfigureWorkbookView.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure workbook view.
        /// </summary>
        internal static string ConfigureWorkbookView_Name {
            get {
                return ResourceManager.GetString("ConfigureWorkbookView.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to configure the worksheet view object, such as whether to display grid line, or the zoom factor and so on..
        /// </summary>
        internal static string ConfigureWorksheetView_Descrip {
            get {
                return ResourceManager.GetString("ConfigureWorksheetView.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure worksheet view.
        /// </summary>
        internal static string ConfigureWorksheetView_Name {
            get {
                return ResourceManager.GetString("ConfigureWorksheetView.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure the format of value axis, such as to customize the line style, line color, fill color, etc..
        /// </summary>
        internal static string ConfigValueAxesFormat_Descrip {
            get {
                return ResourceManager.GetString("ConfigValueAxesFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure value axis style.
        /// </summary>
        internal static string ConfigValueAxesFormat_Name {
            get {
                return ResourceManager.GetString("ConfigValueAxesFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure value axis, such as axis&apos; maximum/minimum scale, major/minor unit, etc..
        /// </summary>
        internal static string ConfigValueAxisUnits_Descrip {
            get {
                return ResourceManager.GetString("ConfigValueAxisUnits.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set value axis units.
        /// </summary>
        internal static string ConfigValueAxisUnits_Name {
            get {
                return ResourceManager.GetString("ConfigValueAxisUnits.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how reference style can be set in a workbook..
        /// </summary>
        internal static string ConfigWorkbookReferenceStyle_Descrip {
            get {
                return ResourceManager.GetString("ConfigWorkbookReferenceStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set workbook&apos;s reference style.
        /// </summary>
        internal static string ConfigWorkbookReferenceStyle_Name {
            get {
                return ResourceManager.GetString("ConfigWorkbookReferenceStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to configure a worksheet..
        /// </summary>
        internal static string ConfigWorksheet_Descrip {
            get {
                return ResourceManager.GetString("ConfigWorksheet.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure worksheet properties.
        /// </summary>
        internal static string ConfigWorksheet_Name {
            get {
                return ResourceManager.GetString("ConfigWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure X and Y direction error bar of scatter or bubble chart..
        /// </summary>
        internal static string ConfigXYErrorBars_Descrip {
            get {
                return ResourceManager.GetString("ConfigXYErrorBars.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to X and Y direction.
        /// </summary>
        internal static string ConfigXYErrorBars_Name {
            get {
                return ResourceManager.GetString("ConfigXYErrorBars.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to connect two shapes with a connector..
        /// </summary>
        internal static string ConnectShapesByConnector_Descrip {
            get {
                return ResourceManager.GetString("ConnectShapesByConnector.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect shapes with connector shape.
        /// </summary>
        internal static string ConnectShapesByConnector_Name {
            get {
                return ResourceManager.GetString("ConnectShapesByConnector.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to add, delete and adjust page breaks within a worksheet..
        /// </summary>
        internal static string ControlAdjustingPageBreaks_Descrip {
            get {
                return ResourceManager.GetString("ControlAdjustingPageBreaks.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control adjustment of page breaks.
        /// </summary>
        internal static string ControlAdjustingPageBreaks_Name {
            get {
                return ResourceManager.GetString("ControlAdjustingPageBreaks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to convert a chart in spreadsheet to an image..
        /// </summary>
        internal static string ConvertChartToImage_Descrip {
            get {
                return ResourceManager.GetString("ConvertChartToImage.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert chart to image.
        /// </summary>
        internal static string ConvertChartToImage_Name {
            get {
                return ResourceManager.GetString("ConvertChartToImage.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following code to see how to convert an Excel file to PDF document with GcExcel..
        /// </summary>
        internal static string ConvertExcelToPDF_Descrip {
            get {
                return ResourceManager.GetString("ConvertExcelToPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert Excel file to PDF.
        /// </summary>
        internal static string ConvertExcelToPDF_Name {
            get {
                return ResourceManager.GetString("ConvertExcelToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to convert a spreadsheet range to an image..
        /// </summary>
        internal static string ConvertRangeToImage_Descrip {
            get {
                return ResourceManager.GetString("ConvertRangeToImage.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert range to image.
        /// </summary>
        internal static string ConvertRangeToImage_Name {
            get {
                return ResourceManager.GetString("ConvertRangeToImage.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to convert a shape in spreadsheet to an image..
        /// </summary>
        internal static string ConvertShapeToImage_Descrip {
            get {
                return ResourceManager.GetString("ConvertShapeToImage.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert shape to image.
        /// </summary>
        internal static string ConvertShapeToImage_Name {
            get {
                return ResourceManager.GetString("ConvertShapeToImage.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users can choose from several paste options while copying the data from the cell range. Users can also combine the two different paste options..
        /// </summary>
        internal static string CopyPasteOptions_Descrip {
            get {
                return ResourceManager.GetString("CopyPasteOptions.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste options of copy.
        /// </summary>
        internal static string CopyPasteOptions_Name {
            get {
                return ResourceManager.GetString("CopyPasteOptions.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to copy a worksheet within workbook..
        /// </summary>
        internal static string CopyWorksheet_Descrip {
            get {
                return ResourceManager.GetString("CopyWorksheet.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy worksheet.
        /// </summary>
        internal static string CopyWorksheet_Name {
            get {
                return ResourceManager.GetString("CopyWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to copy a worksheet between different workbooks..
        /// </summary>
        internal static string CopyWorksheetBetweenWorkbooks_Descrip {
            get {
                return ResourceManager.GetString("CopyWorksheetBetweenWorkbooks.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy worksheet between workbooks.
        /// </summary>
        internal static string CopyWorksheetBetweenWorkbooks_Name {
            get {
                return ResourceManager.GetString("CopyWorksheetBetweenWorkbooks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cost analysis with Pareto chart.
        /// </summary>
        internal static string CostAnalysisWithParetoChart_Name {
            get {
                return ResourceManager.GetString("CostAnalysisWithParetoChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create an average rule on a range..
        /// </summary>
        internal static string CreateAverageRule_Descrip {
            get {
                return ResourceManager.GetString("CreateAverageRule.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create average rule.
        /// </summary>
        internal static string CreateAverageRule_Name {
            get {
                return ResourceManager.GetString("CreateAverageRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cell value rule compares values entered in the cells with the condition specified in the conditional formatting rule. This sample demonstrates how to add a cell value rule..
        /// </summary>
        internal static string CreateCellValueRule_Descrip {
            get {
                return ResourceManager.GetString("CreateCellValueRule.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create cell value rule.
        /// </summary>
        internal static string CreateCellValueRule_Name {
            get {
                return ResourceManager.GetString("CreateCellValueRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a chart in GcExcel..
        /// </summary>
        internal static string CreateChart_Descrip {
            get {
                return ResourceManager.GetString("CreateChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create chart.
        /// </summary>
        internal static string CreateChart_Name {
            get {
                return ResourceManager.GetString("CreateChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to create a chart with custom name. .
        /// </summary>
        internal static string CreateChartWithCustomName_Descrip {
            get {
                return ResourceManager.GetString("CreateChartWithCustomName.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart with custom name.
        /// </summary>
        internal static string CreateChartWithCustomName_Name {
            get {
                return ResourceManager.GetString("CreateChartWithCustomName.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to show and customize connection lines for pie of pie chart..
        /// </summary>
        internal static string CreateConnectorLine_Descrip {
            get {
                return ResourceManager.GetString("CreateConnectorLine.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create connector line for pie of pie chart.
        /// </summary>
        internal static string CreateConnectorLine_Name {
            get {
                return ResourceManager.GetString("CreateConnectorLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create connector shape.
        /// </summary>
        internal static string CreateConnectorShape_Name {
            get {
                return ResourceManager.GetString("CreateConnectorShape.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can create a named style, configure it as per your preferences and then apply it to a cell or range..
        /// </summary>
        internal static string CreateCustomStyle_Descrip {
            get {
                return ResourceManager.GetString("CreateCustomStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create custom style.
        /// </summary>
        internal static string CreateCustomStyle_Name {
            get {
                return ResourceManager.GetString("CreateCustomStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the Add method of the IValidation interface to apply data validation to individual cells or a range of cells in a spreadsheet. A single cell can have only one validation rule and if you try to apply validation on a cell that already possesses a validation rule, it will throw an exception. You can add a custom validation rule to validate data in a worksheet by applying custom validation..
        /// </summary>
        internal static string CreateCustomValidation_Descip {
            get {
                return ResourceManager.GetString("CreateCustomValidation.Descip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can add a custom validation rule to validate data in a worksheet by applying custom validation..
        /// </summary>
        internal static string CreateCustomValidation_Descrip {
            get {
                return ResourceManager.GetString("CreateCustomValidation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create custom validation.
        /// </summary>
        internal static string CreateCustomValidation_Name {
            get {
                return ResourceManager.GetString("CreateCustomValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to create a data bar rule on a range..
        /// </summary>
        internal static string CreateDatabBarRule_Descrip {
            get {
                return ResourceManager.GetString("CreateDatabBarRule.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create data bar rule.
        /// </summary>
        internal static string CreateDatabBarRule_Name {
            get {
                return ResourceManager.GetString("CreateDatabBarRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can validate data entered in date format in cells or a range of cells by applying the date validation in a worksheet..
        /// </summary>
        internal static string CreateDateValidation_Descrip {
            get {
                return ResourceManager.GetString("CreateDateValidation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create date validation.
        /// </summary>
        internal static string CreateDateValidation_Name {
            get {
                return ResourceManager.GetString("CreateDateValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can validate your data and ensure users add only decimal numbers in cells or a range of cells by applying the decimal validation in a worksheet..
        /// </summary>
        internal static string CreateDecimalValidation_Descrip {
            get {
                return ResourceManager.GetString("CreateDecimalValidation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create decimal validation.
        /// </summary>
        internal static string CreateDecimalValidation_Name {
            get {
                return ResourceManager.GetString("CreateDecimalValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to show and customize drop lines for line chart..
        /// </summary>
        internal static string CreateDropLine_Descrip {
            get {
                return ResourceManager.GetString("CreateDropLine.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create drop line.
        /// </summary>
        internal static string CreateDropLine_Name {
            get {
                return ResourceManager.GetString("CreateDropLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expression rule in conditional formatting is used to set the expression rule&apos;s formula. This rule can be added using the properties and methods of the IFormatCondition interface..
        /// </summary>
        internal static string CreateExpressionRule_Descrip {
            get {
                return ResourceManager.GetString("CreateExpressionRule.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create expression rule.
        /// </summary>
        internal static string CreateExpressionRule_Name {
            get {
                return ResourceManager.GetString("CreateExpressionRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to show and customize high-low lines for line chart..
        /// </summary>
        internal static string CreateHiLoLine_Descrip {
            get {
                return ResourceManager.GetString("CreateHiLoLine.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create high-low line.
        /// </summary>
        internal static string CreateHiLoLine_Name {
            get {
                return ResourceManager.GetString("CreateHiLoLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to insert hyperlinks to an external file, to a web page, to a range within the worksheet and to an email address..
        /// </summary>
        internal static string CreateHyperlinks_Descrip {
            get {
                return ResourceManager.GetString("CreateHyperlinks.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create hyperlinks.
        /// </summary>
        internal static string CreateHyperlinks_Name {
            get {
                return ResourceManager.GetString("CreateHyperlinks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The icon sets rule in conditional formatting displays the icons on the basis of values entered in the cells. Each value represents a distinct icon that appears in a cell if it matches the icon sets rule applied on it. This rule can be added using the properties and methods of the IIconSetCondition interface..
        /// </summary>
        internal static string CreateIconSetRule_Descrip {
            get {
                return ResourceManager.GetString("CreateIconSetRule.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create icon set rule.
        /// </summary>
        internal static string CreateIconSetRule_Name {
            get {
                return ResourceManager.GetString("CreateIconSetRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can also validate lists inserted in cells or a range of cells by applying the list validation in your worksheet ..
        /// </summary>
        internal static string CreateListValidation_Descrip {
            get {
                return ResourceManager.GetString("CreateListValidation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create list validation.
        /// </summary>
        internal static string CreateListValidation_Name {
            get {
                return ResourceManager.GetString("CreateListValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can apply multilple conditional formatting to one range, each conditional formatting will take effect by the order of their priorities, you can use StopIfTrue to stop applying subsequent condional formatting..
        /// </summary>
        internal static string CreateMultiRuleForRange_Descrip {
            get {
                return ResourceManager.GetString("CreateMultiRuleForRange.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create multiple rules for a range.
        /// </summary>
        internal static string CreateMultiRuleForRange_Name {
            get {
                return ResourceManager.GetString("CreateMultiRuleForRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to create a workbook..
        /// </summary>
        internal static string CreateNewWorkbook_Descrip {
            get {
                return ResourceManager.GetString("CreateNewWorkbook.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create new workbook.
        /// </summary>
        internal static string CreateNewWorkbook_Name {
            get {
                return ResourceManager.GetString("CreateNewWorkbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to create a picture object in worksheet..
        /// </summary>
        internal static string CreatePicture_Descrip {
            get {
                return ResourceManager.GetString("CreatePicture.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create picture.
        /// </summary>
        internal static string CreatePicture_Name {
            get {
                return ResourceManager.GetString("CreatePicture.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to create a pivot table in GcExcel..
        /// </summary>
        internal static string CreatePivotTable_Descrip {
            get {
                return ResourceManager.GetString("CreatePivotTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create pivot tables.
        /// </summary>
        internal static string CreatePivotTable_Name {
            get {
                return ResourceManager.GetString("CreatePivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can apply row/column grouping by using the Group method of the IRange interface and specifying the rows/columns you want to apply grouping on. Refer to the following example code to apply row/column grouping in a worksheet..
        /// </summary>
        internal static string CreateRangeGroup_Descrip {
            get {
                return ResourceManager.GetString("CreateRangeGroup.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create range group.
        /// </summary>
        internal static string CreateRangeGroup_Name {
            get {
                return ResourceManager.GetString("CreateRangeGroup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to make a data series use secondary axis..
        /// </summary>
        internal static string CreateSecondaryAxis_Descrip {
            get {
                return ResourceManager.GetString("CreateSecondaryAxis.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create secondary axis.
        /// </summary>
        internal static string CreateSecondaryAxis_Name {
            get {
                return ResourceManager.GetString("CreateSecondaryAxis.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to show and customize series lines..
        /// </summary>
        internal static string CreateSeriesLine_Descrip {
            get {
                return ResourceManager.GetString("CreateSeriesLine.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create series line for column chart.
        /// </summary>
        internal static string CreateSeriesLine_Name {
            get {
                return ResourceManager.GetString("CreateSeriesLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to add a hyperlink to a shape..
        /// </summary>
        internal static string CreateShapeWithHyperlink_Descrip {
            get {
                return ResourceManager.GetString("CreateShapeWithHyperlink.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create hyperlinks on shape.
        /// </summary>
        internal static string CreateShapeWithHyperlink_Name {
            get {
                return ResourceManager.GetString("CreateShapeWithHyperlink.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to create sparklines in a worksheet..
        /// </summary>
        internal static string CreateSparklines_Descrip {
            get {
                return ResourceManager.GetString("CreateSparklines.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create sparklines.
        /// </summary>
        internal static string CreateSparklines_Name {
            get {
                return ResourceManager.GetString("CreateSparklines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With GcExcel.NET, you don&apos;t always need to create a custom named style right from the scratch. Instead, you can modify an existing style (via getting the existing style from the Styles collection) as per your specific preferences and save the new style as another workbook style that can be used as and when required..
        /// </summary>
        internal static string CreateStyleBasedOn_Descrip {
            get {
                return ResourceManager.GetString("CreateStyleBasedOn.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create and modify style based on a style.
        /// </summary>
        internal static string CreateStyleBasedOn_Name {
            get {
                return ResourceManager.GetString("CreateStyleBasedOn.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In GcExcel .NET, you can create tables in spreadsheets using the Add method of the ITables interface, or simply transform a cell range into a table by specifying the existing data lying in a worksheet..
        /// </summary>
        internal static string CreateTable_Descrip {
            get {
                return ResourceManager.GetString("CreateTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a table.
        /// </summary>
        internal static string CreateTable_Name {
            get {
                return ResourceManager.GetString("CreateTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can validate the length of the text entered in cells or a range of cells by applying the text length validation in a worksheet..
        /// </summary>
        internal static string CreateTextLength_Descrip {
            get {
                return ResourceManager.GetString("CreateTextLength.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create text length validation.
        /// </summary>
        internal static string CreateTextLength_Name {
            get {
                return ResourceManager.GetString("CreateTextLength.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The color scale rule uses a sliding color scale to format cells or a range of cells. For instance, if numeric cell value 1 is represented with color yellow and 50 with green, then 25 would be light green. This rule can be added using the properties and methods of the IColorScale interface..
        /// </summary>
        internal static string CreateThreeColorScaleRule_Descrip {
            get {
                return ResourceManager.GetString("CreateThreeColorScaleRule.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create three color scale rule.
        /// </summary>
        internal static string CreateThreeColorScaleRule_Name {
            get {
                return ResourceManager.GetString("CreateThreeColorScaleRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can validate the time entered in cells or a range of cells by applying the time validation in a worksheet..
        /// </summary>
        internal static string CreateTimeValidation_Descrip {
            get {
                return ResourceManager.GetString("CreateTimeValidation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create time validation.
        /// </summary>
        internal static string CreateTimeValidation_Name {
            get {
                return ResourceManager.GetString("CreateTimeValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The top bottom rule checks whether the values in the top or bottom of a cell range match with the required values in the cell. In case the values don&apos;t match, the data is considered as invalid. This rule can be added using the properties and methods of the ITop10 interface..
        /// </summary>
        internal static string CreateTopBottomRule_Descrip {
            get {
                return ResourceManager.GetString("CreateTopBottomRule.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create top bottom rule.
        /// </summary>
        internal static string CreateTopBottomRule_Name {
            get {
                return ResourceManager.GetString("CreateTopBottomRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to show and customize trend lines..
        /// </summary>
        internal static string CreateTrendline_Descrip {
            get {
                return ResourceManager.GetString("CreateTrendline.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create trend line.
        /// </summary>
        internal static string CreateTrendline_Name {
            get {
                return ResourceManager.GetString("CreateTrendline.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The color scale rule uses a sliding color scale to format cells or a range of cells. For instance, if numeric cell value 1 is represented with color yellow and 50 with green, then 25 would be light green. This rule can be added using the properties and methods of the IColorScale interface..
        /// </summary>
        internal static string CreateTwoColorScaleRule_Descrip {
            get {
                return ResourceManager.GetString("CreateTwoColorScaleRule.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create two color scale rule.
        /// </summary>
        internal static string CreateTwoColorScaleRule_Name {
            get {
                return ResourceManager.GetString("CreateTwoColorScaleRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The unique rule in conditional formatting is applied to check whether the value entered in a cell is a unique value in that particular range. This is possible only when the duplication option is set to false. To check for the duplicate values, the duplicate rule is applied separately..
        /// </summary>
        internal static string CreateUniqueRule_Descrip {
            get {
                return ResourceManager.GetString("CreateUniqueRule.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create unique rule.
        /// </summary>
        internal static string CreateUniqueRule_Name {
            get {
                return ResourceManager.GetString("CreateUniqueRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to show and customize up/down bars for line chart..
        /// </summary>
        internal static string CreateUpDownBars_Descrip {
            get {
                return ResourceManager.GetString("CreateUpDownBars.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create up down bars for line chart.
        /// </summary>
        internal static string CreateUpDownBars_Name {
            get {
                return ResourceManager.GetString("CreateUpDownBars.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can validate your data and ensure users add only whole numbers in cells or a range of cells by applying the whole number validation in a worksheet..
        /// </summary>
        internal static string CreateWholeNumberValidation_Descrip {
            get {
                return ResourceManager.GetString("CreateWholeNumberValidation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create whole number validation.
        /// </summary>
        internal static string CreateWholeNumberValidation_Name {
            get {
                return ResourceManager.GetString("CreateWholeNumberValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer profitability analysis.
        /// </summary>
        internal static string CustomerProfitabilityAnalysis_Name {
            get {
                return ResourceManager.GetString("CustomerProfitabilityAnalysis.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Custom Function
        ///GcExcel provides you with the ability to create your own custom functions, allowing you to easily create any custom arithmetic logic you may need..
        /// </summary>
        internal static string CustomFunctions_Descrip {
            get {
                return ResourceManager.GetString("CustomFunctions.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Function.
        /// </summary>
        internal static string CustomFunctions_Name {
            get {
                return ResourceManager.GetString("CustomFunctions.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to set a custom number format to a cell..
        /// </summary>
        internal static string CustomNumberFormat_Descrip {
            get {
                return ResourceManager.GetString("CustomNumberFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set custom number format.
        /// </summary>
        internal static string CustomNumberFormat_Name {
            get {
                return ResourceManager.GetString("CustomNumberFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User can use **custom object** as the data source of GcExcel Template, and take its fields and properties as data field in template..
        /// </summary>
        internal static string CustomObject_Descrip {
            get {
                return ResourceManager.GetString("CustomObject.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom object.
        /// </summary>
        internal static string CustomObject_Name {
            get {
                return ResourceManager.GetString("CustomObject.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to customize the page settings of any page and then export to PDF file..
        /// </summary>
        internal static string CustomPageInfos_Descrip {
            get {
                return ResourceManager.GetString("CustomPageInfos.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom pageInfos.
        /// </summary>
        internal static string CustomPageInfos_Name {
            get {
                return ResourceManager.GetString("CustomPageInfos.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export spreadsheets that contain custom shapes into a PDF file..
        /// </summary>
        internal static string CustomShape_Descrip {
            get {
                return ResourceManager.GetString("CustomShape.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom shapes.
        /// </summary>
        internal static string CustomShape_Name {
            get {
                return ResourceManager.GetString("CustomShape.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to create a custom sort for a range..
        /// </summary>
        internal static string CustomSort_Descrip {
            get {
                return ResourceManager.GetString("CustomSort.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort list by custom parameter.
        /// </summary>
        internal static string CustomSort_Name {
            get {
                return ResourceManager.GetString("CustomSort.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel .NET provides users with the ability to cut or copy a cell or a range of cells from a specific area and paste it into another area within the same worksheet or in other worksheets. Also, users can choose from multiple paste options and also combine different paste options while copying the data from the cell range..
        /// </summary>
        internal static string CutCopyRange_Descrip {
            get {
                return ResourceManager.GetString("CutCopyRange.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut or copy ranges.
        /// </summary>
        internal static string CutCopyRange_Name {
            get {
                return ResourceManager.GetString("CutCopyRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Besides cut or copy range within a workbook, GcExcel also has the ability to cut or copy a range between different workbooks..
        /// </summary>
        internal static string CutCopyRangeBetweenWorkbooks_Descrip {
            get {
                return ResourceManager.GetString("CutCopyRangeBetweenWorkbooks.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut or copy range between workbooks.
        /// </summary>
        internal static string CutCopyRangeBetweenWorkbooks_Name {
            get {
                return ResourceManager.GetString("CutCopyRangeBetweenWorkbooks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Data Binding
        ///GrapeCity Documents for Excel now supports one-time data binding. 
        ///
        ///- **Sheet binding**: bind source data to sheet
        ///- **Cell binding**: bind source data to cell
        ///- **Table binding**: bind source data to table .
        /// </summary>
        internal static string DataBinding_Descrip {
            get {
                return ResourceManager.GetString("DataBinding.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data binding.
        /// </summary>
        internal static string DataBinding_Name {
            get {
                return ResourceManager.GetString("DataBinding.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Data label
        ///**Data labels** can display specified series information. Use ShowLegendKey, ShowPercentage, ShowValue, ShowSeriesName, .etc to configure data label layout. These examples demonstrate how to display data labels and specify settings for data labels..
        /// </summary>
        internal static string DataLabel_Descrip {
            get {
                return ResourceManager.GetString("DataLabel.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data label.
        /// </summary>
        internal static string DataLabel_Name {
            get {
                return ResourceManager.GetString("DataLabel.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Data point
        ///**Data points** are a collection of all points in a specific series. These examples demonstrate how to specify settings for data points..
        /// </summary>
        internal static string DataPoint_Descrip {
            get {
                return ResourceManager.GetString("DataPoint.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data point.
        /// </summary>
        internal static string DataPoint_Name {
            get {
                return ResourceManager.GetString("DataPoint.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User can use .Net **DataSet** as the data source of GcExcel Template..
        /// </summary>
        internal static string DataSet_Descrip {
            get {
                return ResourceManager.GetString("DataSet.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataSet.
        /// </summary>
        internal static string DataSet_Name {
            get {
                return ResourceManager.GetString("DataSet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Data source
        ///The template API can bind Excel templates directly with data from following objects:
        ///
        ///- **DataSet/DataTable:** Can handle data source from any type of DB
        ///- **Custom Object:** These are user defined objects. Can handle data source from Json String/File/XML, etc. That is, any data souce that can be serialized as a custom object.
        ///- **Variable:** User defined variable in code.
        ///- **Array/List:** User defined array/list in code..
        /// </summary>
        internal static string DataSource_Descrip {
            get {
                return ResourceManager.GetString("DataSource.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data source.
        /// </summary>
        internal static string DataSource_Name {
            get {
                return ResourceManager.GetString("DataSource.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User can use .Net **DataTable** as the data source of GcExcel Template..
        /// </summary>
        internal static string DataTable_Descrip {
            get {
                return ResourceManager.GetString("DataTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        internal static string DataTable_Name {
            get {
                return ResourceManager.GetString("DataTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind data with a template which consists of a data field of data source..
        /// </summary>
        internal static string DataTemplate_Descrip {
            get {
                return ResourceManager.GetString("DataTemplate.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data template.
        /// </summary>
        internal static string DataTemplate_Name {
            get {
                return ResourceManager.GetString("DataTemplate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Data Validation
        ///GrapeCity Documents for Excel lets you validate data by restricting the information format and the values that can be entered in cells of a worksheet. You can create distinct validation scenarios for individual cells or for a range of cells.
        ///
        ///GrapeCity Documents for Excel supports all types of validations, including:
        ///- Whole Number
        ///- Decimal
        ///- List
        ///- Date
        ///- Time
        ///- Text length
        ///- Custom
        ///
        ///Add validation for a range using the **Add** method of  **IRange.Validation** property. The  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DataValidation_Descrip {
            get {
                return ResourceManager.GetString("DataValidation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Validation.
        /// </summary>
        internal static string DataValidation_Name {
            get {
                return ResourceManager.GetString("DataValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to set a kind of date/time format to a cell..
        /// </summary>
        internal static string DateAndTimeFormat_Descrip {
            get {
                return ResourceManager.GetString("DateAndTimeFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set date and time format.
        /// </summary>
        internal static string DateAndTimeFormat_Name {
            get {
                return ResourceManager.GetString("DateAndTimeFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how dynamic date filters can be applied to display results that match the specified date criteria taking into account the current system date that automatically gets updated everyday..
        /// </summary>
        internal static string DateDynamicFilter_Descrip {
            get {
                return ResourceManager.GetString("DateDynamicFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter date dynamically.
        /// </summary>
        internal static string DateDynamicFilter_Name {
            get {
                return ResourceManager.GetString("DateDynamicFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how date filters can be applied to a range to display only those results that are falling within the specified dates..
        /// </summary>
        internal static string DateFilter_Descrip {
            get {
                return ResourceManager.GetString("DateFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply date filter.
        /// </summary>
        internal static string DateFilter_Name {
            get {
                return ResourceManager.GetString("DateFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Date Filter
        ///The examples in this folder demonstrate how to use the AutoFilter method to filter by date. They show how you can filter:
        ///- between two dates
        ///- all dates in February.
        /// </summary>
        internal static string DateFiltering_Descrip {
            get {
                return ResourceManager.GetString("DateFiltering.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date Filter.
        /// </summary>
        internal static string DateFiltering_Name {
            get {
                return ResourceManager.GetString("DateFiltering.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to delete a chart in GcExcel..
        /// </summary>
        internal static string DeleteChart_Descrip {
            get {
                return ResourceManager.GetString("DeleteChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete chart.
        /// </summary>
        internal static string DeleteChart_Name {
            get {
                return ResourceManager.GetString("DeleteChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you want to delete the formatting rule applied to the cell range in a worksheet, you can do it by using the Delete method of IFormatCondition interface.
        /// </summary>
        internal static string DeleteConditionalFormatRules_Descrip {
            get {
                return ResourceManager.GetString("DeleteConditionalFormatRules.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete conditional format rules.
        /// </summary>
        internal static string DeleteConditionalFormatRules_Name {
            get {
                return ResourceManager.GetString("DeleteConditionalFormatRules.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to delete hyperlinks.
        /// </summary>
        internal static string DeleteHyperlinks_Descrip {
            get {
                return ResourceManager.GetString("DeleteHyperlinks.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete hyperlinks.
        /// </summary>
        internal static string DeleteHyperlinks_Name {
            get {
                return ResourceManager.GetString("DeleteHyperlinks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to delete a picture object in worksheet..
        /// </summary>
        internal static string DeletePicture_Descrip {
            get {
                return ResourceManager.GetString("DeletePicture.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete picture.
        /// </summary>
        internal static string DeletePicture_Name {
            get {
                return ResourceManager.GetString("DeletePicture.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to delete a data series from chart..
        /// </summary>
        internal static string DeleteSeries_Descrip {
            get {
                return ResourceManager.GetString("DeleteSeries.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete series.
        /// </summary>
        internal static string DeleteSeries_Name {
            get {
                return ResourceManager.GetString("DeleteSeries.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can delete the applied validation rule using the Delete method of the IValidation interface..
        /// </summary>
        internal static string DeleteValidation_Descrip {
            get {
                return ResourceManager.GetString("DeleteValidation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete validation.
        /// </summary>
        internal static string DeleteValidation_Name {
            get {
                return ResourceManager.GetString("DeleteValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to delete a worksheet from workbook..
        /// </summary>
        internal static string DeleteWorksheet_Descrip {
            get {
                return ResourceManager.GetString("DeleteWorksheet.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete a worksheet.
        /// </summary>
        internal static string DeleteWorksheet_Name {
            get {
                return ResourceManager.GetString("DeleteWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample is to show a vertical group template. The departments&apos; data are expanded horizontally, while the employees&apos; data  are expanded vertically..
        /// </summary>
        internal static string DepartmentBudget_Descrip {
            get {
                return ResourceManager.GetString("DepartmentBudget.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Department Budget.
        /// </summary>
        internal static string DepartmentBudget_Name {
            get {
                return ResourceManager.GetString("DepartmentBudget.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to get the dependents of a cell..
        /// </summary>
        internal static string Dependents_Descrip {
            get {
                return ResourceManager.GetString("Dependents.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependents.
        /// </summary>
        internal static string Dependents_Name {
            get {
                return ResourceManager.GetString("Dependents.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel allow users to disable calculation engine, dirty and re-calculate the formula of a specific range..
        /// </summary>
        internal static string DirtyAndCalculation_Descrip {
            get {
                return ResourceManager.GetString("DirtyAndCalculation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dirty and Calculate methods.
        /// </summary>
        internal static string DirtyAndCalculation_Name {
            get {
                return ResourceManager.GetString("DirtyAndCalculation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export axis display unit label to PDF file.
        /// </summary>
        internal static string DisplayUnitLabelPdf_Descrip {
            get {
                return ResourceManager.GetString("DisplayUnitLabelPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Axis display unit label.
        /// </summary>
        internal static string DisplayUnitLabelPdf_Name {
            get {
                return ResourceManager.GetString("DisplayUnitLabelPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The state of a slicer will be synchronized with table filter..
        /// </summary>
        internal static string DoTableFilter_Descrip {
            get {
                return ResourceManager.GetString("DoTableFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-filter table with slicer.
        /// </summary>
        internal static string DoTableFilter_Name {
            get {
                return ResourceManager.GetString("DoTableFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to allow users to render Excel ranges inside the PDF file.
        /// </summary>
        internal static string DrawRangeInsideAPDF_Descrip {
            get {
                return ResourceManager.GetString("DrawRangeInsideAPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Render sheet ranges inside a pdf(Basic usage).
        /// </summary>
        internal static string DrawRangeInsideAPDF_Name {
            get {
                return ResourceManager.GetString("DrawRangeInsideAPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample is to show the template working with conditional formattings. It uses a sheet name template to show each month&apos;s data in a seperated sheet. .
        /// </summary>
        internal static string EmployeeAbsenceSchedule_Descrip {
            get {
                return ResourceManager.GetString("EmployeeAbsenceSchedule.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Employee absence schedule.
        /// </summary>
        internal static string EmployeeAbsenceSchedule_Name {
            get {
                return ResourceManager.GetString("EmployeeAbsenceSchedule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export error bars to PDF file.
        /// </summary>
        internal static string ErrorbarPdf_Descrip {
            get {
                return ResourceManager.GetString("ErrorbarPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error bars.
        /// </summary>
        internal static string ErrorbarPdf_Name {
            get {
                return ResourceManager.GetString("ErrorbarPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## ErrorBars
        ///These examples demonstrate how to configure chart **error bars**..
        /// </summary>
        internal static string ErrorBars_Descrip {
            get {
                return ResourceManager.GetString("ErrorBars.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error bars.
        /// </summary>
        internal static string ErrorBars_Name {
            get {
                return ResourceManager.GetString("ErrorBars.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event budget.
        /// </summary>
        internal static string EventBudget_Name {
            get {
                return ResourceManager.GetString("EventBudget.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event planning tracker.
        /// </summary>
        internal static string EventPlanningTracker_Name {
            get {
                return ResourceManager.GetString("EventPlanningTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Excel Reporting
        ///In this folder, you can explore complete code demonstrating how to generate an Excel file or report at server side. 
        ///
        ///Click the **&quot;Run&quot;** button to perform the following actions on the server:
        ///- Create an empty workbook
        ///- Execute all of code in the code window
        ///- Save to an Excel file
        ///
        ///Then you can view the results by downloading the Excel file..
        /// </summary>
        internal static string ExcelReporting_Descrip {
            get {
                return ResourceManager.GetString("ExcelReporting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excel Reporting.
        /// </summary>
        internal static string ExcelReporting_Name {
            get {
                return ResourceManager.GetString("ExcelReporting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Excel Templates
        ///In some scenarios, you may have your own Excel templates and just want to open and update some of the contents at server side. You can use the extensive GrapeCity Documents for Excel API to open an existing Excel file and then change some of its values, customize its formatting, and whatever else you need to do.
        ///- Click the **Template** button to download and view the original Excel template
        ///- Click the **Run** button to run the code and get the changed Excel file.
        /// </summary>
        internal static string ExcelTemplates_Descrip {
            get {
                return ResourceManager.GetString("ExcelTemplates.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excel Templates.
        /// </summary>
        internal static string ExcelTemplates_Name {
            get {
                return ResourceManager.GetString("ExcelTemplates.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export rich text cell to PDF file..
        /// </summary>
        internal static string ExportCellRichText_Descrip {
            get {
                return ResourceManager.GetString("ExportCellRichText.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cell rich text.
        /// </summary>
        internal static string ExportCellRichText_Name {
            get {
                return ResourceManager.GetString("ExportCellRichText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Export chart
        ///GrapeCity Documents for Excel supports exporting charts to PDF file.
        ///
        ///- Column
        ///- Line
        ///- Pie
        ///- Bar
        ///- Area
        ///- X Y(Scatter)
        ///- Stock
        ///- Radar
        ///- Combo.
        /// </summary>
        internal static string ExportChart_Descrip {
            get {
                return ResourceManager.GetString("ExportChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export Chart.
        /// </summary>
        internal static string ExportChart_Name {
            get {
                return ResourceManager.GetString("ExportChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to convert chart to image from existing file..
        /// </summary>
        internal static string ExportChartToImage_Descrip {
            get {
                return ResourceManager.GetString("ExportChartToImage.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert chart to image from existing file.
        /// </summary>
        internal static string ExportChartToImage_Name {
            get {
                return ResourceManager.GetString("ExportChartToImage.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this example, GcExcel first opens an Excel file that contains some shapes, then export it to a PDF file..
        /// </summary>
        internal static string ExportFlowChart_Descrip {
            get {
                return ResourceManager.GetString("ExportFlowChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FlowChart.
        /// </summary>
        internal static string ExportFlowChart_Name {
            get {
                return ResourceManager.GetString("ExportFlowChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to convert range to image from existing file..
        /// </summary>
        internal static string ExportRangeToImage_Descrip {
            get {
                return ResourceManager.GetString("ExportRangeToImage.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert range to image from existing file.
        /// </summary>
        internal static string ExportRangeToImage_Name {
            get {
                return ResourceManager.GetString("ExportRangeToImage.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Export shape
        ///GrapeCity Documents for Excel supports exporting shapes to PDF file.
        ///
        ///- Export basic/custom shapes.
        ///- Export shapes with text.
        ///- Export shapes with different fill.
        ///- Export grouped shapes..
        /// </summary>
        internal static string ExportShape_Descrip {
            get {
                return ResourceManager.GetString("ExportShape.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export Shape.
        /// </summary>
        internal static string ExportShape_Name {
            get {
                return ResourceManager.GetString("ExportShape.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to convert shape to image from existing file..
        /// </summary>
        internal static string ExportShapeToImage_Descrip {
            get {
                return ResourceManager.GetString("ExportShapeToImage.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert shape to image from existing file.
        /// </summary>
        internal static string ExportShapeToImage_Name {
            get {
                return ResourceManager.GetString("ExportShapeToImage.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to convert sheet to image from existing file..
        /// </summary>
        internal static string ExportSheetToImage_Descrip {
            get {
                return ResourceManager.GetString("ExportSheetToImage.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert sheet to image from existing file.
        /// </summary>
        internal static string ExportSheetToImage_Name {
            get {
                return ResourceManager.GetString("ExportSheetToImage.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind data with a template which consists of expression fields..
        /// </summary>
        internal static string ExpressionTemplate_Descrip {
            get {
                return ResourceManager.GetString("ExpressionTemplate.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression template.
        /// </summary>
        internal static string ExpressionTemplate_Name {
            get {
                return ResourceManager.GetString("ExpressionTemplate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to extend the reference of each series in chart..
        /// </summary>
        internal static string ExtendSeries_Descrip {
            get {
                return ResourceManager.GetString("ExtendSeries.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add new points for existing series.
        /// </summary>
        internal static string ExtendSeries_Name {
            get {
                return ResourceManager.GetString("ExtendSeries.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Family budget.
        /// </summary>
        internal static string FamilyBudget_Name {
            get {
                return ResourceManager.GetString("FamilyBudget.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Features
        ///GrapeCity Documents for Excel provides some remarkable features that empower developers to create spreadsheets with:
        ///- High-performance attributes
        ///- Custom themes
        ///- Configurable components
        ///- Summarized data
        ///- Custom styles
        ///- Embedded drawing objects
        ///- Integrated calculation engine
        ///- And much more...
        ///
        ///You can explore a lot of example code in the Features section that shows you how to use each feature in GrapeCity Documents for Excel.
        ///
        ///Click the **&quot;Run&quot;** button to perform the followi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Features_Descrip {
            get {
                return ResourceManager.GetString("Features.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Features.
        /// </summary>
        internal static string Features_Name {
            get {
                return ResourceManager.GetString("Features.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Fill
        ///The examples in this folder demonstrate how to apply several kinds of fill to a range.
        ///- Solid fill
        ///- Pattern fill
        ///- Linear gradient fill
        ///- Rectangular gradient fill.
        /// </summary>
        internal static string Fill_Descrip {
            get {
                return ResourceManager.GetString("Fill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fill.
        /// </summary>
        internal static string Fill_Name {
            get {
                return ResourceManager.GetString("Fill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how you can apply filters by cell automatic font color on a column to display results containing cells with automatic font color..
        /// </summary>
        internal static string FilterByAutomaticFontColor_Descrip {
            get {
                return ResourceManager.GetString("FilterByAutomaticFontColor.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by automatic font color.
        /// </summary>
        internal static string FilterByAutomaticFontColor_Name {
            get {
                return ResourceManager.GetString("FilterByAutomaticFontColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how you can apply filters by cell colors on a column to display results containing cells with distinct fill shades..
        /// </summary>
        internal static string FilterByCellColor_Descrip {
            get {
                return ResourceManager.GetString("FilterByCellColor.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by cell color.
        /// </summary>
        internal static string FilterByCellColor_Name {
            get {
                return ResourceManager.GetString("FilterByCellColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how you can apply filters by font color on a column to display results containing cells with specific font color..
        /// </summary>
        internal static string FilterByFontColor_Descrip {
            get {
                return ResourceManager.GetString("FilterByFontColor.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by font color.
        /// </summary>
        internal static string FilterByFontColor_Name {
            get {
                return ResourceManager.GetString("FilterByFontColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how you can apply filters by icon to display results that contain a specific icon in the cells..
        /// </summary>
        internal static string FilterByIcon_Descrip {
            get {
                return ResourceManager.GetString("FilterByIcon.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by icon.
        /// </summary>
        internal static string FilterByIcon_Name {
            get {
                return ResourceManager.GetString("FilterByIcon.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how you can apply filters by no fill on a column to display results containing cells with no fill color..
        /// </summary>
        internal static string FilterByNoFill_Descrip {
            get {
                return ResourceManager.GetString("FilterByNoFill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by no fill.
        /// </summary>
        internal static string FilterByNoFill_Name {
            get {
                return ResourceManager.GetString("FilterByNoFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how you can apply filters by no icon to display results where cells do not possess an icon..
        /// </summary>
        internal static string FilterByNoIcon_Descrip {
            get {
                return ResourceManager.GetString("FilterByNoIcon.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by no icon.
        /// </summary>
        internal static string FilterByNoIcon_Name {
            get {
                return ResourceManager.GetString("FilterByNoIcon.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Filtering
        ///GrapeCity Documents for Excel supports all types of filters, including: 
        ///- Number Filter
        ///- Text Filter
        ///- Date Filter
        ///- Color Filter
        ///- Icon Filter
        ///
        ///Filter a range using the range&apos;s **AutoFilter** method. If you want to apply the filter to multiple columns, you can invoke the AutoFilter method several times.
        ///
        ///To re-apply filter conditions when the range&apos;s value changes, use the **ApplyFilter** method of the worksheet&apos;s **AutoFilter** instance..
        /// </summary>
        internal static string Filtering_Descrip {
            get {
                return ResourceManager.GetString("Filtering.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filtering.
        /// </summary>
        internal static string Filtering_Name {
            get {
                return ResourceManager.GetString("Filtering.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Filter by color
        ///The examples in this folder demonstrate how to use the AutoFilter method to create a color filter. You can filter by:
        ///- font color
        ///- interior color
        ///- automatic font color
        ///- no fill.
        /// </summary>
        internal static string FilteringByColor_Descrip {
            get {
                return ResourceManager.GetString("FilteringByColor.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by color.
        /// </summary>
        internal static string FilteringByColor_Name {
            get {
                return ResourceManager.GetString("FilteringByColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Filter by icon
        ///The examples in this folder demonstrate how to use the AutoFilter method to filter by icon.  You can set the **AutoFilterOperator** parameter to: 
        ///
        ///- **Icon** and filter by the specified icon
        ///- **NoIcon** and filter by rows with no icon
        ///
        ///Before you can apply an icon filter, you must first create an **IIconSetCondition** instance and an **IFormatCondition** instance for the Range..
        /// </summary>
        internal static string FilteringByIcon_Descrip {
            get {
                return ResourceManager.GetString("FilteringByIcon.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by icon.
        /// </summary>
        internal static string FilteringByIcon_Name {
            get {
                return ResourceManager.GetString("FilteringByIcon.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to hide some row fields in pivot table..
        /// </summary>
        internal static string FilterItemsInPivotTable_Descrip {
            get {
                return ResourceManager.GetString("FilterItemsInPivotTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter items in pivot tables.
        /// </summary>
        internal static string FilterItemsInPivotTable_Name {
            get {
                return ResourceManager.GetString("FilterItemsInPivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample is to show a cross-table template. It has a title on top of the table..
        /// </summary>
        internal static string FinancialDashboard_Descrip {
            get {
                return ResourceManager.GetString("FinancialDashboard.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Financial dashboard.
        /// </summary>
        internal static string FinancialDashboard_Name {
            get {
                return ResourceManager.GetString("FinancialDashboard.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Financial KPIs.
        /// </summary>
        internal static string FinancialKPIs_Name {
            get {
                return ResourceManager.GetString("FinancialKPIs.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Find and Replace
        ///The examples in this folder demonstrate the following cases:
        ///- Find in a Range
        ///- Replace in a Range.
        /// </summary>
        internal static string FindAndReplace_Descrip {
            get {
                return ResourceManager.GetString("FindAndReplace.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find and Replace.
        /// </summary>
        internal static string FindAndReplace_Name {
            get {
                return ResourceManager.GetString("FindAndReplace.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to find the first occurrence of some text in a range..
        /// </summary>
        internal static string FindBasicUsage_Descrip {
            get {
                return ResourceManager.GetString("FindBasicUsage.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find (basic usage).
        /// </summary>
        internal static string FindBasicUsage_Name {
            get {
                return ResourceManager.GetString("FindBasicUsage.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to find a cell by specific format..
        /// </summary>
        internal static string FindDisplayFormat_Descrip {
            get {
                return ResourceManager.GetString("FindDisplayFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find (with cell format).
        /// </summary>
        internal static string FindDisplayFormat_Name {
            get {
                return ResourceManager.GetString("FindDisplayFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to find cell with options..
        /// </summary>
        internal static string FindLookAtSearchOrderDirectionMatchCase_Descrip {
            get {
                return ResourceManager.GetString("FindLookAtSearchOrderDirectionMatchCase.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find (with options).
        /// </summary>
        internal static string FindLookAtSearchOrderDirectionMatchCase_Name {
            get {
                return ResourceManager.GetString("FindLookAtSearchOrderDirectionMatchCase.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to find double-byte characters in a range..
        /// </summary>
        internal static string FindMatchByte_Descrip {
            get {
                return ResourceManager.GetString("FindMatchByte.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find (match byte).
        /// </summary>
        internal static string FindMatchByte_Name {
            get {
                return ResourceManager.GetString("FindMatchByte.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to find all occurrences of matched cells in a range..
        /// </summary>
        internal static string FindWithAfter_Descrip {
            get {
                return ResourceManager.GetString("FindWithAfter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find (enumerate all occurrences).
        /// </summary>
        internal static string FindWithAfter_Name {
            get {
                return ResourceManager.GetString("FindWithAfter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to find cells in different places..
        /// </summary>
        internal static string FindWithLookIn_Descrip {
            get {
                return ResourceManager.GetString("FindWithLookIn.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find (look in different places).
        /// </summary>
        internal static string FindWithLookIn_Name {
            get {
                return ResourceManager.GetString("FindWithLookIn.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to set font color of a cell..
        /// </summary>
        internal static string FontColor_Descrip {
            get {
                return ResourceManager.GetString("FontColor.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font color.
        /// </summary>
        internal static string FontColor_Name {
            get {
                return ResourceManager.GetString("FontColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to set various kinds of font effect of a cell..
        /// </summary>
        internal static string FontEffect_Descrip {
            get {
                return ResourceManager.GetString("FontEffect.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font effect.
        /// </summary>
        internal static string FontEffect_Name {
            get {
                return ResourceManager.GetString("FontEffect.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample deonstrates how to set font name and theme font name of a cell..
        /// </summary>
        internal static string FontName_Descrip {
            get {
                return ResourceManager.GetString("FontName.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font name.
        /// </summary>
        internal static string FontName_Name {
            get {
                return ResourceManager.GetString("FontName.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Fonts
        ///The examples in this folder demonstrate how to apply font settings to a range:
        ///- Font color
        ///- Font size
        ///- Font name
        ///- Bold, Italic
        ///- Underline
        ///- Strikethrough, Superscript, Subscript.
        /// </summary>
        internal static string Fonts_Descrip {
            get {
                return ResourceManager.GetString("Fonts.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fonts.
        /// </summary>
        internal static string Fonts_Name {
            get {
                return ResourceManager.GetString("Fonts.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to set font size of a cell..
        /// </summary>
        internal static string FontSize_Descrip {
            get {
                return ResourceManager.GetString("FontSize.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font size.
        /// </summary>
        internal static string FontSize_Name {
            get {
                return ResourceManager.GetString("FontSize.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to set font bold and italic of a cell..
        /// </summary>
        internal static string FontStyle_Descrip {
            get {
                return ResourceManager.GetString("FontStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font style.
        /// </summary>
        internal static string FontStyle_Name {
            get {
                return ResourceManager.GetString("FontStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to set different kinds of underline of a cell..
        /// </summary>
        internal static string FontUnderline_Descrip {
            get {
                return ResourceManager.GetString("FontUnderline.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font underline.
        /// </summary>
        internal static string FontUnderline_Name {
            get {
                return ResourceManager.GetString("FontUnderline.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Formatting
        ///GrapeCity Documents for Excel provides a lot of properties to customize the appearance of a range:
        ///
        ///- **IRange.NumberFormat** sets the number format
        ///- **IRange.HorizontalAlignment**,  **IRange.VerticalAlignment**, **IRange.IndentLevel**, etc. set the alignment
        ///- **IRange.Font** sets the font
        ///- **IRange.Borders** sets the border
        ///- **IRange.Interior** sets solid fill, pattern fill, and gradient fill
        ///- **IRange.Locked** and **IRange.FormulaHidden** sets up protection
        ///
        ///You can also creat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Formatting_Descrip {
            get {
                return ResourceManager.GetString("Formatting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formatting.
        /// </summary>
        internal static string Formatting_Name {
            get {
                return ResourceManager.GetString("Formatting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Formulas
        ///GrapeCity Documents for Excel lets you create and use formulas. These are expressions that let you calculate the value of a cell quickly and accurately. You can also use built-in functions and operators to generate formulas and calculate values in cells.
        ///
        ///The calc engine handles many calculations, for example:
        ///- Hundreds of built-in Excel functions
        ///- Array formulas
        ///- Dirty and Calculate methods
        ///- Table formula.
        /// </summary>
        internal static string Formulas_Descrip {
            get {
                return ResourceManager.GetString("Formulas.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formulas.
        /// </summary>
        internal static string Formulas_Name {
            get {
                return ResourceManager.GetString("Formulas.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind data with a template which consists of formulas. And these formulas will be remained and refer to the expanded data..
        /// </summary>
        internal static string FormulaTemplate_Descrip {
            get {
                return ResourceManager.GetString("FormulaTemplate.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formula template.
        /// </summary>
        internal static string FormulaTemplate_Name {
            get {
                return ResourceManager.GetString("FormulaTemplate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind data with a template which consists of formula functions..
        /// </summary>
        internal static string FunctionTemplate_Descrip {
            get {
                return ResourceManager.GetString("FunctionTemplate.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function template.
        /// </summary>
        internal static string FunctionTemplate_Name {
            get {
                return ResourceManager.GetString("FunctionTemplate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get all the precedents with a loop..
        /// </summary>
        internal static string GetAllPrecedents_Descrip {
            get {
                return ResourceManager.GetString("GetAllPrecedents.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get all the precedents.
        /// </summary>
        internal static string GetAllPrecedents_Name {
            get {
                return ResourceManager.GetString("GetAllPrecedents.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can get the displaying style of a cell by using IRange.DisplayFormat property, the displaying style of a cell may come from its style, table style if the cell is in a table, conditional format if the cell match criterion and so on..
        /// </summary>
        internal static string GetDisplayFormat_Descrip {
            get {
                return ResourceManager.GetString("GetDisplayFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get display format.
        /// </summary>
        internal static string GetDisplayFormat_Name {
            get {
                return ResourceManager.GetString("GetDisplayFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer can get a used range specific with related features, such as Data, DataValidation, Hyperlink, Sparkline and so on. More details can be referred by UsedRangeType enum..
        /// </summary>
        internal static string GetFeatureRelatedUsedRange_Descrip {
            get {
                return ResourceManager.GetString("GetFeatureRelatedUsedRange.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get used range features.
        /// </summary>
        internal static string GetFeatureRelatedUsedRange_Name {
            get {
                return ResourceManager.GetString("GetFeatureRelatedUsedRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to getget an array of page boundaries of a sheet for vertical or horizontal paging in GcExcel..
        /// </summary>
        internal static string GetPaginationInfo_Descrip {
            get {
                return ResourceManager.GetString("GetPaginationInfo.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the horizontal or vertical pagination infos.
        /// </summary>
        internal static string GetPaginationInfo_Name {
            get {
                return ResourceManager.GetString("GetPaginationInfo.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a image to specific range in GcExcel..
        /// </summary>
        internal static string GetRangeBoundary_Descrip {
            get {
                return ResourceManager.GetString("GetRangeBoundary.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add image to specific range.
        /// </summary>
        internal static string GetRangeBoundary_Name {
            get {
                return ResourceManager.GetString("GetRangeBoundary.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to get rows/columns/cells count in a specific range..
        /// </summary>
        internal static string GetRangeRowCountColumnCount_Descrip {
            get {
                return ResourceManager.GetString("GetRangeRowCountColumnCount.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer can get the count cells in a specific range by using IRange.Count or IRange.Cells.Count, can get the count of rows in a specific range by using IRange.Rows.Count, and get the count of columns in a specific range by using IRange.Columns.Count.
        /// </summary>
        internal static string GetRangeRowCountColumnCount_Descript {
            get {
                return ResourceManager.GetString("GetRangeRowCountColumnCount.Descript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get row and column count.
        /// </summary>
        internal static string GetRangeRowCountColumnCount_Name {
            get {
                return ResourceManager.GetString("GetRangeRowCountColumnCount.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A used range includes any cell that has ever been used. For example, cell A1 contains a value, cell A2 has a sparkline or hyperlink, then the cell will be treated as used range..
        /// </summary>
        internal static string GetWorksheetUsedRange_Descrip {
            get {
                return ResourceManager.GetString("GetWorksheetUsedRange.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get used range.
        /// </summary>
        internal static string GetWorksheetUsedRange_Name {
            get {
                return ResourceManager.GetString("GetWorksheetUsedRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Global options
        ///This feature provide a global options for user to control the default behaviors of GcExcel Template. 
        ///
        ///GcExcel defines some built-in workbook defined names for the global options of template.
        ///Currently, these options only be supported in Workbook Defined Names. So, user should take care on the scope of them when using this feature.
        ///That is, templates in multiple worksheets will behave the same. 
        ///
        ///User can add/edit/delete these built-in defined names directly in Excel file, or via Gc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GlobalOptions_Descrip {
            get {
                return ResourceManager.GetString("GlobalOptions.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global options.
        /// </summary>
        internal static string GlobalOptions_Name {
            get {
                return ResourceManager.GetString("GlobalOptions.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to group current sparklines..
        /// </summary>
        internal static string GroupExistSparklines_Descrip {
            get {
                return ResourceManager.GetString("GroupExistSparklines.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group exist sparklines.
        /// </summary>
        internal static string GroupExistSparklines_Name {
            get {
                return ResourceManager.GetString("GroupExistSparklines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Grouping
        ///Spreadsheets with tons of data can be a headache to read. You can spend a lot of time and effort trying to visualize, manage, and analyze the information that is relevant to you.
        ///
        ///GrapeCity Documents for Excel lets you summarize large amounts of information in groups so that complex spreadsheets are easier to navigate. After rows of data in a spreadsheet are grouped, users can expand and collapse details with the click of a button in the group header row. You can use the following methods and [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Grouping_Descrip {
            get {
                return ResourceManager.GetString("Grouping.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grouping.
        /// </summary>
        internal static string Grouping_Name {
            get {
                return ResourceManager.GetString("Grouping.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can set different values of horizontal and vertical alignments for the content in a cell of range..
        /// </summary>
        internal static string HAlignVAlign_Descrip {
            get {
                return ResourceManager.GetString("HAlignVAlign.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set horizontal and vertical alignment.
        /// </summary>
        internal static string HAlignVAlign_Name {
            get {
                return ResourceManager.GetString("HAlignVAlign.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can choose whether to hide or show rows and columns in a worksheet by using the Hidden property of the IRange interface..
        /// </summary>
        internal static string HiddenRowColumn_Descrip {
            get {
                return ResourceManager.GetString("HiddenRowColumn.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide rows and columns.
        /// </summary>
        internal static string HiddenRowColumn_Name {
            get {
                return ResourceManager.GetString("HiddenRowColumn.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set visibility of row and column grand totals with RowGrand and ColumnGrand.
        /// </summary>
        internal static string HideGrandTotalsInPivotTable_Descrip {
            get {
                return ResourceManager.GetString("HideGrandTotalsInPivotTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grand total visibility.
        /// </summary>
        internal static string HideGrandTotalsInPivotTable_Name {
            get {
                return ResourceManager.GetString("HideGrandTotalsInPivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Home inventory.
        /// </summary>
        internal static string HomeInventory_Name {
            get {
                return ResourceManager.GetString("HomeInventory.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Hyperlinks
        ///Apply hyperlinks to a range using the **IWorksheet.Hyperlinks.Add** or **IRange.Hyperlinks.Add** method. Apply hyperlinks to a shape using the **IWorksheet.Hyperlinks.Add** method. GrapeCity Documents for Excel supports the following types of hyperlink:
        ///- Link to a web page
        ///- Link to a specific range in the current document
        ///- Link to an external file
        ///- Link to an email address.
        /// </summary>
        internal static string Hyperlinks_Descrip {
            get {
                return ResourceManager.GetString("Hyperlinks.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hyperlinks.
        /// </summary>
        internal static string Hyperlinks_Name {
            get {
                return ResourceManager.GetString("Hyperlinks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Image Exporting
        ///In this folder, you can explore complete code demonstrating how to export sheet/range/shape/chart to image files at server side. 
        ///
        ///Click the **&quot;Run&quot;** button to perform the following actions on the server:
        ///- Create an empty workbook
        ///- Execute all of code in the code window
        ///- Save to an image file
        ///
        ///Then you can view the image in your browser..
        /// </summary>
        internal static string ImageExporting_Descrip {
            get {
                return ResourceManager.GetString("ImageExporting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image Exporting.
        /// </summary>
        internal static string ImageExporting_Name {
            get {
                return ResourceManager.GetString("ImageExporting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use template property &quot;image=true&quot; to show data of an image field as images after template processing.
        /// </summary>
        internal static string ImageTemplate_Descrip {
            get {
                return ResourceManager.GetString("ImageTemplate.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image template.
        /// </summary>
        internal static string ImageTemplate_Name {
            get {
                return ResourceManager.GetString("ImageTemplate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to load a csv file..
        /// </summary>
        internal static string ImportCsvFileToWorkbook_Descrip {
            get {
                return ResourceManager.GetString("ImportCsvFileToWorkbook.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import csv file to workbook.
        /// </summary>
        internal static string ImportCsvFileToWorkbook_Name {
            get {
                return ResourceManager.GetString("ImportCsvFileToWorkbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to load a csv file with options..
        /// </summary>
        internal static string ImportCsvFileToWorkbookWithOptions_Descrip {
            get {
                return ResourceManager.GetString("ImportCsvFileToWorkbookWithOptions.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import csv file to workbook with options.
        /// </summary>
        internal static string ImportCsvFileToWorkbookWithOptions_Name {
            get {
                return ResourceManager.GetString("ImportCsvFileToWorkbookWithOptions.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to only load data from Excel file..
        /// </summary>
        internal static string ImportExcelFileDataOnly_Descrip {
            get {
                return ResourceManager.GetString("ImportExcelFileDataOnly.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only import data from Excel.
        /// </summary>
        internal static string ImportExcelFileDataOnly_Name {
            get {
                return ResourceManager.GetString("ImportExcelFileDataOnly.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to open an Excel file..
        /// </summary>
        internal static string ImportExcelFileToWorkbook_Descrip {
            get {
                return ResourceManager.GetString("ImportExcelFileToWorkbook.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import Excel file.
        /// </summary>
        internal static string ImportExcelFileToWorkbook_Name {
            get {
                return ResourceManager.GetString("ImportExcelFileToWorkbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to avoid recalculating formulas after opening an Excel file..
        /// </summary>
        internal static string ImportExcelFileWithoutCalculation_Descrip {
            get {
                return ResourceManager.GetString("ImportExcelFileWithoutCalculation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not recalculate after opening Excel.
        /// </summary>
        internal static string ImportExcelFileWithoutCalculation_Name {
            get {
                return ResourceManager.GetString("ImportExcelFileWithoutCalculation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to open a password protected Excel file..
        /// </summary>
        internal static string ImportExcelFileWithPassword_Descrip {
            get {
                return ResourceManager.GetString("ImportExcelFileWithPassword.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import Excel file with password.
        /// </summary>
        internal static string ImportExcelFileWithPassword_Name {
            get {
                return ResourceManager.GetString("ImportExcelFileWithPassword.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can open an Excel file with ole objects..
        /// </summary>
        internal static string ImportOleObjectsToWorkbookAndExport_Descrip {
            get {
                return ResourceManager.GetString("ImportOleObjectsToWorkbookAndExport.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import and export OLE objects.
        /// </summary>
        internal static string ImportOleObjectsToWorkbookAndExport_Name {
            get {
                return ResourceManager.GetString("ImportOleObjectsToWorkbookAndExport.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can open xlsm files, and all macros and form controls will be preserved after exporting to xlsm again..
        /// </summary>
        internal static string ImportXlsmToWorkbook_Descrip {
            get {
                return ResourceManager.GetString("ImportXlsmToWorkbook.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open and save xlsm file.
        /// </summary>
        internal static string ImportXlsmToWorkbook_Name {
            get {
                return ResourceManager.GetString("ImportXlsmToWorkbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Income statement.
        /// </summary>
        internal static string IncomeStatement_Name {
            get {
                return ResourceManager.GetString("IncomeStatement.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind data with a template which consists of inline fields..
        /// </summary>
        internal static string InlineTemplate_Descrip {
            get {
                return ResourceManager.GetString("InlineTemplate.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inline template.
        /// </summary>
        internal static string InlineTemplate_Name {
            get {
                return ResourceManager.GetString("InlineTemplate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel enables you to insert and delete a cell or a range of cells in order to help customization of worksheets as per your requirements..
        /// </summary>
        internal static string InsertCellsDeleteCells_Descrip {
            get {
                return ResourceManager.GetString("InsertCellsDeleteCells.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert or delete cells.
        /// </summary>
        internal static string InsertCellsDeleteCells_Name {
            get {
                return ResourceManager.GetString("InsertCellsDeleteCells.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel provides you with the ability to insert or delete rows and columns in a worksheet..
        /// </summary>
        internal static string InsertDeleteRowsColumns_Descrip {
            get {
                return ResourceManager.GetString("InsertDeleteRowsColumns.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert or delete rows and columns.
        /// </summary>
        internal static string InsertDeleteRowsColumns_Name {
            get {
                return ResourceManager.GetString("InsertDeleteRowsColumns.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to add and delete columns and rows in a table..
        /// </summary>
        internal static string InsertDeleteTableRowColumns_Descrip {
            get {
                return ResourceManager.GetString("InsertDeleteTableRowColumns.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert or delete table rows and columns.
        /// </summary>
        internal static string InsertDeleteTableRowColumns_Name {
            get {
                return ResourceManager.GetString("InsertDeleteTableRowColumns.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use built-in defined name &quot;TemplateOptions.InsertMode&quot; to specify whether GcExcel will insert cells or entire rows &amp; columns when extra spaces are needed while expanding the template.
        ///The value is in string type, and can be &quot;Cells&quot;(Default) or &quot;EntireRowColumn&quot;..
        /// </summary>
        internal static string InsertMode_Descrip {
            get {
                return ResourceManager.GetString("InsertMode.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert mode.
        /// </summary>
        internal static string InsertMode_Name {
            get {
                return ResourceManager.GetString("InsertMode.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User can use a json file as the data source of GcExcel Template. Before this, user should read data from the file and serialize it to an custom object.
        ///Actually, user can use any data which can be serialized to an custom object as the data souce..
        /// </summary>
        internal static string JsonFile_Descrip {
            get {
                return ResourceManager.GetString("JsonFile.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Json file.
        /// </summary>
        internal static string JsonFile_Name {
            get {
                return ResourceManager.GetString("JsonFile.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use built-in defined name &quot;TemplateOptions.KeepLineSize&quot; to specify whether the row height and column width should be keep when processing template.
        ///The value is in boolean type, and can be True or False(Default)..
        /// </summary>
        internal static string KeepLineSize_Descrip {
            get {
                return ResourceManager.GetString("KeepLineSize.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep row &amp; column size.
        /// </summary>
        internal static string KeepLineSize_Name {
            get {
                return ResourceManager.GetString("KeepLineSize.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This example code demonstrates how to keep adjacent rows together in one page when exporting to PDF file..
        /// </summary>
        internal static string KeepTogether_Descrip {
            get {
                return ResourceManager.GetString("KeepTogether.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep together certain data.
        /// </summary>
        internal static string KeepTogether_Name {
            get {
                return ResourceManager.GetString("KeepTogether.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Legend
        ///These examples demonstrate how to configure the style and position of chart **legends**..
        /// </summary>
        internal static string Legend_Descrip {
            get {
                return ResourceManager.GetString("Legend.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legend.
        /// </summary>
        internal static string Legend_Name {
            get {
                return ResourceManager.GetString("Legend.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to set a linear gradient fill to a cell..
        /// </summary>
        internal static string LinearGradientFill_Descrip {
            get {
                return ResourceManager.GetString("LinearGradientFill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set linear gradient fill.
        /// </summary>
        internal static string LinearGradientFill_Name {
            get {
                return ResourceManager.GetString("LinearGradientFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a line chart in GcExcel..
        /// </summary>
        internal static string LineChart_Descrip {
            get {
                return ResourceManager.GetString("LineChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line chart.
        /// </summary>
        internal static string LineChart_Name {
            get {
                return ResourceManager.GetString("LineChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export line chart to PDF file.
        /// </summary>
        internal static string LineChartPdf_Descrip {
            get {
                return ResourceManager.GetString("LineChartPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line chart.
        /// </summary>
        internal static string LineChartPdf_Name {
            get {
                return ResourceManager.GetString("LineChartPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a line chart with markers in GcExcel..
        /// </summary>
        internal static string LineMarkersChart_Descrip {
            get {
                return ResourceManager.GetString("LineMarkersChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line Markers chart.
        /// </summary>
        internal static string LineMarkersChart_Name {
            get {
                return ResourceManager.GetString("LineMarkersChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a 100% stacked line with markers chart in GcExcel..
        /// </summary>
        internal static string LineMarkerStacked100Chart_Descrip {
            get {
                return ResourceManager.GetString("LineMarkerStacked100Chart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100% Stacked line with markers chart.
        /// </summary>
        internal static string LineMarkerStacked100Chart_Name {
            get {
                return ResourceManager.GetString("LineMarkerStacked100Chart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a stacked line with markers chart in GcExcel..
        /// </summary>
        internal static string LineMarkerStackedChart_Descrip {
            get {
                return ResourceManager.GetString("LineMarkerStackedChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stack line with markers chart.
        /// </summary>
        internal static string LineMarkerStackedChart_Name {
            get {
                return ResourceManager.GetString("LineMarkerStackedChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a 100% stacked line chart in GcExcel..
        /// </summary>
        internal static string LineStacked100Chart_Descrip {
            get {
                return ResourceManager.GetString("LineStacked100Chart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100% Stacked Line chart.
        /// </summary>
        internal static string LineStacked100Chart_Name {
            get {
                return ResourceManager.GetString("LineStacked100Chart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a stacked line chart in GcExcel..
        /// </summary>
        internal static string LineStackedChart_Descrip {
            get {
                return ResourceManager.GetString("LineStackedChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stacked Line chart.
        /// </summary>
        internal static string LineStackedChart_Name {
            get {
                return ResourceManager.GetString("LineStackedChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can load and save ssjson file with shapes in it..
        /// </summary>
        internal static string LoadAndSaveJsonWithShapes_Descrip {
            get {
                return ResourceManager.GetString("LoadAndSaveJsonWithShapes.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load and save json containing shapes.
        /// </summary>
        internal static string LoadAndSaveJsonWithShapes_Name {
            get {
                return ResourceManager.GetString("LoadAndSaveJsonWithShapes.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code in order to export different headers on different pages while exporting to a PDF file..
        /// </summary>
        internal static string ManageHeadersOnDifferentPages_Descrip {
            get {
                return ResourceManager.GetString("ManageHeadersOnDifferentPages.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repeat different headers in different pages.
        /// </summary>
        internal static string ManageHeadersOnDifferentPages_Name {
            get {
                return ResourceManager.GetString("ManageHeadersOnDifferentPages.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Markers
        ///These examples demonstrate how to set style and format for **markers**..
        /// </summary>
        internal static string Markers_Descrip {
            get {
                return ResourceManager.GetString("Markers.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Markers.
        /// </summary>
        internal static string Markers_Name {
            get {
                return ResourceManager.GetString("Markers.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User can use merge cells in the template. 
        ///
        ///GcExcel will try to understand the meanings of merge cell in template, and generate expected report..
        /// </summary>
        internal static string MergeCell_Descrip {
            get {
                return ResourceManager.GetString("MergeCell.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merge cell.
        /// </summary>
        internal static string MergeCell_Name {
            get {
                return ResourceManager.GetString("MergeCell.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel allow you to merge several cells into a single cell using Merge method of IRange. When a cell range is merged, the data of top left cell stays in the final merged cell, and the data of other cells in the given range is lost..
        /// </summary>
        internal static string MergeCells_Descrip {
            get {
                return ResourceManager.GetString("MergeCells.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merge cells.
        /// </summary>
        internal static string MergeCells_Name {
            get {
                return ResourceManager.GetString("MergeCells.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to set different subtotal functions for pivot table fields..
        /// </summary>
        internal static string ModifySubtotalsForPivotField_Descrip {
            get {
                return ResourceManager.GetString("ModifySubtotalsForPivotField.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modify pivot field subtotal type.
        /// </summary>
        internal static string ModifySubtotalsForPivotField_Name {
            get {
                return ResourceManager.GetString("ModifySubtotalsForPivotField.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can change the validation rule for a range by setting properties of the IValidation interface (Type property, Formula1 property, Formula2 property, and many more)..
        /// </summary>
        internal static string ModifyValidation_Descrip {
            get {
                return ResourceManager.GetString("ModifyValidation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modify validation.
        /// </summary>
        internal static string ModifyValidation_Name {
            get {
                return ResourceManager.GetString("ModifyValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monthly business budget.
        /// </summary>
        internal static string MonthlyBusinessBudget_Name {
            get {
                return ResourceManager.GetString("MonthlyBusinessBudget.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to move a worksheet to the end of all worksheets..
        /// </summary>
        internal static string MoveWorksheet_Descrip {
            get {
                return ResourceManager.GetString("MoveWorksheet.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move worksheet.
        /// </summary>
        internal static string MoveWorksheet_Name {
            get {
                return ResourceManager.GetString("MoveWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to move a worksheet into a different workbook.
        /// </summary>
        internal static string MoveWorksheetBetweenWorkbooks_Descrip {
            get {
                return ResourceManager.GetString("MoveWorksheetBetweenWorkbooks.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move worksheet between workbooks.
        /// </summary>
        internal static string MoveWorksheetBetweenWorkbooks_Name {
            get {
                return ResourceManager.GetString("MoveWorksheetBetweenWorkbooks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Movie list.
        /// </summary>
        internal static string MovieList_Name {
            get {
                return ResourceManager.GetString("MovieList.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how multi select filters can be applied to quickly filter data based on cell values with multiple selections..
        /// </summary>
        internal static string MultiSelectFilter_Descrip {
            get {
                return ResourceManager.GetString("MultiSelectFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply multiple value filter.
        /// </summary>
        internal static string MultiSelectFilter_Name {
            get {
                return ResourceManager.GetString("MultiSelectFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to implement a custom function add numbers..
        /// </summary>
        internal static string MyAddFunction_Descrip {
            get {
                return ResourceManager.GetString("MyAddFunction.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MyAddFunction.
        /// </summary>
        internal static string MyAddFunction_Name {
            get {
                return ResourceManager.GetString("MyAddFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to implement a custom function to concatenate text of each cell..
        /// </summary>
        internal static string MyConcatenateFunction_Descrip {
            get {
                return ResourceManager.GetString("MyConcatenateFunction.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MyConcatenateFunction.
        /// </summary>
        internal static string MyConcatenateFunction_Name {
            get {
                return ResourceManager.GetString("MyConcatenateFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to implement a custom function to calculate sum of those cells which are filled in Red background color..
        /// </summary>
        internal static string MyConditionalSumFunction_Descrip {
            get {
                return ResourceManager.GetString("MyConditionalSumFunction.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MyConditionalSumFunction.
        /// </summary>
        internal static string MyConditionalSumFunction_Name {
            get {
                return ResourceManager.GetString("MyConditionalSumFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to implement a custom function to determine if the cell is a calc error..
        /// </summary>
        internal static string MyIsErrorFunction_Descrip {
            get {
                return ResourceManager.GetString("MyIsErrorFunction.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MyIsErrorFunction.
        /// </summary>
        internal static string MyIsErrorFunction_Name {
            get {
                return ResourceManager.GetString("MyIsErrorFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to implement a custom function to determine if the cell is merged..
        /// </summary>
        internal static string MyIsMergedRangeFunction_Descrip {
            get {
                return ResourceManager.GetString("MyIsMergedRangeFunction.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MyIsMergedRangeFunction.
        /// </summary>
        internal static string MyIsMergedRangeFunction_Name {
            get {
                return ResourceManager.GetString("MyIsMergedRangeFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to implement your own sum function..
        /// </summary>
        internal static string MySumFunction_Descrip {
            get {
                return ResourceManager.GetString("MySumFunction.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySumFunction.
        /// </summary>
        internal static string MySumFunction_Name {
            get {
                return ResourceManager.GetString("MySumFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Excel 2016 New Charts
        ///GrapeCity Documents for Excel adds Excel 2016 new charts by calling **IShapes.AddChart** method and setting different **ChartType** . GrapeCity Documents for Excel supports the following types of new charts:
        ///- Sunburst
        ///- Treemap
        ///- Funnel
        ///- Waterfall
        ///- Box&amp;Whisker
        ///- Histogram
        ///- Pareto.
        /// </summary>
        internal static string NewCharts_Descrip {
            get {
                return ResourceManager.GetString("NewCharts.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excel 2016 New Charts.
        /// </summary>
        internal static string NewCharts_Name {
            get {
                return ResourceManager.GetString("NewCharts.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how you can apply number filters to display data that meets the specified criteria applied on a column containing numeric cell values..
        /// </summary>
        internal static string NumberFilter_Descrip {
            get {
                return ResourceManager.GetString("NumberFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply number filter.
        /// </summary>
        internal static string NumberFilter_Name {
            get {
                return ResourceManager.GetString("NumberFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Number Filter
        ///The examples in this folder demonstrates how to use number filtering for range..
        /// </summary>
        internal static string NumberFiltering_Descrip {
            get {
                return ResourceManager.GetString("NumberFiltering.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number Filter.
        /// </summary>
        internal static string NumberFiltering_Name {
            get {
                return ResourceManager.GetString("NumberFiltering.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Number Format
        ///The Number Format examples demonstrate how to apply a number format to a range. GrapeCity Documents for Excel uses Excel-style number formats..
        /// </summary>
        internal static string NumberFormat_Descrip {
            get {
                return ResourceManager.GetString("NumberFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number Format.
        /// </summary>
        internal static string NumberFormat_Name {
            get {
                return ResourceManager.GetString("NumberFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export cell text with different number format to PDF file..
        /// </summary>
        internal static string NumberFormating_Descrip {
            get {
                return ResourceManager.GetString("NumberFormating.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export number formats.
        /// </summary>
        internal static string NumberFormating_Name {
            get {
                return ResourceManager.GetString("NumberFormating.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel supports all kinds of Excel like number formats..
        /// </summary>
        internal static string NumberFormats_Descrip {
            get {
                return ResourceManager.GetString("NumberFormats.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set number format.
        /// </summary>
        internal static string NumberFormats_Name {
            get {
                return ResourceManager.GetString("NumberFormats.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add the outline column for the worksheet to display the data in tree structure..
        /// </summary>
        internal static string OutlineColumn_Descrip {
            get {
                return ResourceManager.GetString("OutlineColumn.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outline column.
        /// </summary>
        internal static string OutlineColumn_Name {
            get {
                return ResourceManager.GetString("OutlineColumn.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to export the outline column of the worksheet to PDF file..
        /// </summary>
        internal static string OutlineColumnToPDF_Descrip {
            get {
                return ResourceManager.GetString("OutlineColumnToPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export outline column.
        /// </summary>
        internal static string OutlineColumnToPDF_Name {
            get {
                return ResourceManager.GetString("OutlineColumnToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export the overflow cell to PDF file..
        /// </summary>
        internal static string Overflow_Descrip {
            get {
                return ResourceManager.GetString("Overflow.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export overflow text.
        /// </summary>
        internal static string Overflow_Name {
            get {
                return ResourceManager.GetString("Overflow.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Page Setup
        ///GrapeCity Documents for Excel supports page setup. The **PageSetup** object contains all page setup attributes (left margin, bottom margin, paper size, and so on) as properties..
        /// </summary>
        internal static string PageSetup_Descrip {
            get {
                return ResourceManager.GetString("PageSetup.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page Setup.
        /// </summary>
        internal static string PageSetup_Name {
            get {
                return ResourceManager.GetString("PageSetup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to set a pattern fill to a cell..
        /// </summary>
        internal static string PatternFill_Descrip {
            get {
                return ResourceManager.GetString("PatternFill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set pattern fill.
        /// </summary>
        internal static string PatternFill_Name {
            get {
                return ResourceManager.GetString("PatternFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## PDF Exporting
        ///In this folder, you can explore complete code demonstrating how to export an pdf file at server side. 
        ///
        ///Click the **&quot;Save as PDF&quot;** button to perform the following actions on the server:
        ///- Create an empty workbook
        ///- Execute all of code in the code window
        ///- Save to an pdf file
        ///
        ///Then you can view the pdf in your browser..
        /// </summary>
        internal static string PDFExporting_Descrip {
            get {
                return ResourceManager.GetString("PDFExporting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PDF Exporting.
        /// </summary>
        internal static string PDFExporting_Name {
            get {
                return ResourceManager.GetString("PDFExporting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Page setup
        ///GrapeCity Documents for Excel allows users to paginate each worksheet using the properties of the IPageSetup interface.
        ///
        ///You can customize the page size, print area, print title rows, print title columns; specify horizontal page breaks, vertical page breaks, the maximum number of pages for horizontal and vertical pagination etc. along with zoom and scale factors as per your preferences while exporting a spreadsheet to a PDF file..
        /// </summary>
        internal static string PdfPageSetup_Descrip {
            get {
                return ResourceManager.GetString("PdfPageSetup.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page Setup.
        /// </summary>
        internal static string PdfPageSetup_Name {
            get {
                return ResourceManager.GetString("PdfPageSetup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract text from PDF.
        /// </summary>
        internal static string PDFToExcel_Name {
            get {
                return ResourceManager.GetString("PDFToExcel.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can show the total row of a table and set type of TotalsCalculation for a specific table column..
        /// </summary>
        internal static string PerformCalculationsInTable_Descrip {
            get {
                return ResourceManager.GetString("PerformCalculationsInTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform calculations in the table.
        /// </summary>
        internal static string PerformCalculationsInTable_Name {
            get {
                return ResourceManager.GetString("PerformCalculationsInTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Personal address book.
        /// </summary>
        internal static string PersonalAddressBook_Name {
            get {
                return ResourceManager.GetString("PersonalAddressBook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Personal net worth calculator.
        /// </summary>
        internal static string PersonalNetWorthCalculator_Name {
            get {
                return ResourceManager.GetString("PersonalNetWorthCalculator.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Picture
        ///GrapeCity Documents for Excel allows you to add a picture to a worksheet.
        ///
        ///To add a picture to a worksheet, use the **AddPicture** method of the worksheet&apos;s **Shapes** collection..
        /// </summary>
        internal static string Picture_Descrip {
            get {
                return ResourceManager.GetString("Picture.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Picture.
        /// </summary>
        internal static string Picture_Name {
            get {
                return ResourceManager.GetString("Picture.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to copy pictures in worksheet..
        /// </summary>
        internal static string PictureCopy_Descrip {
            get {
                return ResourceManager.GetString("PictureCopy.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy picture.
        /// </summary>
        internal static string PictureCopy_Name {
            get {
                return ResourceManager.GetString("PictureCopy.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to cut pictures in worksheet..
        /// </summary>
        internal static string PictureCut_Descrip {
            get {
                return ResourceManager.GetString("PictureCut.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut picture.
        /// </summary>
        internal static string PictureCut_Name {
            get {
                return ResourceManager.GetString("PictureCut.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to duplicate a picture..
        /// </summary>
        internal static string PictureDuplicate_Descrip {
            get {
                return ResourceManager.GetString("PictureDuplicate.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate picture.
        /// </summary>
        internal static string PictureDuplicate_Name {
            get {
                return ResourceManager.GetString("PictureDuplicate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a doughnut chart in GcExcel..
        /// </summary>
        internal static string Pie_DoughnutChart_Descrip {
            get {
                return ResourceManager.GetString("Pie_DoughnutChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Doughnut chart.
        /// </summary>
        internal static string Pie_DoughnutChart_Name {
            get {
                return ResourceManager.GetString("Pie_DoughnutChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a pie chart in GcExcel..
        /// </summary>
        internal static string PieChart_Descrip {
            get {
                return ResourceManager.GetString("PieChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pie chart.
        /// </summary>
        internal static string PieChart_Name {
            get {
                return ResourceManager.GetString("PieChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export pie chart to PDF file.
        /// </summary>
        internal static string PieChartPdf_Descrip {
            get {
                return ResourceManager.GetString("PieChartPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pie chart.
        /// </summary>
        internal static string PieChartPdf_Name {
            get {
                return ResourceManager.GetString("PieChartPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Pivot Table
        ///A pivot table is a data summarization tool. It can automatically count, total, or average the data stored in a spreadsheet, and display the resulting summarized data in a second table.
        ///
        ///Create a pivot cache using the **Create** method of the workbook&apos;s **PivotCaches** collection. It returns an instance of the **IPivotCache** interface. 
        ///
        ///Create a pivot table using the **CreatePivotTable** method of the pivot cache instance. Or you can opt to use the **Add** method of the worksheet&apos;s **Pi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PivotTable_Descrip {
            get {
                return ResourceManager.GetString("PivotTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pivot Table.
        /// </summary>
        internal static string PivotTable_Name {
            get {
                return ResourceManager.GetString("PivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Plot area
        ///These examples demonstrate how to specify settings for **plot area**..
        /// </summary>
        internal static string PlotArea_Descrip {
            get {
                return ResourceManager.GetString("PlotArea.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plot area.
        /// </summary>
        internal static string PlotArea_Name {
            get {
                return ResourceManager.GetString("PlotArea.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to get the precedents of a cell..
        /// </summary>
        internal static string Precedents_Descrip {
            get {
                return ResourceManager.GetString("Precedents.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Precedents.
        /// </summary>
        internal static string Precedents_Name {
            get {
                return ResourceManager.GetString("Precedents.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The examples in this folder demonstrate how to get the precedents or dependents of a cell..
        /// </summary>
        internal static string Precedentsanddependents_Descrip {
            get {
                return ResourceManager.GetString("Precedentsanddependents.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Precedents &amp; dependents.
        /// </summary>
        internal static string Precedentsanddependents_Name {
            get {
                return ResourceManager.GetString("Precedentsanddependents.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## PrintManager
        ///GcExcel introduces PrintManager class to control pagination and spreadsheet content while exporting the spreadsheets to PDF. The feature can help control printing of specific parts of Excel to PDF documents, providing the users specific API that gets the pagination result in the PageInfo object - a list of pages generated from the excel file through PrintManager.Paginate method, and then perform operations like :
        ///
        ///- Add/delete/modify pages.
        ///- Change page number, page count, page content  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PrintManager_Descrip {
            get {
                return ResourceManager.GetString("PrintManager.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PrintManager.
        /// </summary>
        internal static string PrintManager_Name {
            get {
                return ResourceManager.GetString("PrintManager.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to allow users to export multiple worksheets to a single page in the PDF file..
        /// </summary>
        internal static string PrintMultipleWorksheetsToOnePage_Descrip {
            get {
                return ResourceManager.GetString("PrintMultipleWorksheetsToOnePage.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print multiple worksheets to one page.
        /// </summary>
        internal static string PrintMultipleWorksheetsToOnePage_Name {
            get {
                return ResourceManager.GetString("PrintMultipleWorksheetsToOnePage.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to export some specific pages to the PDF file..
        /// </summary>
        internal static string PrintSpecificPages_Descrip {
            get {
                return ResourceManager.GetString("PrintSpecificPages.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print specific pages.
        /// </summary>
        internal static string PrintSpecificPages_Name {
            get {
                return ResourceManager.GetString("PrintSpecificPages.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to print the transparency of the cell&apos;s background colors..
        /// </summary>
        internal static string PrintTransparentCell_Descrip {
            get {
                return ResourceManager.GetString("PrintTransparentCell.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print transparent cell.
        /// </summary>
        internal static string PrintTransparentCell_Name {
            get {
                return ResourceManager.GetString("PrintTransparentCell.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project cost tracker.
        /// </summary>
        internal static string ProjectCostTracker_Name {
            get {
                return ResourceManager.GetString("ProjectCostTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Properties
        ///GcExcel use parenthese **(** and **)** to organize all template properties. Property is set in key-value format. Multiple properties are separated using comma.
        ///
        ///Property name and value are case-insensitive. 
        ///
        ///For example: (context=A1) is equal to (Context = a1).
        ///
        ///Property name and predefined value support full name and shorthand. 
        ///
        ///For example: (E = H) is equal to (expansion = horizontal).
        ///
        ///The template provides lots of properties:
        ///
        ///- **C(context):** Cell context
        ///- **E(expansion) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Properties_Descrip {
            get {
                return ResourceManager.GetString("Properties.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        internal static string Properties_Name {
            get {
                return ResourceManager.GetString("Properties.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Protection 
        ///The Protection examples demonstrate how to apply security settings to a range, for example:
        ///- The **FormulaHidden** property keeps formulas in a range from appearing in exported .xlsx files.
        ///- The **Locked** property protects cells in a range from being modified.
        /// </summary>
        internal static string Protection_Descrip {
            get {
                return ResourceManager.GetString("Protection.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protection.
        /// </summary>
        internal static string Protection_Name {
            get {
                return ResourceManager.GetString("Protection.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using IWorkbook.Protect method to protect a workbook..
        /// </summary>
        internal static string ProtectWorkbook_Descrip {
            get {
                return ResourceManager.GetString("ProtectWorkbook.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protect workbook.
        /// </summary>
        internal static string ProtectWorkbook_Name {
            get {
                return ResourceManager.GetString("ProtectWorkbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to protect a worksheet and configure the protect settings..
        /// </summary>
        internal static string ProtectWorksheet_Descrip {
            get {
                return ResourceManager.GetString("ProtectWorksheet.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protect worksheet.
        /// </summary>
        internal static string ProtectWorksheet_Name {
            get {
                return ResourceManager.GetString("ProtectWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to protect the worksheet with a password..
        /// </summary>
        internal static string ProtectWorksheetWithPassword_Descrip {
            get {
                return ResourceManager.GetString("ProtectWorksheetWithPassword.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protect worksheet with password.
        /// </summary>
        internal static string ProtectWorksheetWithPassword_Name {
            get {
                return ResourceManager.GetString("ProtectWorksheetWithPassword.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample is to show a entire document report with static values and a dynamic table..
        /// </summary>
        internal static string PurchaseOrder_Descrip {
            get {
                return ResourceManager.GetString("PurchaseOrder.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purchase order.
        /// </summary>
        internal static string PurchaseOrder_Name {
            get {
                return ResourceManager.GetString("PurchaseOrder.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export radar chart to PDF file.
        /// </summary>
        internal static string RadarChartPdf_Descrip {
            get {
                return ResourceManager.GetString("RadarChartPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radar chart.
        /// </summary>
        internal static string RadarChartPdf_Name {
            get {
                return ResourceManager.GetString("RadarChartPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Range Operations
        ///A range is a cell or a cluster of cells in a spreadsheet that can be used to execute important operations on cells, rows or columns with the help of **Range** property of the **IWorksheet** interface.
        ///
        ///Examples in this folder demonstrate how to:
        ///- Access cells, rows, and columns
        ///- Access each area of a range
        ///- Access ranges in various ways
        ///- Cut, Copy, and Paste a range
        ///- Work with a used range of cells
        ///- Get a row count or column count
        ///- Hide a row or column
        ///- Insert or delet [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RangeOperations_Descrip {
            get {
                return ResourceManager.GetString("RangeOperations.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range Operations.
        /// </summary>
        internal static string RangeOperations_Name {
            get {
                return ResourceManager.GetString("RangeOperations.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to re-apply the filter after cell changed..
        /// </summary>
        internal static string ReApplyFilter_Descrip {
            get {
                return ResourceManager.GetString("ReApplyFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reapply filter.
        /// </summary>
        internal static string ReApplyFilter_Name {
            get {
                return ResourceManager.GetString("ReApplyFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to set a rectangular gradient fill to a cell..
        /// </summary>
        internal static string RectangularGradientFill_Descrip {
            get {
                return ResourceManager.GetString("RectangularGradientFill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set rectangular gradient fill.
        /// </summary>
        internal static string RectangularGradientFill_Name {
            get {
                return ResourceManager.GetString("RectangularGradientFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to refresh pivot table when some cell value changes..
        /// </summary>
        internal static string RefreshPivotTable_Descrip {
            get {
                return ResourceManager.GetString("RefreshPivotTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh pivot table.
        /// </summary>
        internal static string RefreshPivotTable_Name {
            get {
                return ResourceManager.GetString("RefreshPivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove subtotals with IRange.RemoveSubtotal.
        /// </summary>
        internal static string RemoveSubtotal_Descrip {
            get {
                return ResourceManager.GetString("RemoveSubtotal.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove subtotals.
        /// </summary>
        internal static string RemoveSubtotal_Name {
            get {
                return ResourceManager.GetString("RemoveSubtotal.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In GcExcel .NET, you can delete tables in spreadsheets using the Delete Method of the ITable Interface..
        /// </summary>
        internal static string RemoveTable_Descrip {
            get {
                return ResourceManager.GetString("RemoveTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove table.
        /// </summary>
        internal static string RemoveTable_Name {
            get {
                return ResourceManager.GetString("RemoveTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to allow users to render Excel ranges inside the PDF file along with some custom textual information at runtime to the specified location on the page..
        /// </summary>
        internal static string RenderExcelRangesInsideAPDF_Descrip {
            get {
                return ResourceManager.GetString("RenderExcelRangesInsideAPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Render sheet ranges inside a pdf(Advanced usage).
        /// </summary>
        internal static string RenderExcelRangesInsideAPDF_Name {
            get {
                return ResourceManager.GetString("RenderExcelRangesInsideAPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to replace cell&apos;s content in a range..
        /// </summary>
        internal static string ReplaceBasicUsage_Descrip {
            get {
                return ResourceManager.GetString("ReplaceBasicUsage.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace (basic usage).
        /// </summary>
        internal static string ReplaceBasicUsage_Name {
            get {
                return ResourceManager.GetString("ReplaceBasicUsage.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to search and replace cell content in a loop..
        /// </summary>
        internal static string ReplaceCustomWrapSearch_Descrip {
            get {
                return ResourceManager.GetString("ReplaceCustomWrapSearch.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace (search in loop).
        /// </summary>
        internal static string ReplaceCustomWrapSearch_Name {
            get {
                return ResourceManager.GetString("ReplaceCustomWrapSearch.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to replace cell&apos;s content with options..
        /// </summary>
        internal static string ReplaceWithOptions_Descrip {
            get {
                return ResourceManager.GetString("ReplaceWithOptions.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace (with options).
        /// </summary>
        internal static string ReplaceWithOptions_Name {
            get {
                return ResourceManager.GetString("ReplaceWithOptions.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GrapeCity Documents for Excel Features.
        /// </summary>
        internal static string RootExample_Descrip {
            get {
                return ResourceManager.GetString("RootExample.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        internal static string RootExample_Name {
            get {
                return ResourceManager.GetString("RootExample.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can rotate the content of a cell by setting IRange.Orientation property..
        /// </summary>
        internal static string RotateCellContents_Descrip {
            get {
                return ResourceManager.GetString("RotateCellContents.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rotate cell contents.
        /// </summary>
        internal static string RotateCellContents_Name {
            get {
                return ResourceManager.GetString("RotateCellContents.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set row axis layout to tabular with IPivotTable.SetRowAxisLayout.
        /// </summary>
        internal static string RowAxisLayoutInPivotTable_Descrip {
            get {
                return ResourceManager.GetString("RowAxisLayoutInPivotTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change row axis layout.
        /// </summary>
        internal static string RowAxisLayoutInPivotTable_Name {
            get {
                return ResourceManager.GetString("RowAxisLayoutInPivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample is to show an outline group template table. It has outline and subtotal groups for each area..
        /// </summary>
        internal static string Sales_Descrip {
            get {
                return ResourceManager.GetString("Sales.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sales.
        /// </summary>
        internal static string Sales_Name {
            get {
                return ResourceManager.GetString("Sales.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample is to show the template working with charts. These charts are using template cells as their series&apos; data: values, axis labels etc..
        /// </summary>
        internal static string SalesTracker_Descrip {
            get {
                return ResourceManager.GetString("SalesTracker.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sales tracker.
        /// </summary>
        internal static string SalesTracker_Name {
            get {
                return ResourceManager.GetString("SalesTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Samples.
        /// </summary>
        internal static string Samples_Name {
            get {
                return ResourceManager.GetString("Samples.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to export background pictures to pdf..
        /// </summary>
        internal static string SaveBackgroundPicturesToPDF_Descrip {
            get {
                return ResourceManager.GetString("SaveBackgroundPicturesToPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save background pictures to pdf.
        /// </summary>
        internal static string SaveBackgroundPicturesToPDF_Name {
            get {
                return ResourceManager.GetString("SaveBackgroundPicturesToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export all kinds of Excel borders to PDF..
        /// </summary>
        internal static string SaveBorder_Descrip {
            get {
                return ResourceManager.GetString("SaveBorder.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export borders.
        /// </summary>
        internal static string SaveBorder_Name {
            get {
                return ResourceManager.GetString("SaveBorder.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export a spreadsheet with conditional formats to PDF..
        /// </summary>
        internal static string SaveConditionalFormatting_Descrip {
            get {
                return ResourceManager.GetString("SaveConditionalFormatting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export Conditional Formatting.
        /// </summary>
        internal static string SaveConditionalFormatting_Name {
            get {
                return ResourceManager.GetString("SaveConditionalFormatting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel allows users to save multiple workbooks into a single PDF file..
        /// </summary>
        internal static string SaveMultipleWorkbooksToPDF_Descrip {
            get {
                return ResourceManager.GetString("SaveMultipleWorkbooksToPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save multiple workbooks to one pdf.
        /// </summary>
        internal static string SaveMultipleWorkbooksToPDF_Name {
            get {
                return ResourceManager.GetString("SaveMultipleWorkbooksToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export a spreadsheet with pictures to PDF..
        /// </summary>
        internal static string SavePictureToPDF_Descrip {
            get {
                return ResourceManager.GetString("SavePictureToPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export picture.
        /// </summary>
        internal static string SavePictureToPDF_Name {
            get {
                return ResourceManager.GetString("SavePictureToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export a spreadsheet with pivot tables to PDF..
        /// </summary>
        internal static string SavePivotTable_Descrip {
            get {
                return ResourceManager.GetString("SavePivotTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export pivot table.
        /// </summary>
        internal static string SavePivotTable_Name {
            get {
                return ResourceManager.GetString("SavePivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export a spreadsheet range with different kinds of fills(solid, gradient, pattern) to PDF..
        /// </summary>
        internal static string SaveRangeFillToPDF_Descrip {
            get {
                return ResourceManager.GetString("SaveRangeFillToPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export fills.
        /// </summary>
        internal static string SaveRangeFillToPDF_Name {
            get {
                return ResourceManager.GetString("SaveRangeFillToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GrapeCity Documents for Excel supports exporting the sheet background image to PDF..
        /// </summary>
        internal static string SaveSheetBackgroundToPDF_Descrip {
            get {
                return ResourceManager.GetString("SaveSheetBackgroundToPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export sheet background image.
        /// </summary>
        internal static string SaveSheetBackgroundToPDF_Name {
            get {
                return ResourceManager.GetString("SaveSheetBackgroundToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Slicers can be exported to pdf.
        /// </summary>
        internal static string SaveSlicer_Descrip {
            get {
                return ResourceManager.GetString("SaveSlicer.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export slicers.
        /// </summary>
        internal static string SaveSlicer_Name {
            get {
                return ResourceManager.GetString("SaveSlicer.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export a spreadsheet with sparklines to PDF..
        /// </summary>
        internal static string SaveSparklinesToPDF_Descrip {
            get {
                return ResourceManager.GetString("SaveSparklinesToPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export sparklines.
        /// </summary>
        internal static string SaveSparklinesToPDF_Name {
            get {
                return ResourceManager.GetString("SaveSparklinesToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export a spreadsheet with tables to PDF..
        /// </summary>
        internal static string SaveTable_Descrip {
            get {
                return ResourceManager.GetString("SaveTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export table.
        /// </summary>
        internal static string SaveTable_Name {
            get {
                return ResourceManager.GetString("SaveTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to save  a workbook to csv file..
        /// </summary>
        internal static string SaveWorkbookToCsvFile_Descrip {
            get {
                return ResourceManager.GetString("SaveWorkbookToCsvFile.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save workbook to csv file.
        /// </summary>
        internal static string SaveWorkbookToCsvFile_Name {
            get {
                return ResourceManager.GetString("SaveWorkbookToCsvFile.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to save  a workbook to csv file with options..
        /// </summary>
        internal static string SaveWorkbookToCsvFileWithOptions_Descrip {
            get {
                return ResourceManager.GetString("SaveWorkbookToCsvFileWithOptions.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save workbook to csv file with options.
        /// </summary>
        internal static string SaveWorkbookToCsvFileWithOptions_Name {
            get {
                return ResourceManager.GetString("SaveWorkbookToCsvFileWithOptions.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to save  a workbook to Excel file..
        /// </summary>
        internal static string SaveWorkbookToExcelFile_Descrip {
            get {
                return ResourceManager.GetString("SaveWorkbookToExcelFile.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save to Excel file.
        /// </summary>
        internal static string SaveWorkbookToExcelFile_Name {
            get {
                return ResourceManager.GetString("SaveWorkbookToExcelFile.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to export a workbook to PDF document..
        /// </summary>
        internal static string SaveWorkbookToPDF_Descrip {
            get {
                return ResourceManager.GetString("SaveWorkbookToPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save workbook to PDF.
        /// </summary>
        internal static string SaveWorkbookToPDF_Name {
            get {
                return ResourceManager.GetString("SaveWorkbookToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to save  a workbook to password protected  Excel file..
        /// </summary>
        internal static string SaveWorkbookWithPassword_Descrip {
            get {
                return ResourceManager.GetString("SaveWorkbookWithPassword.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save to Excel file with password.
        /// </summary>
        internal static string SaveWorkbookWithPassword_Name {
            get {
                return ResourceManager.GetString("SaveWorkbookWithPassword.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to save a single worksheet to csv file..
        /// </summary>
        internal static string SaveWorksheetToCsvFile_Descrip {
            get {
                return ResourceManager.GetString("SaveWorksheetToCsvFile.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save worksheet to csv file.
        /// </summary>
        internal static string SaveWorksheetToCsvFile_Name {
            get {
                return ResourceManager.GetString("SaveWorksheetToCsvFile.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to save a single worksheet to csv file with options..
        /// </summary>
        internal static string SaveWorksheetToCsvFileWithOptions_Descrip {
            get {
                return ResourceManager.GetString("SaveWorksheetToCsvFileWithOptions.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save worksheet to csv file with options.
        /// </summary>
        internal static string SaveWorksheetToCsvFileWithOptions_Name {
            get {
                return ResourceManager.GetString("SaveWorksheetToCsvFileWithOptions.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to export a single worksheet to PDF document..
        /// </summary>
        internal static string SaveWorksheetToPDF_Descrip {
            get {
                return ResourceManager.GetString("SaveWorksheetToPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save worksheet to PDF.
        /// </summary>
        internal static string SaveWorksheetToPDF_Name {
            get {
                return ResourceManager.GetString("SaveWorksheetToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Series
        ///**Series** is the most frequently used feature in charts. Each chart contains one or more data series, and each series consists of a group of data points. 
        ///
        ///These examples demonstrate how to add a series to a chart, and how to specify settings for each series, such as:
        ///
        ///- **BubbleScale** and **SizeRepresents** for bubble charts
        ///- Configure **Series** format
        ///- Change **Series Type**
        ///- Add **Secondary Axis**
        ///- **VaryByCategories** colors for single-series column charts.
        /// </summary>
        internal static string Series_Descrip {
            get {
                return ResourceManager.GetString("Series.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Series.
        /// </summary>
        internal static string Series_Name {
            get {
                return ResourceManager.GetString("Series.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to use logarithmic scale for a value axis. .
        /// </summary>
        internal static string SetAxisScaleType_Descrip {
            get {
                return ResourceManager.GetString("SetAxisScaleType.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set value axis scale type.
        /// </summary>
        internal static string SetAxisScaleType_Name {
            get {
                return ResourceManager.GetString("SetAxisScaleType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure tick mark of axis..
        /// </summary>
        internal static string SetAxisTickMark_Descrip {
            get {
                return ResourceManager.GetString("SetAxisTickMark.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure axis tick mark layout.
        /// </summary>
        internal static string SetAxisTickMark_Name {
            get {
                return ResourceManager.GetString("SetAxisTickMark.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to set a background image for worksheet..
        /// </summary>
        internal static string SetBackgroundImage_Descrip {
            get {
                return ResourceManager.GetString("SetBackgroundImage.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set background image for worksheet.
        /// </summary>
        internal static string SetBackgroundImage_Name {
            get {
                return ResourceManager.GetString("SetBackgroundImage.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to set a built-in style for pivot table..
        /// </summary>
        internal static string SetBuiltinStyle_Descrip {
            get {
                return ResourceManager.GetString("SetBuiltinStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set built-in pivot style.
        /// </summary>
        internal static string SetBuiltinStyle_Name {
            get {
                return ResourceManager.GetString("SetBuiltinStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User can use **C(context)** property to set a template&apos;s context explicitly..
        /// </summary>
        internal static string SetContext_Descrip {
            get {
                return ResourceManager.GetString("SetContext.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set context.
        /// </summary>
        internal static string SetContext_Name {
            get {
                return ResourceManager.GetString("SetContext.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to customize a pivot table style.
        /// </summary>
        internal static string SetCustomPivotStyle_Descrip {
            get {
                return ResourceManager.GetString("SetCustomPivotStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set custom pivot style.
        /// </summary>
        internal static string SetCustomPivotStyle_Name {
            get {
                return ResourceManager.GetString("SetCustomPivotStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GrapeCity Documents for Excel supports setting the document properties when saving PDF..
        /// </summary>
        internal static string SetDocumentPropertiesToPDF_Descrip {
            get {
                return ResourceManager.GetString("SetDocumentPropertiesToPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set document properties for PDF document.
        /// </summary>
        internal static string SetDocumentPropertiesToPDF_Name {
            get {
                return ResourceManager.GetString("SetDocumentPropertiesToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User can use **E(expansion)** property to set a template&apos;s expansion type..
        /// </summary>
        internal static string SetExpansionType_Descrip {
            get {
                return ResourceManager.GetString("SetExpansionType.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set expansion type.
        /// </summary>
        internal static string SetExpansionType_Name {
            get {
                return ResourceManager.GetString("SetExpansionType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to set the fonts folder path before saving to PDF document..
        /// </summary>
        internal static string SetFontsFolderPath_Descrip {
            get {
                return ResourceManager.GetString("SetFontsFolderPath.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font&apos;s folder.
        /// </summary>
        internal static string SetFontsFolderPath_Name {
            get {
                return ResourceManager.GetString("SetFontsFolderPath.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set group type.
        /// </summary>
        internal static string SetGroupType {
            get {
                return ResourceManager.GetString("SetGroupType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User can use **G(group)** property to set a template&apos;s group type..
        /// </summary>
        internal static string SetGroupType_Descrip {
            get {
                return ResourceManager.GetString("SetGroupType.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set group type.
        /// </summary>
        internal static string SetGroupType_Name {
            get {
                return ResourceManager.GetString("SetGroupType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to set number format for a pivot field..
        /// </summary>
        internal static string SetNumberFormatForField_Descrip {
            get {
                return ResourceManager.GetString("SetNumberFormatForField.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set number format for Fields.
        /// </summary>
        internal static string SetNumberFormatForField_Name {
            get {
                return ResourceManager.GetString("SetNumberFormatForField.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User can use **PB(pagebreak)** property on a template to insert a pagebreak dynamically for the report..
        /// </summary>
        internal static string SetPagebreak_Descrip {
            get {
                return ResourceManager.GetString("SetPagebreak.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set pagebreak.
        /// </summary>
        internal static string SetPagebreak_Name {
            get {
                return ResourceManager.GetString("SetPagebreak.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to control whether the PDF page size is used to select the input paper tray when printing..
        /// </summary>
        internal static string SetPickTrayByPDFSizeOptionToPDF_Descrip {
            get {
                return ResourceManager.GetString("SetPickTrayByPDFSizeOptionToPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set PickTrayByPDFSize option for PDF document.
        /// </summary>
        internal static string SetPickTrayByPDFSizeOptionToPDF_Name {
            get {
                return ResourceManager.GetString("SetPickTrayByPDFSizeOptionToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename a pivot field with IPivotField.Name property.
        /// </summary>
        internal static string SetPivotFieldNameInPivotTable_Descrip {
            get {
                return ResourceManager.GetString("SetPivotFieldNameInPivotTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename a pivot field.
        /// </summary>
        internal static string SetPivotFieldNameInPivotTable_Name {
            get {
                return ResourceManager.GetString("SetPivotFieldNameInPivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User can use **R(range)** property to set a range for the current template.
        ///
        ///In the specified range, if a template cell has no default context nor explicit context, it will take the current template as its context..
        /// </summary>
        internal static string SetRange_Descrip {
            get {
                return ResourceManager.GetString("SetRange.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set range.
        /// </summary>
        internal static string SetRange_Name {
            get {
                return ResourceManager.GetString("SetRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the IRange.FormulaHidden is true, the formula will not display in the exported Excel file..
        /// </summary>
        internal static string SetRangeFormulaHidden_Descrip {
            get {
                return ResourceManager.GetString("SetRangeFormulaHidden.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide formula.
        /// </summary>
        internal static string SetRangeFormulaHidden_Name {
            get {
                return ResourceManager.GetString("SetRangeFormulaHidden.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IRange.Locked determines whether the cell can be modified in exported Excel when the sheet is protected..
        /// </summary>
        internal static string SetRangeLocked_Descrip {
            get {
                return ResourceManager.GetString("SetRangeLocked.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock range.
        /// </summary>
        internal static string SetRangeLocked_Name {
            get {
                return ResourceManager.GetString("SetRangeLocked.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel allows users to specify custom values for the cell range by using the properties and methods of the IRange interface..
        /// </summary>
        internal static string SetRangeValue_Descrip {
            get {
                return ResourceManager.GetString("SetRangeValue.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set values to a range.
        /// </summary>
        internal static string SetRangeValue_Name {
            get {
                return ResourceManager.GetString("SetRangeValue.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to create a rich text comment for a cell..
        /// </summary>
        internal static string SetRichTextForComment_Descrip {
            get {
                return ResourceManager.GetString("SetRichTextForComment.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set rich text for comment.
        /// </summary>
        internal static string SetRichTextForComment_Name {
            get {
                return ResourceManager.GetString("SetRichTextForComment.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to set height(in point) for rows and set width(number of single digital character width) for columns..
        /// </summary>
        internal static string SetRowHeightColumnWidth_Descrip {
            get {
                return ResourceManager.GetString("SetRowHeightColumnWidth.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set row height and column width.
        /// </summary>
        internal static string SetRowHeightColumnWidth_Name {
            get {
                return ResourceManager.GetString("SetRowHeightColumnWidth.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GrapeCity Documents for Excel supports setting the security options when saving PDF..
        /// </summary>
        internal static string SetSecurityOptionsToPDF_Descrip {
            get {
                return ResourceManager.GetString("SetSecurityOptionsToPDF.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set security options for PDF document.
        /// </summary>
        internal static string SetSecurityOptionsToPDF_Name {
            get {
                return ResourceManager.GetString("SetSecurityOptionsToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IsPrintable property of the IShape interface can be used to get or set whether the object will be printed in the PDF document..
        /// </summary>
        internal static string SetShapeNotToPrint_Descrip {
            get {
                return ResourceManager.GetString("SetShapeNotToPrint.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not print shapes.
        /// </summary>
        internal static string SetShapeNotToPrint_Name {
            get {
                return ResourceManager.GetString("SetShapeNotToPrint.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add rich text for a shape..
        /// </summary>
        internal static string SetShapeText_Descrip {
            get {
                return ResourceManager.GetString("SetShapeText.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s text.
        /// </summary>
        internal static string SetShapeText_Name {
            get {
                return ResourceManager.GetString("SetShapeText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to set the horizontal and vertical alignment of the shape&apos;s text in GcExcel..
        /// </summary>
        internal static string SetShapeTextAlignment_Descrip {
            get {
                return ResourceManager.GetString("SetShapeTextAlignment.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set alignment of shape&apos;s text.
        /// </summary>
        internal static string SetShapeTextAlignment_Name {
            get {
                return ResourceManager.GetString("SetShapeTextAlignment.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to show or hide some of table style elements..
        /// </summary>
        internal static string SetShowTableStyles_Descrip {
            get {
                return ResourceManager.GetString("SetShowTableStyles.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set if some style would be showed.
        /// </summary>
        internal static string SetShowTableStyles_Name {
            get {
                return ResourceManager.GetString("SetShowTableStyles.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User can use **S(sort)** property to set a template&apos;s sort type..
        /// </summary>
        internal static string SetSortType_Descrip {
            get {
                return ResourceManager.GetString("SetSortType.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set sort type.
        /// </summary>
        internal static string SetSortType_Name {
            get {
                return ResourceManager.GetString("SetSortType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to make each data series render vary colors..
        /// </summary>
        internal static string SetVaryColorForColumnChart_Descrip {
            get {
                return ResourceManager.GetString("SetVaryColorForColumnChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set column chart colors to vary.
        /// </summary>
        internal static string SetVaryColorForColumnChart_Name {
            get {
                return ResourceManager.GetString("SetVaryColorForColumnChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Shape
        ///GrapeCity Documents for Excel lets you embed drawing objects like shapes and pictures in the cells of a worksheet. You can insert arrows, lines, charts, slicers, pictures, and general shapes.
        ///
        ///To create a shape for a worksheet, use the **AddShape** method of the worksheet&apos;s Shapes collection. Then you can configure the Shape instance using properties like these:
        ///
        ///- Configure a shape&apos;s fill style using the **Fill** property 
        ///- Configure a shape&apos;s line style using the **Line** property
        ///- Confi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Shape_Descrip {
            get {
                return ResourceManager.GetString("Shape.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shape.
        /// </summary>
        internal static string Shape_Name {
            get {
                return ResourceManager.GetString("Shape.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to copy a shape object..
        /// </summary>
        internal static string ShapeCopy_Descrip {
            get {
                return ResourceManager.GetString("ShapeCopy.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy shape.
        /// </summary>
        internal static string ShapeCopy_Name {
            get {
                return ResourceManager.GetString("ShapeCopy.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to cut a shape object.
        /// </summary>
        internal static string ShapeCut_Descrip {
            get {
                return ResourceManager.GetString("ShapeCut.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut shape.
        /// </summary>
        internal static string ShapeCut_Name {
            get {
                return ResourceManager.GetString("ShapeCut.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to duplicate a shape object..
        /// </summary>
        internal static string ShapeDuplicate_Descrip {
            get {
                return ResourceManager.GetString("ShapeDuplicate.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate shape.
        /// </summary>
        internal static string ShapeDuplicate_Name {
            get {
                return ResourceManager.GetString("ShapeDuplicate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group shapes with IShapeRange.Group.
        /// </summary>
        internal static string ShapeGroup_Descrip {
            get {
                return ResourceManager.GetString("ShapeGroup.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group shapes.
        /// </summary>
        internal static string ShapeGroup_Name {
            get {
                return ResourceManager.GetString("ShapeGroup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ungroup shape with IShape.Ungroup.
        /// </summary>
        internal static string ShapeUngroup_Descrip {
            get {
                return ResourceManager.GetString("ShapeUngroup.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ungroup shape.
        /// </summary>
        internal static string ShapeUngroup_Name {
            get {
                return ResourceManager.GetString("ShapeUngroup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export shapes with gradient or pattern fill to PDF file..
        /// </summary>
        internal static string ShapeWithGradientAndPatternFill_Descrip {
            get {
                return ResourceManager.GetString("ShapeWithGradientAndPatternFill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shape with different fills.
        /// </summary>
        internal static string ShapeWithGradientAndPatternFill_Name {
            get {
                return ResourceManager.GetString("ShapeWithGradientAndPatternFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export shapes with varying kind of border settings to PDF file..
        /// </summary>
        internal static string ShapeWithLine_Descrip {
            get {
                return ResourceManager.GetString("ShapeWithLine.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shape with line format.
        /// </summary>
        internal static string ShapeWithLine_Name {
            get {
                return ResourceManager.GetString("ShapeWithLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export shapes with picture or texture fill to PDF file..
        /// </summary>
        internal static string ShapeWithPictureOrTextureFill_Descrip {
            get {
                return ResourceManager.GetString("ShapeWithPictureOrTextureFill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shape with picture/texture fill.
        /// </summary>
        internal static string ShapeWithPictureOrTextureFill_Name {
            get {
                return ResourceManager.GetString("ShapeWithPictureOrTextureFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export rotated shapes to PDF file..
        /// </summary>
        internal static string ShapeWithRotation_Descrip {
            get {
                return ResourceManager.GetString("ShapeWithRotation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shape with rotation.
        /// </summary>
        internal static string ShapeWithRotation_Name {
            get {
                return ResourceManager.GetString("ShapeWithRotation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export shape with rich text to PDF file..
        /// </summary>
        internal static string ShapeWithText_Descrip {
            get {
                return ResourceManager.GetString("ShapeWithText.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shape with text.
        /// </summary>
        internal static string ShapeWithText_Name {
            get {
                return ResourceManager.GetString("ShapeWithText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export shape text with alignment to PDF file..
        /// </summary>
        internal static string ShapeWithTextAlignment_Descrip {
            get {
                return ResourceManager.GetString("ShapeWithTextAlignment.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shape with text alignment.
        /// </summary>
        internal static string ShapeWithTextAlignment_Name {
            get {
                return ResourceManager.GetString("ShapeWithTextAlignment.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Sheet binding
        ///The examples in this folder demonstrate how to config sheet binding:
        ///- Use IRange.BindingPath to get/set column binding path (e.g. worksheet.Range[&quot;A:A&quot;].EntireColumn.BindingPath = &quot;xxx&quot; ).
        ///- Use IWorsheet.AutoGenerateColumns to get/set if data source should be bound to columns automatically. The default value is true.
        ///- If IWorsheet.AutoGenerateColumns is true, each property and field of source data would be bound to a column.
        ///- Use IWorksheet.DataSource to get/set data source. And ea [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SheetBinding_Descrip {
            get {
                return ResourceManager.GetString("SheetBinding.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sheet binding.
        /// </summary>
        internal static string SheetBinding_Name {
            get {
                return ResourceManager.GetString("SheetBinding.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind data with a template, that has template field in the name of the worksheet..
        /// </summary>
        internal static string SheetTemplate_Descrip {
            get {
                return ResourceManager.GetString("SheetTemplate.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sheet template.
        /// </summary>
        internal static string SheetTemplate_Name {
            get {
                return ResourceManager.GetString("SheetTemplate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample is to show a document report with pre-desigied style. It uses template to fill the static and dynamic data..
        /// </summary>
        internal static string ShippingAndDeliveryOrder_Descrip {
            get {
                return ResourceManager.GetString("ShippingAndDeliveryOrder.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shipping &amp; delivery order.
        /// </summary>
        internal static string ShippingAndDeliveryOrder_Name {
            get {
                return ResourceManager.GetString("ShippingAndDeliveryOrder.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this folder, you can explore complete code demonstrating how to generate an Excel file, or  you may have your own Excel files and just want to open and update some of its contents at server side
        ///
        ///Click the **&quot;Run&quot;** button to perform the following actions on the server:
        ///- Create an empty workbook or open an existing Excel file.
        ///- Execute all of code in the code window
        ///- Save to an Excel file.
        /// </summary>
        internal static string Showcase_Descrip {
            get {
                return ResourceManager.GetString("Showcase.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Showcase.
        /// </summary>
        internal static string Showcase_Name {
            get {
                return ResourceManager.GetString("Showcase.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can also choose to display specified levels of row or column groups using the ShowLevels method of the IOutline interface..
        /// </summary>
        internal static string ShowSpecificLevel_Descrip {
            get {
                return ResourceManager.GetString("ShowSpecificLevel.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show specific level group.
        /// </summary>
        internal static string ShowSpecificLevel_Name {
            get {
                return ResourceManager.GetString("ShowSpecificLevel.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can make the text of a cell shrink to fit in the available column with by setting IRange.ShrinkToFit to true..
        /// </summary>
        internal static string ShrinkToFit_Descrip {
            get {
                return ResourceManager.GetString("ShrinkToFit.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shrink to fit.
        /// </summary>
        internal static string ShrinkToFit_Name {
            get {
                return ResourceManager.GetString("ShrinkToFit.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to shrink to fit the wrapped text when exporting to PDF..
        /// </summary>
        internal static string ShrinkToFitForWrappedText_Descrip {
            get {
                return ResourceManager.GetString("ShrinkToFitForWrappedText.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shrink to fit for wrapped text.
        /// </summary>
        internal static string ShrinkToFitForWrappedText_Name {
            get {
                return ResourceManager.GetString("ShrinkToFitForWrappedText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple Budget.
        /// </summary>
        internal static string SimpleBudget_Name {
            get {
                return ResourceManager.GetString("SimpleBudget.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple invoice.
        /// </summary>
        internal static string SimpleInvoice_Name {
            get {
                return ResourceManager.GetString("SimpleInvoice.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple personal budget.
        /// </summary>
        internal static string SimplePersonalBudget_Name {
            get {
                return ResourceManager.GetString("SimplePersonalBudget.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Slicer
        ///Slicers are visual filters that you can use to filter a table or pivot table.
        ///
        ///Use the **Add** method of a workbook&apos;s **SlicerCaches** collection to create a slicer cache. It returns an instance of a slicer cache. 
        ///
        ///Use the **Add** method of the slicer cache&apos;s **Slicers** collection to create a slicer.
        ///
        ///It supports both built-in and custom slicer styles..
        /// </summary>
        internal static string Slicer_Descrip {
            get {
                return ResourceManager.GetString("Slicer.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Slicer.
        /// </summary>
        internal static string Slicer_Name {
            get {
                return ResourceManager.GetString("Slicer.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to copy a slicer object.
        /// </summary>
        internal static string SlicerCopy_Descrip {
            get {
                return ResourceManager.GetString("SlicerCopy.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy slicer.
        /// </summary>
        internal static string SlicerCopy_Name {
            get {
                return ResourceManager.GetString("SlicerCopy.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to cut a slicer object.
        /// </summary>
        internal static string SlicerCut_Descrip {
            get {
                return ResourceManager.GetString("SlicerCut.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut slicer.
        /// </summary>
        internal static string SlicerCut_Name {
            get {
                return ResourceManager.GetString("SlicerCut.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to duplicate a slicer object.
        /// </summary>
        internal static string SlicerDuplicate_Descrip {
            get {
                return ResourceManager.GetString("SlicerDuplicate.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate slicer.
        /// </summary>
        internal static string SlicerDuplicate_Name {
            get {
                return ResourceManager.GetString("SlicerDuplicate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how to set a solid fill to a cell..
        /// </summary>
        internal static string SolidFill_Descrip {
            get {
                return ResourceManager.GetString("SolidFill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set solid fill.
        /// </summary>
        internal static string SolidFill_Name {
            get {
                return ResourceManager.GetString("SolidFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Sorting
        ///GrapeCity Documents for Excel supports all types of sorting, including:
        ///- Sort by value
        ///- Sort by font color
        ///- Sort by interior
        ///- Sort by icon
        ///- Sort by custom list.
        /// </summary>
        internal static string Sorting_Descrip {
            get {
                return ResourceManager.GetString("Sorting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorting.
        /// </summary>
        internal static string Sorting_Name {
            get {
                return ResourceManager.GetString("Sorting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to sort a range by font color..
        /// </summary>
        internal static string SortRangeByFontColor_Descrip {
            get {
                return ResourceManager.GetString("SortRangeByFontColor.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort by font color.
        /// </summary>
        internal static string SortRangeByFontColor_Name {
            get {
                return ResourceManager.GetString("SortRangeByFontColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to sort a range by conditional formatting icons..
        /// </summary>
        internal static string SortRangeByIcon_Descrip {
            get {
                return ResourceManager.GetString("SortRangeByIcon.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort by icon.
        /// </summary>
        internal static string SortRangeByIcon_Name {
            get {
                return ResourceManager.GetString("SortRangeByIcon.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to sort a range by interior..
        /// </summary>
        internal static string SortRangeByInterior_Descrip {
            get {
                return ResourceManager.GetString("SortRangeByInterior.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort range by content.
        /// </summary>
        internal static string SortRangeByInterior_Name {
            get {
                return ResourceManager.GetString("SortRangeByInterior.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to sort a range by value..
        /// </summary>
        internal static string SortRangeByValue_Descrip {
            get {
                return ResourceManager.GetString("SortRangeByValue.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort range by value.
        /// </summary>
        internal static string SortRangeByValue_Name {
            get {
                return ResourceManager.GetString("SortRangeByValue.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Sparklines
        ///GrapeCity Documents for Excel allows you to highlight specific information and see how it varies over time using Sparklines. Sparklines are small, lightweight charts that are drawn inside cells to quickly visualize data for improved analysis.
        ///
        ///Use the **Add** method of a range&apos;s **SparklineGroups** collection to create a group of new sparklines. Sparklines only exist inside of a sparkline group. There is no way to create a sparkline outside of a sparkline group.
        ///
        ///We support the following  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Sparklines_Descrip {
            get {
                return ResourceManager.GetString("Sparklines.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sparklines.
        /// </summary>
        internal static string Sparklines_Name {
            get {
                return ResourceManager.GetString("Sparklines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Spread.Sheets Viewer
        ///Examples in this folder demonstrate how to use **GrapeCity Documents for Excel** and **Spread.Sheets**, another Spread product that is included in SpreadJS. GrapeCity Documents for Excel works on the server side to import and export Excel template files. Spread.Sheets works in the browser (client side) as a viewer or editor.
        ///
        ///To learn more about **Spread.Sheets**, visit the [Spread.Sheets Home Page](https://www.grapecity.com/en/spreadsheets).
        ///
        ///All examples in this folder work as [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SpreadSheetsViewer_Descrip {
            get {
                return ResourceManager.GetString("SpreadSheetsViewer.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread.Sheets Viewer.
        /// </summary>
        internal static string SpreadSheetsViewer_Name {
            get {
                return ResourceManager.GetString("SpreadSheetsViewer.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a high-low-close stock chart in GcExcel..
        /// </summary>
        internal static string Stock_HighLowCloseStockChart_Descrip {
            get {
                return ResourceManager.GetString("Stock_HighLowCloseStockChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-Low-Close stock chart.
        /// </summary>
        internal static string Stock_HighLowCloseStockChart_Name {
            get {
                return ResourceManager.GetString("Stock_HighLowCloseStockChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a open-high-low-close stock chart in GcExcel..
        /// </summary>
        internal static string Stock_OpenHighLowCloseStock_Descrip {
            get {
                return ResourceManager.GetString("Stock_OpenHighLowCloseStock.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open-High-Low-Close stock chart.
        /// </summary>
        internal static string Stock_OpenHighLowCloseStock_Name {
            get {
                return ResourceManager.GetString("Stock_OpenHighLowCloseStock.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a volume-high-low-close stock chart in GcExcel..
        /// </summary>
        internal static string Stock_VolumeHighLowCloseStock_Descrip {
            get {
                return ResourceManager.GetString("Stock_VolumeHighLowCloseStock.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Volume-High-Low-Close stock chart.
        /// </summary>
        internal static string Stock_VolumeHighLowCloseStock_Name {
            get {
                return ResourceManager.GetString("Stock_VolumeHighLowCloseStock.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a volume-open-high-low-close stock chart in GcExcel..
        /// </summary>
        internal static string Stock_VolumeOpenHighLowClose_Descrip {
            get {
                return ResourceManager.GetString("Stock_VolumeOpenHighLowClose.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Volume-Open-High-Low-Close chart.
        /// </summary>
        internal static string Stock_VolumeOpenHighLowClose_Name {
            get {
                return ResourceManager.GetString("Stock_VolumeOpenHighLowClose.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export stock chart to PDF file.
        /// </summary>
        internal static string StockChartPdf_Descrip {
            get {
                return ResourceManager.GetString("StockChartPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stock chart.
        /// </summary>
        internal static string StockChartPdf_Name {
            get {
                return ResourceManager.GetString("StockChartPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Student calendar.
        /// </summary>
        internal static string StudentCalendar_Name {
            get {
                return ResourceManager.GetString("StudentCalendar.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Style
        ///The templates support **cell style** and **merged styles** applied on the cell. The data will grow as per the style applied on the cells..
        /// </summary>
        internal static string Style_Descrip {
            get {
                return ResourceManager.GetString("Style.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Style.
        /// </summary>
        internal static string Style_Name {
            get {
                return ResourceManager.GetString("Style.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export sunburst chart to PDF file.
        /// </summary>
        internal static string SunburstChartPdf_Descrip {
            get {
                return ResourceManager.GetString("SunburstChartPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sunburst chart.
        /// </summary>
        internal static string SunburstChartPdf_Name {
            get {
                return ResourceManager.GetString("SunburstChartPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Table binding
        ///The examples in this folder demonstrate how to config table binding:
        ///- Use ITabel.BindingPath to get/set table&apos;s binding path.
        ///- Use ITableColumn.DataField to get/set binding path for table columns.
        ///- Use ITable.AutoGenerateColumns to get/set if data source should be bound to table columns automatically. The default value is true.
        ///- When ITable.AutoGenerateColumns is true, each property and field of source data would be bound to a table column.
        ///- Use IWorksheet.DataSource to get/set d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TableBinding_Descrip {
            get {
                return ResourceManager.GetString("TableBinding.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Table binding.
        /// </summary>
        internal static string TableBinding_Name {
            get {
                return ResourceManager.GetString("TableBinding.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you have a lot of data to handle, you can create as many tables on a spreadsheet as you want and apply separate filters on columns of each of the table to manage information in an effective manner..
        /// </summary>
        internal static string TableFilter_Descrip {
            get {
                return ResourceManager.GetString("TableFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter table range.
        /// </summary>
        internal static string TableFilter_Name {
            get {
                return ResourceManager.GetString("TableFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Tables
        ///To more easily manage and analyze data in spreadsheet, you can create table for a range. A table consists of rows and columns that you can format and manage independently in a worksheet. You will learn how to:
        ///
        ///- Add or remove a table in a worksheet
        ///- Apply filtering to a table column
        ///- Apply sorting to a table column
        ///- Apply either built-in or custom table styles
        ///- Access each range of a table
        ///- Add or remove a table column
        ///- Perform calculations for a specific table range.
        /// </summary>
        internal static string Tables_Descrip {
            get {
                return ResourceManager.GetString("Tables.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tables.
        /// </summary>
        internal static string Tables_Name {
            get {
                return ResourceManager.GetString("Tables.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel .NET provides an option to apply sorting on a specific table in the worksheet. To accomplish this, you can use the Sort property of the ITable interface. The Apply method is used to apply the selected sort state and display the results..
        /// </summary>
        internal static string TableSort_Descrip {
            get {
                return ResourceManager.GetString("TableSort.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort table range.
        /// </summary>
        internal static string TableSort_Name {
            get {
                return ResourceManager.GetString("TableSort.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample is to show a Tablix template table. It has multiple lines in row &amp; column header. And also, there&apos;re subtotal lines inside..
        /// </summary>
        internal static string TablixReport_Descrip {
            get {
                return ResourceManager.GetString("TablixReport.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tablix report.
        /// </summary>
        internal static string TablixReport_Name {
            get {
                return ResourceManager.GetString("TablixReport.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag provides the ability to store private data in cell/row/column/sheet..
        /// </summary>
        internal static string Tag_Descrip {
            get {
                return ResourceManager.GetString("Tag.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag of sheet/row/column/cell.
        /// </summary>
        internal static string Tag_Name {
            get {
                return ResourceManager.GetString("Tag.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Template cell
        ///GcExcel use **“{{”** and **“}}”** as markers of template.
        ///
        ///Between these markers, user can use data field, function field, expression field and lots of properties.
        ///
        ///The template supports kinds of template cells:
        ///
        ///- **data template:** a template representing a data field
        ///- **function template:** a template representing a function
        ///- **formula template:** a template representing a formula, and will be remained as formula after template processing
        ///- **expression template:** a template [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TemplateCell_Descrip {
            get {
                return ResourceManager.GetString("TemplateCell.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template cell.
        /// </summary>
        internal static string TemplateCell_Name {
            get {
                return ResourceManager.GetString("TemplateCell.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Work with other features
        ///GcExcel template can work with other features to create lots of dynamic reports, such as: conditional formatting, chart.
        ///We&apos;ve planed to support more features working with template in future. .
        /// </summary>
        internal static string TemplateOtherFeatures_Descrip {
            get {
                return ResourceManager.GetString("TemplateOtherFeatures.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Work with other features.
        /// </summary>
        internal static string TemplateOtherFeatures_Name {
            get {
                return ResourceManager.GetString("TemplateOtherFeatures.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Templates
        ///GcExcel(GrapeCity Documents for Excel) introduces new templates support with comprehensive syntax and API to bind Excel documents to data and generate Excel reports with advanced layouts.
        ///
        ///With flexible syntax and easy notations for data expansion and formulas, the new template syntax and API will make it easy to define Excel templates and generate Excel reports supporting numerous use cases.
        ///
        ///In this section, you&apos;ll learn how to use features of **GcExcel Template**. And also, there are se [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Templates_Descrip {
            get {
                return ResourceManager.GetString("Templates.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Templates.
        /// </summary>
        internal static string Templates_Name {
            get {
                return ResourceManager.GetString("Templates.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Template samples
        ///User samples for you to have an entire vision of **GcExcel Templates** and generated reports..
        /// </summary>
        internal static string TemplateSamples_Descrip {
            get {
                return ResourceManager.GetString("TemplateSamples.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template samples.
        /// </summary>
        internal static string TemplateSamples_Name {
            get {
                return ResourceManager.GetString("TemplateSamples.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User can manually set chart&apos;s series name, series value and axis label to related template cells. And the chart can be correctly displayed following these settings after template processing..
        /// </summary>
        internal static string TemplateWorkWithChart_Descrip {
            get {
                return ResourceManager.GetString("TemplateWorkWithChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart.
        /// </summary>
        internal static string TemplateWorkWithChart_Name {
            get {
                return ResourceManager.GetString("TemplateWorkWithChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditional formattings on the a template cell will be applied to all the cells expanded from it after template processing..
        /// </summary>
        internal static string TemplateWorkWithConditionalFormatting_Descrip {
            get {
                return ResourceManager.GetString("TemplateWorkWithConditionalFormatting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditional formatting.
        /// </summary>
        internal static string TemplateWorkWithConditionalFormatting_Name {
            get {
                return ResourceManager.GetString("TemplateWorkWithConditionalFormatting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Export text
        ///Various of text effect can be exported to pdf file, such as:
        ///- Text with Excel number formatter
        ///- Overflow text
        ///- Font effects: text alignment, wordwrap, text indent, shrink to fit, underline, strikethrough .etc.
        /// </summary>
        internal static string Text_Descrip {
            get {
                return ResourceManager.GetString("Text.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export text.
        /// </summary>
        internal static string Text_Name {
            get {
                return ResourceManager.GetString("Text.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how text filters are applied to display rows with cell values that either match to the specified text or regular expression value in the column on which the filter is applied..
        /// </summary>
        internal static string TextFilter_Descrip {
            get {
                return ResourceManager.GetString("TextFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply text filter.
        /// </summary>
        internal static string TextFilter_Name {
            get {
                return ResourceManager.GetString("TextFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Text Filter
        ///The example in this folder demonstrates how to use the AutoFilter method to create a text filter. For example, you can filter by rows that contain the letter &quot;e&quot;..
        /// </summary>
        internal static string TextFiltering_Descrip {
            get {
                return ResourceManager.GetString("TextFiltering.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text Filter.
        /// </summary>
        internal static string TextFiltering_Name {
            get {
                return ResourceManager.GetString("TextFiltering.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can set the reading order of text in a cell..
        /// </summary>
        internal static string TextOrientation_Descrip {
            get {
                return ResourceManager.GetString("TextOrientation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set text reading order.
        /// </summary>
        internal static string TextOrientation_Name {
            get {
                return ResourceManager.GetString("TextOrientation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcExcel can export various kind of font effect to PDF, such as text underline, strikethrough, bold, etc..
        /// </summary>
        internal static string TextStyle_Descrip {
            get {
                return ResourceManager.GetString("TextStyle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export font effects.
        /// </summary>
        internal static string TextStyle_Name {
            get {
                return ResourceManager.GetString("TextStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Theme
        ///GrapeCity Documents for Excel provides you with a set of built-in themes so you can quickly change the overall appearance of a workbook. It also lets you create custom themes and apply them to workbooks.
        ///
        ///- Use the **Theme** property of a workbook instance to change the workbook&apos;s theme. 
        ///- Use the **Add** method of a themes class instance to add a custom theme. 
        ///- Use the built-in properties of the **Themes** class to get a built-in theme instance.
        ///- Use the **Themes** indexer to get a custo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Theme_Descrip {
            get {
                return ResourceManager.GetString("Theme.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme.
        /// </summary>
        internal static string Theme_Name {
            get {
                return ResourceManager.GetString("Theme.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To do list with progress tracker.
        /// </summary>
        internal static string ToDoListWithProgressTracker_Name {
            get {
                return ResourceManager.GetString("ToDoListWithProgressTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to load from json and save to json file. .
        /// </summary>
        internal static string ToJsonFromJson_Descrip {
            get {
                return ResourceManager.GetString("ToJsonFromJson.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ToJson and FromJson.
        /// </summary>
        internal static string ToJsonFromJson_Name {
            get {
                return ResourceManager.GetString("ToJsonFromJson.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to import and export json for a single worksheet..
        /// </summary>
        internal static string ToJsonFromJsonForWorksheet_Descrip {
            get {
                return ResourceManager.GetString("ToJsonFromJsonForWorksheet.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ToJson and FromJson.
        /// </summary>
        internal static string ToJsonFromJsonForWorksheet_Name {
            get {
                return ResourceManager.GetString("ToJsonFromJsonForWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample is to show multiple template tables in one sheet..
        /// </summary>
        internal static string Travel_Descrip {
            get {
                return ResourceManager.GetString("Travel.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Travel.
        /// </summary>
        internal static string Travel_Name {
            get {
                return ResourceManager.GetString("Travel.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Travel expense report.
        /// </summary>
        internal static string TravelExpenseReport_Name {
            get {
                return ResourceManager.GetString("TravelExpenseReport.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export treemap chart to PDF file.
        /// </summary>
        internal static string TreemapChartPdf_Descrip {
            get {
                return ResourceManager.GetString("TreemapChartPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Treemap chart.
        /// </summary>
        internal static string TreemapChartPdf_Name {
            get {
                return ResourceManager.GetString("TreemapChartPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export trendline to PDF file.
        /// </summary>
        internal static string TrendlinePdf_Descrip {
            get {
                return ResourceManager.GetString("TrendlinePdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trendline.
        /// </summary>
        internal static string TrendlinePdf_Name {
            get {
                return ResourceManager.GetString("TrendlinePdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tutorial.
        /// </summary>
        internal static string Tutorial_Name {
            get {
                return ResourceManager.GetString("Tutorial.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to ungroup row and column in a worksheet..
        /// </summary>
        internal static string UngroupRange_Descrip {
            get {
                return ResourceManager.GetString("UngroupRange.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ungroup range.
        /// </summary>
        internal static string UngroupRange_Name {
            get {
                return ResourceManager.GetString("UngroupRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using IWorkbook.Unprotect method to unprotect a workbook..
        /// </summary>
        internal static string UnprotectWorkbook_Descrip {
            get {
                return ResourceManager.GetString("UnprotectWorkbook.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unprotect workbook.
        /// </summary>
        internal static string UnprotectWorkbook_Name {
            get {
                return ResourceManager.GetString("UnprotectWorkbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to unprotect a worksheet..
        /// </summary>
        internal static string UnprotectWorksheet_Descrip {
            get {
                return ResourceManager.GetString("UnprotectWorksheet.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unprotect worksheet.
        /// </summary>
        internal static string UnprotectWorksheet_Name {
            get {
                return ResourceManager.GetString("UnprotectWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to unprotect the worksheet with a password..
        /// </summary>
        internal static string UnprotectWorksheetWithPassword_Descrip {
            get {
                return ResourceManager.GetString("UnprotectWorksheetWithPassword.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unprotect worksheet with password.
        /// </summary>
        internal static string UnprotectWorksheetWithPassword_Name {
            get {
                return ResourceManager.GetString("UnprotectWorksheetWithPassword.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array formula is a formula that can execute multiple calculations on individual cells or a range of cells to display a column or a row of subtotals. Refer to the following example code to set array formula and get entire array..
        /// </summary>
        internal static string UseArrayFormula_Descrip {
            get {
                return ResourceManager.GetString("UseArrayFormula.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use array formulas.
        /// </summary>
        internal static string UseArrayFormula_Name {
            get {
                return ResourceManager.GetString("UseArrayFormula.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two more GrapeCity Documents for Excel usage scenarios are as follows:
        ///- **Code** Use GrapeCity Documents for Excel API code, then export to an Excel file.
        ///- **Templates** Import an Excel template to the GrapeCity Documents for Excel data model, then use GrapeCity Documents for Excel API code to add content, then export it to an Excel file..
        /// </summary>
        internal static string UseCases_Descrip {
            get {
                return ResourceManager.GetString("UseCases.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Cases.
        /// </summary>
        internal static string UseCases_Name {
            get {
                return ResourceManager.GetString("UseCases.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to configure date axis of sparkline..
        /// </summary>
        internal static string UseDateAxis_Descrip {
            get {
                return ResourceManager.GetString("UseDateAxis.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use date axis.
        /// </summary>
        internal static string UseDateAxis_Name {
            get {
                return ResourceManager.GetString("UseDateAxis.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to use slicer to do filtering..
        /// </summary>
        internal static string UseSlicerDoFilter_Descrip {
            get {
                return ResourceManager.GetString("UseSlicerDoFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use slicer to filter table.
        /// </summary>
        internal static string UseSlicerDoFilter_Name {
            get {
                return ResourceManager.GetString("UseSlicerDoFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to clear all filters on data with slicer..
        /// </summary>
        internal static string UseSlicerToClearFilter_Descrip {
            get {
                return ResourceManager.GetString("UseSlicerToClearFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use a slicer to clear a filter.
        /// </summary>
        internal static string UseSlicerToClearFilter_Name {
            get {
                return ResourceManager.GetString("UseSlicerToClearFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Table formula refers to a formula that is used as a structured reference in the worksheet instead of using it as an explicit cell reference. Refer to the following example code to set table formula in your spreadsheets..
        /// </summary>
        internal static string UseTableFormula_Descrip {
            get {
                return ResourceManager.GetString("UseTableFormula.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use table formulas.
        /// </summary>
        internal static string UseTableFormula_Name {
            get {
                return ResourceManager.GetString("UseTableFormula.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create value filter.
        /// </summary>
        internal static string ValueFilter_Descrip {
            get {
                return ResourceManager.GetString("ValueFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value Filter.
        /// </summary>
        internal static string ValueFilter_Name {
            get {
                return ResourceManager.GetString("ValueFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User can use **variable** defined in code as the data source of GcExcel Template..
        /// </summary>
        internal static string Variable_Descrip {
            get {
                return ResourceManager.GetString("Variable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable.
        /// </summary>
        internal static string Variable_Name {
            get {
                return ResourceManager.GetString("Variable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to set japanese vertical text and export it to a PDF document to see effect..
        /// </summary>
        internal static string VerticalText_Descrip {
            get {
                return ResourceManager.GetString("VerticalText.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export vertical text.
        /// </summary>
        internal static string VerticalText_Name {
            get {
                return ResourceManager.GetString("VerticalText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Website flow chart.
        /// </summary>
        internal static string WebsiteFlowChart_Name {
            get {
                return ResourceManager.GetString("WebsiteFlowChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Workbook
        ///A workbook is a spreadsheet document that contains one or more worksheets that are stored within the Worksheets collection.
        ///
        ///The examples in this folder demonstrate the following cases:
        ///- Create  a new workbook
        ///- Import an Excel file into a workbook
        ///- Import an Excel file with a password to a workbook
        ///- Export a workbook to an Excel file
        ///- Export a workbook to an Excel file with a password
        ///- Import or export a workbook using ToJson and FromJson
        ///- Protect a workbook
        ///- Unprotect a workb [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Workbook_Descrip {
            get {
                return ResourceManager.GetString("Workbook.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workbook.
        /// </summary>
        internal static string Workbook_Name {
            get {
                return ResourceManager.GetString("Workbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Worksheets
        ///The examples in this folder demonstrate the following cases:
        ///- Add a worksheet
        ///- Delete a worksheet
        ///- Protect a worksheet
        ///- Unprotect a worksheet
        ///- Activate a worksheet
        ///- Apply settings to a worksheet
        ///- Add a chart sheet.
        /// </summary>
        internal static string Worksheets_Descrip {
            get {
                return ResourceManager.GetString("Worksheets.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Worksheets.
        /// </summary>
        internal static string Worksheets_Name {
            get {
                return ResourceManager.GetString("Worksheets.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can wrap the text of cell by using IRange.WrapText property..
        /// </summary>
        internal static string WrapText_Descrip {
            get {
                return ResourceManager.GetString("WrapText.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrap text.
        /// </summary>
        internal static string WrapText_Name {
            get {
                return ResourceManager.GetString("WrapText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a scatter chart in GcExcel..
        /// </summary>
        internal static string XYScatterChart_Descrip {
            get {
                return ResourceManager.GetString("XYScatterChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scatter chart.
        /// </summary>
        internal static string XYScatterChart_Name {
            get {
                return ResourceManager.GetString("XYScatterChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export XYScatter chart to PDF file.
        /// </summary>
        internal static string XYScatterChartPdf_Descrip {
            get {
                return ResourceManager.GetString("XYScatterChartPdf.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to X Y(Scatter) chart.
        /// </summary>
        internal static string XYScatterChartPdf_Name {
            get {
                return ResourceManager.GetString("XYScatterChartPdf.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a scatter chart with straight lines in GcExcel..
        /// </summary>
        internal static string XYScatterLinesChart_Descrip {
            get {
                return ResourceManager.GetString("XYScatterLinesChart.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scatter with straight lines and markers.
        /// </summary>
        internal static string XYScatterLinesChart_Name {
            get {
                return ResourceManager.GetString("XYScatterLinesChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a scatter chart with smooth lines in GcExcel..
        /// </summary>
        internal static string XYScatterSmooth_Descrip {
            get {
                return ResourceManager.GetString("XYScatterSmooth.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scatter with smooth Lines.
        /// </summary>
        internal static string XYScatterSmooth_Name {
            get {
                return ResourceManager.GetString("XYScatterSmooth.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refer to the following example code to see how to add a scatter chart with smooth lines and markers in GcExcel..
        /// </summary>
        internal static string XYScatterSmoothWithMarkers_Descrip {
            get {
                return ResourceManager.GetString("XYScatterSmoothWithMarkers.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scatter with smooth lines and markers.
        /// </summary>
        internal static string XYScatterSmoothWithMarkers_Name {
            get {
                return ResourceManager.GetString("XYScatterSmoothWithMarkers.Name", resourceCulture);
            }
        }
    }
}
