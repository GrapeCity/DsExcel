//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GrapeCity.Documents.Excel.Examples {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class StringResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StringResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GrapeCity.Documents.Excel.Examples.StringResource", typeof(StringResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access cells, rows and columns in a range.
        /// </summary>
        internal static string AccessCellsRowsColumns_Name {
            get {
                return ResourceManager.GetString("AccessCellsRowsColumns.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access areas in a range.
        /// </summary>
        internal static string AccessEachAreaOfRange_Name {
            get {
                return ResourceManager.GetString("AccessEachAreaOfRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access a range.
        /// </summary>
        internal static string AccessRange_Name {
            get {
                return ResourceManager.GetString("AccessRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access each table range.
        /// </summary>
        internal static string AccessTableRanges_Name {
            get {
                return ResourceManager.GetString("AccessTableRanges.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access a worksheet.
        /// </summary>
        internal static string AccessWorksheet_Name {
            get {
                return ResourceManager.GetString("AccessWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate a worksheet.
        /// </summary>
        internal static string ActivateWorksheet_Name {
            get {
                return ResourceManager.GetString("ActivateWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add borders to cell.
        /// </summary>
        internal static string AddBordersToCell_Name {
            get {
                return ResourceManager.GetString("AddBordersToCell.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add comment to cell.
        /// </summary>
        internal static string AddComment_Name {
            get {
                return ResourceManager.GetString("AddComment.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add custom names.
        /// </summary>
        internal static string AddCustomName_Name {
            get {
                return ResourceManager.GetString("AddCustomName.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a custom slicer style.
        /// </summary>
        internal static string AddCustomSlicerStyle_Name {
            get {
                return ResourceManager.GetString("AddCustomSlicerStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a custom table style.
        /// </summary>
        internal static string AddCustomTableStyle_Name {
            get {
                return ResourceManager.GetString("AddCustomTableStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add custom themes.
        /// </summary>
        internal static string AddCustomThemes_Name {
            get {
                return ResourceManager.GetString("AddCustomThemes.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add borders to range.
        /// </summary>
        internal static string AddingBordersToRange_Name {
            get {
                return ResourceManager.GetString("AddingBordersToRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add series for chart.
        /// </summary>
        internal static string AddSeries_Name {
            get {
                return ResourceManager.GetString("AddSeries.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add slicers to pivot tables.
        /// </summary>
        internal static string AddSlicersForPivotTable_Name {
            get {
                return ResourceManager.GetString("AddSlicersForPivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add slicers to tables.
        /// </summary>
        internal static string AddSlicersForTable_Name {
            get {
                return ResourceManager.GetString("AddSlicersForTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use IRichText interface.
        /// </summary>
        internal static string AddTextRun_Name {
            get {
                return ResourceManager.GetString("AddTextRun.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a worksheet.
        /// </summary>
        internal static string AddWorksheet_Name {
            get {
                return ResourceManager.GetString("AddWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aging Report.
        /// </summary>
        internal static string AgingReport_Name {
            get {
                return ResourceManager.GetString("AgingReport.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Alignment
        ///The examples in this folder demonstrate how to use these alignment settings:
        ///- HorizontalAlignment (Left, Center, or Right)
        ///- VerticalAlignment (Top, Center, or Bottom)
        ///- ReadingOrder (sets text direction to RightToLeft or LeftToRight)
        ///- ShrinkToFit 
        ///- Orientation (sets the text rotation angle in degrees)
        ///- Wrap Text .
        /// </summary>
        internal static string Alignment_Descrip {
            get {
                return ResourceManager.GetString("Alignment.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alignment.
        /// </summary>
        internal static string Alignment_Name {
            get {
                return ResourceManager.GetString("Alignment.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annual financial report.
        /// </summary>
        internal static string AnnualFinancialReport_Name {
            get {
                return ResourceManager.GetString("AnnualFinancialReport.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply built-in style to slicer.
        /// </summary>
        internal static string ApplySlicerStyle_Name {
            get {
                return ResourceManager.GetString("ApplySlicerStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply style to range.
        /// </summary>
        internal static string ApplyStyle_Name {
            get {
                return ResourceManager.GetString("ApplyStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply built-in styles to tables.
        /// </summary>
        internal static string ApplyTableStyle_Name {
            get {
                return ResourceManager.GetString("ApplyTableStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Area chart.
        /// </summary>
        internal static string AreaChart_Name {
            get {
                return ResourceManager.GetString("AreaChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100% Stacked chart.
        /// </summary>
        internal static string AreaStacked100_Name {
            get {
                return ResourceManager.GetString("AreaStacked100.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stacked Area chart.
        /// </summary>
        internal static string AreaStackedChart_Name {
            get {
                return ResourceManager.GetString("AreaStackedChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Axis
        ///Charts contain three axis types: 
        ///- category axis
        ///- value axis
        ///- series axis
        ///
        ///They are all generated automatically, and you **can not add or delete them in code**.
        ///
        ///Examples in the Axis folder demonstrate how to specify axis-related settings such as:
        ///- axis titles
        ///- axis units
        ///- display unit labels
        ///- gridlines
        ///- tick marks
        ///- tick mark labels.
        /// </summary>
        internal static string Axes_Descrip {
            get {
                return ResourceManager.GetString("Axes.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Axis.
        /// </summary>
        internal static string Axes_Name {
            get {
                return ResourceManager.GetString("Axes.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clustered Bar chart.
        /// </summary>
        internal static string BarClusteredChart_Name {
            get {
                return ResourceManager.GetString("BarClusteredChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100% Stacked Bar chart.
        /// </summary>
        internal static string BarStacked100Chart_Name {
            get {
                return ResourceManager.GetString("BarStacked100Chart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stacked Bar chart.
        /// </summary>
        internal static string BarStackedChart_Name {
            get {
                return ResourceManager.GetString("BarStackedChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic sales report.
        /// </summary>
        internal static string BasicSalesReport_Name {
            get {
                return ResourceManager.GetString("BasicSalesReport.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bid tracker.
        /// </summary>
        internal static string BidTracker_Name {
            get {
                return ResourceManager.GetString("BidTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blood pressure tracker.
        /// </summary>
        internal static string BloodPressureTracker_Name {
            get {
                return ResourceManager.GetString("BloodPressureTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blood sugar tracker.
        /// </summary>
        internal static string BloodSugarTracker_Name {
            get {
                return ResourceManager.GetString("BloodSugarTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Borders
        ///The examples in this folder demonstrate how to specify border settings for a range. You can set these border options:
        ///- BorderLineStyle (Dashed, DashDot, Dotted, Double, Medium, Hair, etc.)
        ///- Color (Green, Red, Blue, Tomato, LimeGreen, etc.).
        /// </summary>
        internal static string Borders_Descrip {
            get {
                return ResourceManager.GetString("Borders.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Borders.
        /// </summary>
        internal static string Borders_Name {
            get {
                return ResourceManager.GetString("Borders.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bubble chart.
        /// </summary>
        internal static string BubbleChart_Name {
            get {
                return ResourceManager.GetString("BubbleChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use CellInfo helper class.
        /// </summary>
        internal static string CellInfo_Name {
            get {
                return ResourceManager.GetString("CellInfo.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Cell Rich Text
        ///GcExcel provides support for applying rich text formatting in the cells of the worksheet. 
        ///Examples in this folder demonstrate how to:
        ///- Use IRange.IRichText interface to add and format text runs in a cell.
        ///- Use IRange.Characters() method to format a range of characters in a cell.
        ///- Configure font for each text run of rich text cell..
        /// </summary>
        internal static string CellRichText_Descrip {
            get {
                return ResourceManager.GetString("CellRichText.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cell Rich Text.
        /// </summary>
        internal static string CellRichText_Name {
            get {
                return ResourceManager.GetString("CellRichText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set field&apos;s summarize function.
        /// </summary>
        internal static string ChangeDataFieldSummarizeFunction_Name {
            get {
                return ResourceManager.GetString("ChangeDataFieldSummarizeFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change series type.
        /// </summary>
        internal static string ChangeSeriesType_Name {
            get {
                return ResourceManager.GetString("ChangeSeriesType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change workbook themes.
        /// </summary>
        internal static string ChangeWorkbookTheme_Name {
            get {
                return ResourceManager.GetString("ChangeWorkbookTheme.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change worksheet filter range.
        /// </summary>
        internal static string ChangeWorksheetFilterRange_Name {
            get {
                return ResourceManager.GetString("ChangeWorksheetFilterRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Character method.
        /// </summary>
        internal static string CharacterCellText_Name {
            get {
                return ResourceManager.GetString("CharacterCellText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Chart 3D format
        ///These examples in this folder demonstrate how to set charts 3D format.
        /// </summary>
        internal static string Chart3DFormat_Descrip {
            get {
                return ResourceManager.GetString("Chart3DFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart 3D format.
        /// </summary>
        internal static string Chart3DFormat_Name {
            get {
                return ResourceManager.GetString("Chart3DFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Chart area
        ///Chart area is the complete chart area, include plot area, chart title and legend.
        ///
        ///These examples demonstrate how to configure chart area style and whole chart area font style..
        /// </summary>
        internal static string ChartArea_Descrip {
            get {
                return ResourceManager.GetString("ChartArea.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart area.
        /// </summary>
        internal static string ChartArea_Name {
            get {
                return ResourceManager.GetString("ChartArea.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy chart.
        /// </summary>
        internal static string ChartCopy_Name {
            get {
                return ResourceManager.GetString("ChartCopy.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut chart.
        /// </summary>
        internal static string ChartCut_Name {
            get {
                return ResourceManager.GetString("ChartCut.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate chart.
        /// </summary>
        internal static string ChartDuplicate_Name {
            get {
                return ResourceManager.GetString("ChartDuplicate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Chart gallery
        ///This chart gallery includes all of the **chart types** available and demonstrates how to configure each chart..
        /// </summary>
        internal static string ChartGallery_Descrip {
            get {
                return ResourceManager.GetString("ChartGallery.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart gallery.
        /// </summary>
        internal static string ChartGallery_Name {
            get {
                return ResourceManager.GetString("ChartGallery.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plot only visible cells.
        /// </summary>
        internal static string ChartJustPlotVisibleCell_Name {
            get {
                return ResourceManager.GetString("ChartJustPlotVisibleCell.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Chart lines
        ///Chart lines include: **Trendline**, **Dropline** , **High-Low Line** and **Series Line**.
        ///
        ///- **Trendline** is for specific series.
        ///- **Dropline** set for line chart or area chart.
        ///- **High-Low line** set for line chart.
        ///- **Series line** set for stacked column or bar charts. Pie-of-pie charts and bar-of-pie charts also have connector lines between their sections
        ///
        ///These examples demonstrate how to add these lines and how to configure lines style..
        /// </summary>
        internal static string ChartLines_Descrip {
            get {
                return ResourceManager.GetString("ChartLines.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart lines.
        /// </summary>
        internal static string ChartLines_Name {
            get {
                return ResourceManager.GetString("ChartLines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Charts
        ///**GrapeCity Documents for Excel** provides a comprehensive charting API:
        ///
        ///- Add charts to a worksheet using the **IWorksheet.AddChart** method
        ///-- Returns an instance of **IShape** 
        ///-- Use the **Chart** property to access the newly added chart
        ///- Add data series with the **IChart.SeriesCollection.Add** method
        ///- Cutomize chart titles with the **IChart.ChartTitle** property
        ///- Cutomize chart legends with the **IChart.Legend** property
        ///- Access and customize each data series through the **ISeri [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Charts_Descrip {
            get {
                return ResourceManager.GetString("Charts.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Charts.
        /// </summary>
        internal static string Charts_Name {
            get {
                return ResourceManager.GetString("Charts.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Chart title
        ///**Chart title** is the name of the chart.
        ///
        ///These examples demonstrate how to display chart name  and how to specify settings for chart title..
        /// </summary>
        internal static string ChartTitle_Descrip {
            get {
                return ResourceManager.GetString("ChartTitle.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart title.
        /// </summary>
        internal static string ChartTitle_Name {
            get {
                return ResourceManager.GetString("ChartTitle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Chart walls** include **back wall** and **side wall**.
        ///
        ///These examaple demonstrete how to specity settings for chart walls, include:
        ///- Configure walls style together
        ///- Configure back wall and side wall separately.
        /// </summary>
        internal static string ChartWalls_Descrip {
            get {
                return ResourceManager.GetString("ChartWalls.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart walls.
        /// </summary>
        internal static string ChartWalls_Name {
            get {
                return ResourceManager.GetString("ChartWalls.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear comments.
        /// </summary>
        internal static string ClearComment_Name {
            get {
                return ResourceManager.GetString("ClearComment.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear worksheet filter.
        /// </summary>
        internal static string ClearFilter_Name {
            get {
                return ResourceManager.GetString("ClearFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear outline.
        /// </summary>
        internal static string ClearOutline_Name {
            get {
                return ResourceManager.GetString("ClearOutline.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear the sparkline group.
        /// </summary>
        internal static string ClearSparklineGroup_Name {
            get {
                return ResourceManager.GetString("ClearSparklineGroup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear sparklines.
        /// </summary>
        internal static string ClearSparklines_Name {
            get {
                return ResourceManager.GetString("ClearSparklines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collapse group.
        /// </summary>
        internal static string CollapseGroup_Name {
            get {
                return ResourceManager.GetString("CollapseGroup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clustered Column chart.
        /// </summary>
        internal static string ColumnClusteredChart_Name {
            get {
                return ResourceManager.GetString("ColumnClusteredChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100% Stacked Column chart.
        /// </summary>
        internal static string ColumnStacked100Chart_Name {
            get {
                return ResourceManager.GetString("ColumnStacked100Chart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stacked Column chart.
        /// </summary>
        internal static string ColumnStackedChart_Name {
            get {
                return ResourceManager.GetString("ColumnStackedChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Combination chart.
        /// </summary>
        internal static string CombinationChart1_Name {
            get {
                return ResourceManager.GetString("CombinationChart1.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Combination chart.
        /// </summary>
        internal static string CombinationChart2_Name {
            get {
                return ResourceManager.GetString("CombinationChart2.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Comments
        ///GrapeCity Documents for Excel enables users to annotate worksheets. They can write comments for cells to add information about the data it contains.
        ///
        ///Add comments for a range using the **AddComment** method. It returns an instance of the **IComment** interface. 
        ///
        ///Always show comments with the **Visible** property. 
        ///
        ///Modify comment layouts with the **Shape** property.
        ///
        ///Create rich text using the **TextFrame** property of the **IShape** interface. You can use different font styles for eac [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Comments_Descrip {
            get {
                return ResourceManager.GetString("Comments.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comments.
        /// </summary>
        internal static string Comments_Name {
            get {
                return ResourceManager.GetString("Comments.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Conditional Formatting
        ///In order to enable you to highlight important information in rows or columns of a worksheet, GrapeCity Documents for Excel allows users to create conditional formatting rules for individual cells or a range of cells based on cell values. If the format condition matches with the cell value, it is assumed as true and the cell is formatted as per the specified rule..
        ///
        ///GrapeCity Documents for Excel supports all types of conditional formatting rules:
        ///
        ///- Cell Value
        ///- Average
        ///- Col [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConditionalFormatting_Descrip {
            get {
                return ResourceManager.GetString("ConditionalFormatting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditional Formatting.
        /// </summary>
        internal static string ConditionalFormatting_Name {
            get {
                return ResourceManager.GetString("ConditionalFormatting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure axis title style.
        /// </summary>
        internal static string ConfigAxisTitle_Name {
            get {
                return ResourceManager.GetString("ConfigAxisTitle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure bubble chart&apos;s layout.
        /// </summary>
        internal static string ConfigBubbleChartLayout_Name {
            get {
                return ResourceManager.GetString("ConfigBubbleChartLayout.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure category axis style.
        /// </summary>
        internal static string ConfigCategoryAxesFormat_Name {
            get {
                return ResourceManager.GetString("ConfigCategoryAxesFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set data axis units.
        /// </summary>
        internal static string ConfigCategoryAxisUnits_Name {
            get {
                return ResourceManager.GetString("ConfigCategoryAxisUnits.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart 3D format.
        /// </summary>
        internal static string ConfigChart3DFormat_Name {
            get {
                return ResourceManager.GetString("ConfigChart3DFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart area&apos;s font.
        /// </summary>
        internal static string ConfigChartAreaFont_Name {
            get {
                return ResourceManager.GetString("ConfigChartAreaFont.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart area format.
        /// </summary>
        internal static string ConfigChartAreaFormat_Name {
            get {
                return ResourceManager.GetString("ConfigChartAreaFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart back wall.
        /// </summary>
        internal static string ConfigChartBackWall_Name {
            get {
                return ResourceManager.GetString("ConfigChartBackWall.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart floor style.
        /// </summary>
        internal static string ConfigChartFloorStyle_Name {
            get {
                return ResourceManager.GetString("ConfigChartFloorStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart side wall.
        /// </summary>
        internal static string ConfigChartSideWall_Name {
            get {
                return ResourceManager.GetString("ConfigChartSideWall.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart title with rich text.
        /// </summary>
        internal static string ConfigChartTitleRichText_Name {
            get {
                return ResourceManager.GetString("ConfigChartTitleRichText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart title style.
        /// </summary>
        internal static string ConfigChartTitleStyle_Name {
            get {
                return ResourceManager.GetString("ConfigChartTitleStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure chart walls style.
        /// </summary>
        internal static string ConfigChartWallStyle_Name {
            get {
                return ResourceManager.GetString("ConfigChartWallStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure comment&apos;s layout.
        /// </summary>
        internal static string ConfigCommentLayout_Name {
            get {
                return ResourceManager.GetString("ConfigCommentLayout.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure data label&apos;s format.
        /// </summary>
        internal static string ConfigDataLabelFormat_Name {
            get {
                return ResourceManager.GetString("ConfigDataLabelFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure data label&apos;s text.
        /// </summary>
        internal static string ConfigDataLabelText_Name {
            get {
                return ResourceManager.GetString("ConfigDataLabelText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure data point&apos;s format.
        /// </summary>
        internal static string ConfigDataPointFormat_Name {
            get {
                return ResourceManager.GetString("ConfigDataPointFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure display unit label style.
        /// </summary>
        internal static string ConfigDisplayUnitLabel_Name {
            get {
                return ResourceManager.GetString("ConfigDisplayUnitLabel.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure even page header footer.
        /// </summary>
        internal static string ConfigEvenPageHeaderFooter_Name {
            get {
                return ResourceManager.GetString("ConfigEvenPageHeaderFooter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure first page header footer.
        /// </summary>
        internal static string ConfigFirstPageHeaderFooter_Name {
            get {
                return ResourceManager.GetString("ConfigFirstPageHeaderFooter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure first page number.
        /// </summary>
        internal static string ConfigFirstPageNumber_Name {
            get {
                return ResourceManager.GetString("ConfigFirstPageNumber.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure gridline style.
        /// </summary>
        internal static string ConfigGridlines_Name {
            get {
                return ResourceManager.GetString("ConfigGridlines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure page header footer.
        /// </summary>
        internal static string ConfigHeaderFooter_Name {
            get {
                return ResourceManager.GetString("ConfigHeaderFooter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure legend entry font style.
        /// </summary>
        internal static string ConfigLegendEntryFontStyle_Name {
            get {
                return ResourceManager.GetString("ConfigLegendEntryFontStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure legend format.
        /// </summary>
        internal static string ConfigLegendFormat_Name {
            get {
                return ResourceManager.GetString("ConfigLegendFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure legend position and layout.
        /// </summary>
        internal static string ConfigLegendPositionAndLayout_Name {
            get {
                return ResourceManager.GetString("ConfigLegendPositionAndLayout.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure markers format.
        /// </summary>
        internal static string ConfigMarkersFormat_Name {
            get {
                return ResourceManager.GetString("ConfigMarkersFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure markers style.
        /// </summary>
        internal static string ConfigMarkerStyle_Name {
            get {
                return ResourceManager.GetString("ConfigMarkerStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure negative point style.
        /// </summary>
        internal static string ConfigNegativePoint_Name {
            get {
                return ResourceManager.GetString("ConfigNegativePoint.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure page center.
        /// </summary>
        internal static string ConfigPageCenter_Name {
            get {
                return ResourceManager.GetString("ConfigPageCenter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure page margins.
        /// </summary>
        internal static string ConfigPageMargins_Name {
            get {
                return ResourceManager.GetString("ConfigPageMargins.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure page order.
        /// </summary>
        internal static string ConfigPageOrder_Name {
            get {
                return ResourceManager.GetString("ConfigPageOrder.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure page orientation.
        /// </summary>
        internal static string ConfigPageOrientation_Name {
            get {
                return ResourceManager.GetString("ConfigPageOrientation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure paper scaling.
        /// </summary>
        internal static string ConfigPaperScaling_Name {
            get {
                return ResourceManager.GetString("ConfigPaperScaling.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure paper size.
        /// </summary>
        internal static string ConfigPaperSize_Name {
            get {
                return ResourceManager.GetString("ConfigPaperSize.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure plot area format.
        /// </summary>
        internal static string ConfigPlotAreaFormat_Name {
            get {
                return ResourceManager.GetString("ConfigPlotAreaFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure print area.
        /// </summary>
        internal static string ConfigPrintArea_Name {
            get {
                return ResourceManager.GetString("ConfigPrintArea.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure columns to repeat at left.
        /// </summary>
        internal static string ConfigPrintTitleColumns_Name {
            get {
                return ResourceManager.GetString("ConfigPrintTitleColumns.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure rows to repeat at top.
        /// </summary>
        internal static string ConfigPrintTitleRows_Name {
            get {
                return ResourceManager.GetString("ConfigPrintTitleRows.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure text run&apos;s font.
        /// </summary>
        internal static string ConfigRunFont_Name {
            get {
                return ResourceManager.GetString("ConfigRunFont.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure secondary section for pie of pie chart.
        /// </summary>
        internal static string ConfigSecondarySection_Name {
            get {
                return ResourceManager.GetString("ConfigSecondarySection.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure series format.
        /// </summary>
        internal static string ConfigSeriesFormat_Name {
            get {
                return ResourceManager.GetString("ConfigSeriesFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s 3D format.
        /// </summary>
        internal static string ConfigShape3DFormat_Name {
            get {
                return ResourceManager.GetString("ConfigShape3DFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s line format.
        /// </summary>
        internal static string ConfigShapeLine_Name {
            get {
                return ResourceManager.GetString("ConfigShapeLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s gradient fill.
        /// </summary>
        internal static string ConfigShapeWithGradientFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithGradientFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s pattern fill.
        /// </summary>
        internal static string ConfigShapeWithPatternFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithPatternFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s picture fill.
        /// </summary>
        internal static string ConfigShapeWithPictureFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithPictureFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s solid fill.
        /// </summary>
        internal static string ConfigShapeWithSolidFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithSolidFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s texture fill.
        /// </summary>
        internal static string ConfigShapeWithTextureFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithTextureFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure sheet print settings.
        /// </summary>
        internal static string ConfigSheetPrintSettings_Name {
            get {
                return ResourceManager.GetString("ConfigSheetPrintSettings.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure slicer layout.
        /// </summary>
        internal static string ConfigSlicerLayout_Name {
            get {
                return ResourceManager.GetString("ConfigSlicerLayout.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure sparkline settings.
        /// </summary>
        internal static string ConfigSparklineSettings_Name {
            get {
                return ResourceManager.GetString("ConfigSparklineSettings.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set tick mark label style.
        /// </summary>
        internal static string ConfigTickMarkLabel_Name {
            get {
                return ResourceManager.GetString("ConfigTickMarkLabel.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Black &amp; white.
        /// </summary>
        internal static string ConfigureBlackAndWhite_Name {
            get {
                return ResourceManager.GetString("ConfigureBlackAndWhite.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draft.
        /// </summary>
        internal static string ConfigureDraft_Name {
            get {
                return ResourceManager.GetString("ConfigureDraft.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Header footer.
        /// </summary>
        internal static string ConfigureHeaderFooter_Name {
            get {
                return ResourceManager.GetString("ConfigureHeaderFooter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Orientation.
        /// </summary>
        internal static string ConfigureOritation_Name {
            get {
                return ResourceManager.GetString("ConfigureOritation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page breaks.
        /// </summary>
        internal static string ConfigurePageBreaks_Name {
            get {
                return ResourceManager.GetString("ConfigurePageBreaks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page order.
        /// </summary>
        internal static string ConfigurePageOrder_Name {
            get {
                return ResourceManager.GetString("ConfigurePageOrder.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page settings.
        /// </summary>
        internal static string ConfigurePageSetup_Name {
            get {
                return ResourceManager.GetString("ConfigurePageSetup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pagination.
        /// </summary>
        internal static string ConfigurePagination_Name {
            get {
                return ResourceManager.GetString("ConfigurePagination.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print area.
        /// </summary>
        internal static string ConfigurePrintArea_Name {
            get {
                return ResourceManager.GetString("ConfigurePrintArea.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print page range.
        /// </summary>
        internal static string ConfigurePrintPageRange_Name {
            get {
                return ResourceManager.GetString("ConfigurePrintPageRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print titles.
        /// </summary>
        internal static string ConfigurePrintTitles_Name {
            get {
                return ResourceManager.GetString("ConfigurePrintTitles.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scaling.
        /// </summary>
        internal static string ConfigureScaling_Name {
            get {
                return ResourceManager.GetString("ConfigureScaling.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure workbook view.
        /// </summary>
        internal static string ConfigureWorkbookView_Name {
            get {
                return ResourceManager.GetString("ConfigureWorkbookView.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure worksheet view.
        /// </summary>
        internal static string ConfigureWorksheetView_Name {
            get {
                return ResourceManager.GetString("ConfigureWorksheetView.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure value axis style.
        /// </summary>
        internal static string ConfigValueAxesFormat_Name {
            get {
                return ResourceManager.GetString("ConfigValueAxesFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set value axis units.
        /// </summary>
        internal static string ConfigValueAxisUnits_Name {
            get {
                return ResourceManager.GetString("ConfigValueAxisUnits.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set workbook&apos;s reference style.
        /// </summary>
        internal static string ConfigWorkbookReferenceStyle_Name {
            get {
                return ResourceManager.GetString("ConfigWorkbookReferenceStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure worksheet properties.
        /// </summary>
        internal static string ConfigWorksheet_Name {
            get {
                return ResourceManager.GetString("ConfigWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect shapes with connector shape.
        /// </summary>
        internal static string ConnectShapesByConnector_Name {
            get {
                return ResourceManager.GetString("ConnectShapesByConnector.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert Excel file to PDF.
        /// </summary>
        internal static string ConvertExcelToPDF_Name {
            get {
                return ResourceManager.GetString("ConvertExcelToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cost analysis with Pareto chart.
        /// </summary>
        internal static string CostAnalysisWithParetoChart_Name {
            get {
                return ResourceManager.GetString("CostAnalysisWithParetoChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create average rule.
        /// </summary>
        internal static string CreateAverageRule_Name {
            get {
                return ResourceManager.GetString("CreateAverageRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create cell value rule.
        /// </summary>
        internal static string CreateCellValueRule_Name {
            get {
                return ResourceManager.GetString("CreateCellValueRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create chart.
        /// </summary>
        internal static string CreateChart_Name {
            get {
                return ResourceManager.GetString("CreateChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create connector line for pie of pie chart.
        /// </summary>
        internal static string CreateConnectorLine_Name {
            get {
                return ResourceManager.GetString("CreateConnectorLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create connector shape.
        /// </summary>
        internal static string CreateConnectorShape_Name {
            get {
                return ResourceManager.GetString("CreateConnectorShape.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create custom style.
        /// </summary>
        internal static string CreateCustomStyle_Name {
            get {
                return ResourceManager.GetString("CreateCustomStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create custom validation.
        /// </summary>
        internal static string CreateCustomValidation_Name {
            get {
                return ResourceManager.GetString("CreateCustomValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create data bar rule.
        /// </summary>
        internal static string CreateDatabBarRule_Name {
            get {
                return ResourceManager.GetString("CreateDatabBarRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create date validation.
        /// </summary>
        internal static string CreateDateValidation_Name {
            get {
                return ResourceManager.GetString("CreateDateValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create decimal validation.
        /// </summary>
        internal static string CreateDecimalValidation_Name {
            get {
                return ResourceManager.GetString("CreateDecimalValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create drop line.
        /// </summary>
        internal static string CreateDropLine_Name {
            get {
                return ResourceManager.GetString("CreateDropLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create expression rule.
        /// </summary>
        internal static string CreateExpressionRule_Name {
            get {
                return ResourceManager.GetString("CreateExpressionRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create high-low line.
        /// </summary>
        internal static string CreateHiLoLine_Name {
            get {
                return ResourceManager.GetString("CreateHiLoLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create hyperlinks.
        /// </summary>
        internal static string CreateHyperlinks_Name {
            get {
                return ResourceManager.GetString("CreateHyperlinks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create icon set rule.
        /// </summary>
        internal static string CreateIconSetRule_Name {
            get {
                return ResourceManager.GetString("CreateIconSetRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create list validation.
        /// </summary>
        internal static string CreateListValidation_Name {
            get {
                return ResourceManager.GetString("CreateListValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create multiple rules for a range.
        /// </summary>
        internal static string CreateMultiRuleForRange_Name {
            get {
                return ResourceManager.GetString("CreateMultiRuleForRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create new workbook.
        /// </summary>
        internal static string CreateNewWorkbook_Name {
            get {
                return ResourceManager.GetString("CreateNewWorkbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create picture.
        /// </summary>
        internal static string CreatePicture_Name {
            get {
                return ResourceManager.GetString("CreatePicture.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create pivot tables.
        /// </summary>
        internal static string CreatePivotTable_Name {
            get {
                return ResourceManager.GetString("CreatePivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create range group.
        /// </summary>
        internal static string CreateRangeGroup_Name {
            get {
                return ResourceManager.GetString("CreateRangeGroup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create secondary axis.
        /// </summary>
        internal static string CreateSecondaryAxis_Name {
            get {
                return ResourceManager.GetString("CreateSecondaryAxis.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create series line for column chart.
        /// </summary>
        internal static string CreateSeriesLine_Name {
            get {
                return ResourceManager.GetString("CreateSeriesLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create sparklines.
        /// </summary>
        internal static string CreateSparklines_Name {
            get {
                return ResourceManager.GetString("CreateSparklines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create and modify style based on a style.
        /// </summary>
        internal static string CreateStyleBasedOn_Name {
            get {
                return ResourceManager.GetString("CreateStyleBasedOn.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a table.
        /// </summary>
        internal static string CreateTable_Name {
            get {
                return ResourceManager.GetString("CreateTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create text length validation.
        /// </summary>
        internal static string CreateTextLength_Name {
            get {
                return ResourceManager.GetString("CreateTextLength.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create three color scale rule.
        /// </summary>
        internal static string CreateThreeColorScaleRule_Name {
            get {
                return ResourceManager.GetString("CreateThreeColorScaleRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create time validation.
        /// </summary>
        internal static string CreateTimeValidation_Name {
            get {
                return ResourceManager.GetString("CreateTimeValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create top bottom rule.
        /// </summary>
        internal static string CreateTopBottomRule_Name {
            get {
                return ResourceManager.GetString("CreateTopBottomRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create trend line.
        /// </summary>
        internal static string CreateTrendline_Name {
            get {
                return ResourceManager.GetString("CreateTrendline.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create two color scale rule.
        /// </summary>
        internal static string CreateTwoColorScaleRule_Name {
            get {
                return ResourceManager.GetString("CreateTwoColorScaleRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create unique rule.
        /// </summary>
        internal static string CreateUniqueRule_Name {
            get {
                return ResourceManager.GetString("CreateUniqueRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create up down bars for line chart.
        /// </summary>
        internal static string CreateUpDownBars_Name {
            get {
                return ResourceManager.GetString("CreateUpDownBars.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create whole number validation.
        /// </summary>
        internal static string CreateWholeNumberValidation_Name {
            get {
                return ResourceManager.GetString("CreateWholeNumberValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer profitability analysis.
        /// </summary>
        internal static string CustomerProfitabilityAnalysis_Name {
            get {
                return ResourceManager.GetString("CustomerProfitabilityAnalysis.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Custom Function
        ///GcExcel provides you with the ability to create your own custom functions, allowing you to easily create any custom arithmetic logic you may need..
        /// </summary>
        internal static string CustomFunctions_Descrip {
            get {
                return ResourceManager.GetString("CustomFunctions.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Function.
        /// </summary>
        internal static string CustomFunctions_Name {
            get {
                return ResourceManager.GetString("CustomFunctions.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set custom number format.
        /// </summary>
        internal static string CustomNumberFormat_Name {
            get {
                return ResourceManager.GetString("CustomNumberFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort list by custom parameter.
        /// </summary>
        internal static string CustomSort_Name {
            get {
                return ResourceManager.GetString("CustomSort.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut or copy ranges.
        /// </summary>
        internal static string CutCopyRange_Name {
            get {
                return ResourceManager.GetString("CutCopyRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Data label
        ///**Data labels** can display specified series information. Use ShowLegendKey, ShowPercentage, ShowValue, ShowSeriesName, .etc to configure data label layout. These examples demonstrate how to display data labels and specify settings for data labels..
        /// </summary>
        internal static string DataLabel_Descrip {
            get {
                return ResourceManager.GetString("DataLabel.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data label.
        /// </summary>
        internal static string DataLabel_Name {
            get {
                return ResourceManager.GetString("DataLabel.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Data point
        ///**Data points** are a collection of all points in a specific series. These examples demonstrate how to specify settings for data points..
        /// </summary>
        internal static string DataPoint_Descrip {
            get {
                return ResourceManager.GetString("DataPoint.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data point.
        /// </summary>
        internal static string DataPoint_Name {
            get {
                return ResourceManager.GetString("DataPoint.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Data Validation
        ///GrapeCity Documents for Excel lets you validate data by restricting the information format and the values that can be entered in cells of a worksheet. You can create distinct validation scenarios for individual cells or for a range of cells.
        ///
        ///GrapeCity Documents for Excel supports all types of validations, including:
        ///- Whole Number
        ///- Decimal
        ///- List
        ///- Date
        ///- Time
        ///- Text length
        ///- Custom
        ///
        ///Add validation for a range using the **Add** method of  **IRange.Validation** property. The  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DataValidation_Descrip {
            get {
                return ResourceManager.GetString("DataValidation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Validation.
        /// </summary>
        internal static string DataValidation_Name {
            get {
                return ResourceManager.GetString("DataValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set date and time format.
        /// </summary>
        internal static string DateAndTimeFormat_Name {
            get {
                return ResourceManager.GetString("DateAndTimeFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter date dynamically.
        /// </summary>
        internal static string DateDynamicFilter_Name {
            get {
                return ResourceManager.GetString("DateDynamicFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply date filter.
        /// </summary>
        internal static string DateFilter_Name {
            get {
                return ResourceManager.GetString("DateFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Date Filter
        ///The examples in this folder demonstrate how to use the AutoFilter method to filter by date. They show how you can filter:
        ///- between two dates
        ///- all dates in February.
        /// </summary>
        internal static string DateFiltering_Descrip {
            get {
                return ResourceManager.GetString("DateFiltering.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date Filter.
        /// </summary>
        internal static string DateFiltering_Name {
            get {
                return ResourceManager.GetString("DateFiltering.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete chart.
        /// </summary>
        internal static string DeleteChart_Name {
            get {
                return ResourceManager.GetString("DeleteChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete conditional format rules.
        /// </summary>
        internal static string DeleteConditionalFormatRules_Name {
            get {
                return ResourceManager.GetString("DeleteConditionalFormatRules.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete hyperlinks.
        /// </summary>
        internal static string DeleteHyperlinks_Name {
            get {
                return ResourceManager.GetString("DeleteHyperlinks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete picture.
        /// </summary>
        internal static string DeletePicture_Name {
            get {
                return ResourceManager.GetString("DeletePicture.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete series.
        /// </summary>
        internal static string DeleteSeries_Name {
            get {
                return ResourceManager.GetString("DeleteSeries.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete validation.
        /// </summary>
        internal static string DeleteValidation_Name {
            get {
                return ResourceManager.GetString("DeleteValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete a worksheet.
        /// </summary>
        internal static string DeleteWorksheet_Name {
            get {
                return ResourceManager.GetString("DeleteWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dirty and Calculate methods.
        /// </summary>
        internal static string DirtyAndCalculation_Name {
            get {
                return ResourceManager.GetString("DirtyAndCalculation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-filter table with slicer.
        /// </summary>
        internal static string DoTableFilter_Name {
            get {
                return ResourceManager.GetString("DoTableFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event budget.
        /// </summary>
        internal static string EventBudget_Name {
            get {
                return ResourceManager.GetString("EventBudget.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event planning tracker.
        /// </summary>
        internal static string EventPlanningTracker_Name {
            get {
                return ResourceManager.GetString("EventPlanningTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Excel Reporting
        ///In this folder, you can explore complete code demonstrating how to generate an Excel file or report at server side. 
        ///
        ///Click the **&quot;Run&quot;** button to perform the following actions on the server:
        ///- Create an empty workbook
        ///- Execute all of code in the code window
        ///- Save to an Excel file
        ///
        ///Then you can view the results by downloading the Excel file..
        /// </summary>
        internal static string ExcelReporting_Descrip {
            get {
                return ResourceManager.GetString("ExcelReporting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excel Reporting.
        /// </summary>
        internal static string ExcelReporting_Name {
            get {
                return ResourceManager.GetString("ExcelReporting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Excel Templates
        ///In some scenarios, you may have your own Excel templates and just want to open and update some of the contents at server side. You can use the extensive GrapeCity Documents for Excel API to open an existing Excel file and then change some of its values, customize its formatting, and whatever else you need to do.
        ///- Click the **Template** button to download and view the original Excel template
        ///- Click the **Run** button to run the code and get the changed Excel file.
        /// </summary>
        internal static string ExcelTemplates_Descrip {
            get {
                return ResourceManager.GetString("ExcelTemplates.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excel Templates.
        /// </summary>
        internal static string ExcelTemplates_Name {
            get {
                return ResourceManager.GetString("ExcelTemplates.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cell rich text.
        /// </summary>
        internal static string ExportCellRichText_Name {
            get {
                return ResourceManager.GetString("ExportCellRichText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add new points for existing series.
        /// </summary>
        internal static string ExtendSeries_Name {
            get {
                return ResourceManager.GetString("ExtendSeries.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Family budget.
        /// </summary>
        internal static string FamilyBudget_Name {
            get {
                return ResourceManager.GetString("FamilyBudget.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Features
        ///GrapeCity Documents for Excel provides some remarkable features that empower developers to create spreadsheets with:
        ///- High-performance attributes
        ///- Custom themes
        ///- Configurable components
        ///- Summarized data
        ///- Custom styles
        ///- Embedded drawing objects
        ///- Integrated calculation engine
        ///- And much more...
        ///
        ///You can explore a lot of example code in the Features section that shows you how to use each feature in GrapeCity Documents for Excel.
        ///
        ///Click the **&quot;Run&quot;** button to perform the followi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Features_Descrip {
            get {
                return ResourceManager.GetString("Features.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Features.
        /// </summary>
        internal static string Features_Name {
            get {
                return ResourceManager.GetString("Features.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Fill
        ///The examples in this folder demonstrate how to apply several kinds of fill to a range.
        ///- Solid fill
        ///- Pattern fill
        ///- Linear gradient fill
        ///- Rectangular gradient fill.
        /// </summary>
        internal static string Fill_Descrip {
            get {
                return ResourceManager.GetString("Fill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fill.
        /// </summary>
        internal static string Fill_Name {
            get {
                return ResourceManager.GetString("Fill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by automatic font color.
        /// </summary>
        internal static string FilterByAutomaticFontColor_Name {
            get {
                return ResourceManager.GetString("FilterByAutomaticFontColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by cell color.
        /// </summary>
        internal static string FilterByCellColor_Name {
            get {
                return ResourceManager.GetString("FilterByCellColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by font color.
        /// </summary>
        internal static string FilterByFontColor_Name {
            get {
                return ResourceManager.GetString("FilterByFontColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by icon.
        /// </summary>
        internal static string FilterByIcon_Name {
            get {
                return ResourceManager.GetString("FilterByIcon.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by no fill.
        /// </summary>
        internal static string FilterByNoFill_Name {
            get {
                return ResourceManager.GetString("FilterByNoFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by no icon.
        /// </summary>
        internal static string FilterByNoIcon_Name {
            get {
                return ResourceManager.GetString("FilterByNoIcon.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Filtering
        ///GrapeCity Documents for Excel supports all types of filters, including: 
        ///- Number Filter
        ///- Text Filter
        ///- Date Filter
        ///- Color Filter
        ///- Icon Filter
        ///
        ///Filter a range using the range&apos;s **AutoFilter** method. If you want to apply the filter to multiple columns, you can invoke the AutoFilter method several times.
        ///
        ///To re-apply filter conditions when the range&apos;s value changes, use the **ApplyFilter** method of the worksheet&apos;s **AutoFilter** instance..
        /// </summary>
        internal static string Filtering_Descrip {
            get {
                return ResourceManager.GetString("Filtering.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filtering.
        /// </summary>
        internal static string Filtering_Name {
            get {
                return ResourceManager.GetString("Filtering.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Filter by color
        ///The examples in this folder demonstrate how to use the AutoFilter method to create a color filter. You can filter by:
        ///- font color
        ///- interior color
        ///- automatic font color
        ///- no fill.
        /// </summary>
        internal static string FilteringByColor_Descrip {
            get {
                return ResourceManager.GetString("FilteringByColor.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by color.
        /// </summary>
        internal static string FilteringByColor_Name {
            get {
                return ResourceManager.GetString("FilteringByColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Filter by icon
        ///The examples in this folder demonstrate how to use the AutoFilter method to filter by icon.  You can set the **AutoFilterOperator** parameter to: 
        ///
        ///- **Icon** and filter by the specified icon
        ///- **NoIcon** and filter by rows with no icon
        ///
        ///Before you can apply an icon filter, you must first create an **IIconSetCondition** instance and an **IFormatCondition** instance for the Range..
        /// </summary>
        internal static string FilteringByIcon_Descrip {
            get {
                return ResourceManager.GetString("FilteringByIcon.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by icon.
        /// </summary>
        internal static string FilteringByIcon_Name {
            get {
                return ResourceManager.GetString("FilteringByIcon.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter items in pivot tables.
        /// </summary>
        internal static string FilterItemsInPivotTable_Name {
            get {
                return ResourceManager.GetString("FilterItemsInPivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Financial KPIs.
        /// </summary>
        internal static string FinancialKPIs_Name {
            get {
                return ResourceManager.GetString("FinancialKPIs.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font color.
        /// </summary>
        internal static string FontColor_Name {
            get {
                return ResourceManager.GetString("FontColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font effect.
        /// </summary>
        internal static string FontEffect_Name {
            get {
                return ResourceManager.GetString("FontEffect.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font name.
        /// </summary>
        internal static string FontName_Name {
            get {
                return ResourceManager.GetString("FontName.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Fonts
        ///The examples in this folder demonstrate how to apply font settings to a range:
        ///- Font color
        ///- Font size
        ///- Font name
        ///- Bold, Italic
        ///- Underline
        ///- Strikethrough, Superscript, Subscript.
        /// </summary>
        internal static string Fonts_Descrip {
            get {
                return ResourceManager.GetString("Fonts.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fonts.
        /// </summary>
        internal static string Fonts_Name {
            get {
                return ResourceManager.GetString("Fonts.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font size.
        /// </summary>
        internal static string FontSize_Name {
            get {
                return ResourceManager.GetString("FontSize.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font style.
        /// </summary>
        internal static string FontStyle_Name {
            get {
                return ResourceManager.GetString("FontStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font underline.
        /// </summary>
        internal static string FontUnderline_Name {
            get {
                return ResourceManager.GetString("FontUnderline.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Formatting
        ///GrapeCity Documents for Excel provides a lot of properties to customize the appearance of a range:
        ///
        ///- **IRange.NumberFormat** sets the number format
        ///- **IRange.HorizontalAlignment**,  **IRange.VerticalAlignment**, **IRange.IndentLevel**, etc. set the alignment
        ///- **IRange.Font** sets the font
        ///- **IRange.Borders** sets the border
        ///- **IRange.Interior** sets solid fill, pattern fill, and gradient fill
        ///- **IRange.Locked** and **IRange.FormulaHidden** sets up protection
        ///
        ///You can also creat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Formatting_Descrip {
            get {
                return ResourceManager.GetString("Formatting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formatting.
        /// </summary>
        internal static string Formatting_Name {
            get {
                return ResourceManager.GetString("Formatting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Formulas
        ///GrapeCity Documents for Excel lets you create and use formulas. These are expressions that let you calculate the value of a cell quickly and accurately. You can also use built-in functions and operators to generate formulas and calculate values in cells.
        ///
        ///The calc engine handles many calculations, for example:
        ///- Hundreds of built-in Excel functions
        ///- Array formulas
        ///- Dirty and Calculate methods
        ///- Table formula.
        /// </summary>
        internal static string Formulas_Descrip {
            get {
                return ResourceManager.GetString("Formulas.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formulas.
        /// </summary>
        internal static string Formulas_Name {
            get {
                return ResourceManager.GetString("Formulas.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get display format.
        /// </summary>
        internal static string GetDisplayFormat_Name {
            get {
                return ResourceManager.GetString("GetDisplayFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get used range features.
        /// </summary>
        internal static string GetFeatureRelatedUsedRange_Name {
            get {
                return ResourceManager.GetString("GetFeatureRelatedUsedRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get row and column count.
        /// </summary>
        internal static string GetRangeRowCountColumnCount_Name {
            get {
                return ResourceManager.GetString("GetRangeRowCountColumnCount.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get used range.
        /// </summary>
        internal static string GetWorksheetUsedRange_Name {
            get {
                return ResourceManager.GetString("GetWorksheetUsedRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group exist sparklines.
        /// </summary>
        internal static string GroupExistSparklines_Name {
            get {
                return ResourceManager.GetString("GroupExistSparklines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Grouping
        ///Spreadsheets with tons of data can be a headache to read. You can spend a lot of time and effort trying to visualize, manage, and analyze the information that is relevant to you.
        ///
        ///GrapeCity Documents for Excel lets you summarize large amounts of information in groups so that complex spreadsheets are easier to navigate. After rows of data in a spreadsheet are grouped, users can expand and collapse details with the click of a button in the group header row. You can use the following methods and [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Grouping_Descrip {
            get {
                return ResourceManager.GetString("Grouping.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grouping.
        /// </summary>
        internal static string Grouping_Name {
            get {
                return ResourceManager.GetString("Grouping.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set horizontal and vertical alignment.
        /// </summary>
        internal static string HAlignVAlign_Name {
            get {
                return ResourceManager.GetString("HAlignVAlign.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide rows and columns.
        /// </summary>
        internal static string HiddenRowColumn_Name {
            get {
                return ResourceManager.GetString("HiddenRowColumn.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Home inventory.
        /// </summary>
        internal static string HomeInventory_Name {
            get {
                return ResourceManager.GetString("HomeInventory.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Hyperlinks
        ///Apply hyperlinks to a range using the **Add** method of a worksheet or range&apos;s **Hyperlinks** instance. GrapeCity Documents for Excel supports the following types of hyperlink:
        ///- Link to a web page
        ///- Link to a specific range in the current document
        ///- Link to an external file
        ///- Link to an email address.
        /// </summary>
        internal static string Hyperlinks_Descrip {
            get {
                return ResourceManager.GetString("Hyperlinks.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hyperlinks.
        /// </summary>
        internal static string Hyperlinks_Name {
            get {
                return ResourceManager.GetString("Hyperlinks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import csv file to workbook.
        /// </summary>
        internal static string ImportCsvFileToWorkbook_Name {
            get {
                return ResourceManager.GetString("ImportCsvFileToWorkbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import csv file to workbook with options.
        /// </summary>
        internal static string ImportCsvFileToWorkbookWithOptions_Name {
            get {
                return ResourceManager.GetString("ImportCsvFileToWorkbookWithOptions.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only import data from Excel.
        /// </summary>
        internal static string ImportExcelFileDataOnly_Name {
            get {
                return ResourceManager.GetString("ImportExcelFileDataOnly.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import Excel file.
        /// </summary>
        internal static string ImportExcelFileToWorkbook_Name {
            get {
                return ResourceManager.GetString("ImportExcelFileToWorkbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not recalculate after opening Excel.
        /// </summary>
        internal static string ImportExcelFileWithoutCalculation_Name {
            get {
                return ResourceManager.GetString("ImportExcelFileWithoutCalculation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import Excel file with password.
        /// </summary>
        internal static string ImportExcelFileWithPassword_Name {
            get {
                return ResourceManager.GetString("ImportExcelFileWithPassword.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open and save xlsm file.
        /// </summary>
        internal static string ImportXlsmToWorkbook_Name {
            get {
                return ResourceManager.GetString("ImportXlsmToWorkbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Income statement.
        /// </summary>
        internal static string IncomeStatement_Name {
            get {
                return ResourceManager.GetString("IncomeStatement.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert or delete cells.
        /// </summary>
        internal static string InsertCellsDeleteCells_Name {
            get {
                return ResourceManager.GetString("InsertCellsDeleteCells.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert or delete rows and columns.
        /// </summary>
        internal static string InsertDeleteRowsColumns_Name {
            get {
                return ResourceManager.GetString("InsertDeleteRowsColumns.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert or delete table rows and columns.
        /// </summary>
        internal static string InsertDeleteTableRowColumns_Name {
            get {
                return ResourceManager.GetString("InsertDeleteTableRowColumns.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Legend
        ///These examples demonstrate how to configure the style and position of chart **legends**..
        /// </summary>
        internal static string Legend_Descrip {
            get {
                return ResourceManager.GetString("Legend.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legend.
        /// </summary>
        internal static string Legend_Name {
            get {
                return ResourceManager.GetString("Legend.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set linear gradient fill.
        /// </summary>
        internal static string LinearGradientFill_Name {
            get {
                return ResourceManager.GetString("LinearGradientFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line chart.
        /// </summary>
        internal static string LineChart_Name {
            get {
                return ResourceManager.GetString("LineChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line Markers chart.
        /// </summary>
        internal static string LineMarkersChart_Name {
            get {
                return ResourceManager.GetString("LineMarkersChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100% Stacked line with markers chart.
        /// </summary>
        internal static string LineMarkerStacked100Chart_Name {
            get {
                return ResourceManager.GetString("LineMarkerStacked100Chart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stack line with markers chart.
        /// </summary>
        internal static string LineMarkerStackedChart_Name {
            get {
                return ResourceManager.GetString("LineMarkerStackedChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100% Stacked Line chart.
        /// </summary>
        internal static string LineStacked100Chart_Name {
            get {
                return ResourceManager.GetString("LineStacked100Chart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stacked Line chart.
        /// </summary>
        internal static string LineStackedChart_Name {
            get {
                return ResourceManager.GetString("LineStackedChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load and save json containing shapes.
        /// </summary>
        internal static string LoadAndSaveJsonWithShapes_Name {
            get {
                return ResourceManager.GetString("LoadAndSaveJsonWithShapes.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Markers
        ///These examples demonstrate how to set style and format for **markers**..
        /// </summary>
        internal static string Markers_Descrip {
            get {
                return ResourceManager.GetString("Markers.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Markers.
        /// </summary>
        internal static string Markers_Name {
            get {
                return ResourceManager.GetString("Markers.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merge cells.
        /// </summary>
        internal static string MergeCells_Name {
            get {
                return ResourceManager.GetString("MergeCells.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modify pivot field subtotal type.
        /// </summary>
        internal static string ModifySubtotalsForPivotField_Name {
            get {
                return ResourceManager.GetString("ModifySubtotalsForPivotField.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modify validation.
        /// </summary>
        internal static string ModifyValidation_Name {
            get {
                return ResourceManager.GetString("ModifyValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monthly business budget.
        /// </summary>
        internal static string MonthlyBusinessBudget_Name {
            get {
                return ResourceManager.GetString("MonthlyBusinessBudget.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Movie list.
        /// </summary>
        internal static string MovieList_Name {
            get {
                return ResourceManager.GetString("MovieList.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply multiple value filter.
        /// </summary>
        internal static string MultiSelectFilter_Name {
            get {
                return ResourceManager.GetString("MultiSelectFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MyAddFunction.
        /// </summary>
        internal static string MyAddFunction_Name {
            get {
                return ResourceManager.GetString("MyAddFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MyConcatenateFunction.
        /// </summary>
        internal static string MyConcatenateFunction_Name {
            get {
                return ResourceManager.GetString("MyConcatenateFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MyConditionalSumFunction.
        /// </summary>
        internal static string MyConditionalSumFunction_Name {
            get {
                return ResourceManager.GetString("MyConditionalSumFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MyIsErrorFunction.
        /// </summary>
        internal static string MyIsErrorFunction_Name {
            get {
                return ResourceManager.GetString("MyIsErrorFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MyIsMergedRangeFunction.
        /// </summary>
        internal static string MyIsMergedRangeFunction_Name {
            get {
                return ResourceManager.GetString("MyIsMergedRangeFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySumFunction.
        /// </summary>
        internal static string MySumFunction_Name {
            get {
                return ResourceManager.GetString("MySumFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply number filter.
        /// </summary>
        internal static string NumberFilter_Name {
            get {
                return ResourceManager.GetString("NumberFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Number Filter
        ///The examples in this folder demonstrates how to use number filtering for range..
        /// </summary>
        internal static string NumberFiltering_Descrip {
            get {
                return ResourceManager.GetString("NumberFiltering.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number Filter.
        /// </summary>
        internal static string NumberFiltering_Name {
            get {
                return ResourceManager.GetString("NumberFiltering.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Number Format
        ///The Number Format examples demonstrate how to apply a number format to a range. GrapeCity Documents for Excel uses Excel-style number formats..
        /// </summary>
        internal static string NumberFormat_Descrip {
            get {
                return ResourceManager.GetString("NumberFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number Format.
        /// </summary>
        internal static string NumberFormat_Name {
            get {
                return ResourceManager.GetString("NumberFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export number formats.
        /// </summary>
        internal static string NumberFormating_Name {
            get {
                return ResourceManager.GetString("NumberFormating.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set number format.
        /// </summary>
        internal static string NumberFormats_Name {
            get {
                return ResourceManager.GetString("NumberFormats.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export overflow text.
        /// </summary>
        internal static string Overflow_Name {
            get {
                return ResourceManager.GetString("Overflow.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Page Setup
        ///GrapeCity Documents for Excel supports page setup. The **PageSetup** object contains all page setup attributes (left margin, bottom margin, paper size, and so on) as properties..
        /// </summary>
        internal static string PageSetup_Descrip {
            get {
                return ResourceManager.GetString("PageSetup.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page Setup.
        /// </summary>
        internal static string PageSetup_Name {
            get {
                return ResourceManager.GetString("PageSetup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set pattern fill.
        /// </summary>
        internal static string PatternFill_Name {
            get {
                return ResourceManager.GetString("PatternFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## PDF Exporting
        ///In this folder, you can explore complete code demonstrating how to export an pdf file at server side. 
        ///
        ///Click the **&quot;Save as PDF&quot;** button to perform the following actions on the server:
        ///- Create an empty workbook
        ///- Execute all of code in the code window
        ///- Save to an pdf file
        ///
        ///Then you can view the pdf in your browser..
        /// </summary>
        internal static string PDFExporting_Descrip {
            get {
                return ResourceManager.GetString("PDFExporting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PDF Exporting.
        /// </summary>
        internal static string PDFExporting_Name {
            get {
                return ResourceManager.GetString("PDFExporting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Page setup
        ///GrapeCity Documents for Excel allows users to paginate each worksheet using the properties of the IPageSetup interface.
        ///
        ///You can customize the page size, print area, print title rows, print title columns; specify horizontal page breaks, vertical page breaks, the maximum number of pages for horizontal and vertical pagination etc. along with zoom and scale factors as per your preferences while exporting a spreadsheet to a PDF file..
        /// </summary>
        internal static string PdfPageSetup_Descrip {
            get {
                return ResourceManager.GetString("PdfPageSetup.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page setup.
        /// </summary>
        internal static string PdfPageSetup_Name {
            get {
                return ResourceManager.GetString("PdfPageSetup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform calculations in the table.
        /// </summary>
        internal static string PerformCalculationsInTable_Name {
            get {
                return ResourceManager.GetString("PerformCalculationsInTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Personal address book.
        /// </summary>
        internal static string PersonalAddressBook_Name {
            get {
                return ResourceManager.GetString("PersonalAddressBook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Personal net worth calculator.
        /// </summary>
        internal static string PersonalNetWorthCalculator_Name {
            get {
                return ResourceManager.GetString("PersonalNetWorthCalculator.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Picture
        ///GrapeCity Documents for Excel allows you to add a picture to a worksheet.
        ///
        ///To add a picture to a worksheet, use the **AddPicture** method of the worksheet&apos;s **Shapes** collection..
        /// </summary>
        internal static string Picture_Descrip {
            get {
                return ResourceManager.GetString("Picture.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Picture.
        /// </summary>
        internal static string Picture_Name {
            get {
                return ResourceManager.GetString("Picture.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy picture.
        /// </summary>
        internal static string PictureCopy_Name {
            get {
                return ResourceManager.GetString("PictureCopy.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut picture.
        /// </summary>
        internal static string PictureCut_Name {
            get {
                return ResourceManager.GetString("PictureCut.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate picture.
        /// </summary>
        internal static string PictureDuplicate_Name {
            get {
                return ResourceManager.GetString("PictureDuplicate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Doughnut chart.
        /// </summary>
        internal static string Pie_DoughnutChart_Name {
            get {
                return ResourceManager.GetString("Pie_DoughnutChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pie chart.
        /// </summary>
        internal static string PieChart_Name {
            get {
                return ResourceManager.GetString("PieChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Pivot Table
        ///A pivot table is a data summarization tool. It can automatically count, total, or average the data stored in a spreadsheet, and display the resulting summarized data in a second table.
        ///
        ///Create a pivot cache using the **Create** method of the workbook&apos;s **PivotCaches** collection. It returns an instance of the **IPivotCache** interface. 
        ///
        ///Create a pivot table using the **CreatePivotTable** method of the pivot cache instance. Or you can opt to use the **Add** method of the worksheet&apos;s **Pi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PivotTable_Descrip {
            get {
                return ResourceManager.GetString("PivotTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pivot Table.
        /// </summary>
        internal static string PivotTable_Name {
            get {
                return ResourceManager.GetString("PivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Plot area
        ///These examples demonstrate how to specify settings for **plot area**..
        /// </summary>
        internal static string PlotArea_Descrip {
            get {
                return ResourceManager.GetString("PlotArea.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plot area.
        /// </summary>
        internal static string PlotArea_Name {
            get {
                return ResourceManager.GetString("PlotArea.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project cost tracker.
        /// </summary>
        internal static string ProjectCostTracker_Name {
            get {
                return ResourceManager.GetString("ProjectCostTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Protection 
        ///The Protection examples demonstrate how to apply security settings to a range, for example:
        ///- The **FormulaHidden** property keeps formulas in a range from appearing in exported .xlsx files.
        ///- The **Locked** property protects cells in a range from being modified.
        /// </summary>
        internal static string Protection_Descrip {
            get {
                return ResourceManager.GetString("Protection.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protection.
        /// </summary>
        internal static string Protection_Name {
            get {
                return ResourceManager.GetString("Protection.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protect worksheet.
        /// </summary>
        internal static string ProtectWorksheet_Name {
            get {
                return ResourceManager.GetString("ProtectWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Range Operations
        ///A range is a cell or a cluster of cells in a spreadsheet that can be used to execute important operations on cells, rows or columns with the help of **Range** property of the **IWorksheet** interface.
        ///
        ///Examples in this folder demonstrate how to:
        ///- Access cells, rows, and columns
        ///- Access each area of a range
        ///- Access ranges in various ways
        ///- Cut, Copy, and Paste a range
        ///- Work with a used range of cells
        ///- Get a row count or column count
        ///- Hide a row or column
        ///- Insert or delet [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RangeOperations_Descrip {
            get {
                return ResourceManager.GetString("RangeOperations.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range Operations.
        /// </summary>
        internal static string RangeOperations_Name {
            get {
                return ResourceManager.GetString("RangeOperations.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reapply filter.
        /// </summary>
        internal static string ReApplyFilter_Name {
            get {
                return ResourceManager.GetString("ReApplyFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set rectangular gradient fill.
        /// </summary>
        internal static string RectangularGradientFill_Name {
            get {
                return ResourceManager.GetString("RectangularGradientFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh pivot table.
        /// </summary>
        internal static string RefreshPivotTable_Name {
            get {
                return ResourceManager.GetString("RefreshPivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove table.
        /// </summary>
        internal static string RemoveTable_Name {
            get {
                return ResourceManager.GetString("RemoveTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GrapeCity Documents for Excel Features.
        /// </summary>
        internal static string RootExample_Descrip {
            get {
                return ResourceManager.GetString("RootExample.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        internal static string RootExample_Name {
            get {
                return ResourceManager.GetString("RootExample.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rotate cell contents.
        /// </summary>
        internal static string RotateCellContents_Name {
            get {
                return ResourceManager.GetString("RotateCellContents.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Samples.
        /// </summary>
        internal static string Samples_Name {
            get {
                return ResourceManager.GetString("Samples.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export borders.
        /// </summary>
        internal static string SaveBorder_Name {
            get {
                return ResourceManager.GetString("SaveBorder.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export Conditional Formatting.
        /// </summary>
        internal static string SaveConditionalFormatting_Name {
            get {
                return ResourceManager.GetString("SaveConditionalFormatting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export picture.
        /// </summary>
        internal static string SavePictureToPDF_Name {
            get {
                return ResourceManager.GetString("SavePictureToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export fills.
        /// </summary>
        internal static string SaveRangeFillToPDF_Name {
            get {
                return ResourceManager.GetString("SaveRangeFillToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export sparklines.
        /// </summary>
        internal static string SaveSparklinesToPDF_Name {
            get {
                return ResourceManager.GetString("SaveSparklinesToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export table.
        /// </summary>
        internal static string SaveTable_Name {
            get {
                return ResourceManager.GetString("SaveTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save workbook to csv file.
        /// </summary>
        internal static string SaveWorkbookToCsvFile_Name {
            get {
                return ResourceManager.GetString("SaveWorkbookToCsvFile.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save workbook to csv file with options.
        /// </summary>
        internal static string SaveWorkbookToCsvFileWithOptions_Name {
            get {
                return ResourceManager.GetString("SaveWorkbookToCsvFileWithOptions.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save to Excel file.
        /// </summary>
        internal static string SaveWorkbookToExcelFile_Name {
            get {
                return ResourceManager.GetString("SaveWorkbookToExcelFile.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save workbook to PDF.
        /// </summary>
        internal static string SaveWorkbookToPDF_Name {
            get {
                return ResourceManager.GetString("SaveWorkbookToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save to Excel file with password.
        /// </summary>
        internal static string SaveWorkbookWithPassword_Name {
            get {
                return ResourceManager.GetString("SaveWorkbookWithPassword.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save worksheet to csv file.
        /// </summary>
        internal static string SaveWorksheetToCsvFile_Name {
            get {
                return ResourceManager.GetString("SaveWorksheetToCsvFile.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save worksheet to csv file with options.
        /// </summary>
        internal static string SaveWorksheetToCsvFileWithOptions_Name {
            get {
                return ResourceManager.GetString("SaveWorksheetToCsvFileWithOptions.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save worksheet to PDF.
        /// </summary>
        internal static string SaveWorksheetToPDF_Name {
            get {
                return ResourceManager.GetString("SaveWorksheetToPDF.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Series
        ///**Series** is the most frequently used feature in charts. Each chart contains one or more data series, and each series consists of a group of data points. 
        ///
        ///These examples demonstrate how to add a series to a chart, and how to specify settings for each series, such as:
        ///
        ///- **BubbleScale** and **SizeRepresents** for bubble charts
        ///- Configure **Series** format
        ///- Change **Series Type**
        ///- Add **Secondary Axis**
        ///- **VaryByCategories** colors for single-series column charts.
        /// </summary>
        internal static string Series_Descrip {
            get {
                return ResourceManager.GetString("Series.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Series.
        /// </summary>
        internal static string Series_Name {
            get {
                return ResourceManager.GetString("Series.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set value axis scale type.
        /// </summary>
        internal static string SetAxisScaleType_Name {
            get {
                return ResourceManager.GetString("SetAxisScaleType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure axis tick mark layout.
        /// </summary>
        internal static string SetAxisTickMark_Name {
            get {
                return ResourceManager.GetString("SetAxisTickMark.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set background image for worksheet.
        /// </summary>
        internal static string SetBackgroundImage_Name {
            get {
                return ResourceManager.GetString("SetBackgroundImage.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font&apos;s folder.
        /// </summary>
        internal static string SetFontsFolderPath_Name {
            get {
                return ResourceManager.GetString("SetFontsFolderPath.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide formula.
        /// </summary>
        internal static string SetRangeFormulaHidden_Name {
            get {
                return ResourceManager.GetString("SetRangeFormulaHidden.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock range.
        /// </summary>
        internal static string SetRangeLocked_Name {
            get {
                return ResourceManager.GetString("SetRangeLocked.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set values to a range.
        /// </summary>
        internal static string SetRangeValue_Name {
            get {
                return ResourceManager.GetString("SetRangeValue.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set rich text for comment.
        /// </summary>
        internal static string SetRichTextForComment_Name {
            get {
                return ResourceManager.GetString("SetRichTextForComment.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set row height and column width.
        /// </summary>
        internal static string SetRowHeightColumnWidth_Name {
            get {
                return ResourceManager.GetString("SetRowHeightColumnWidth.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s text.
        /// </summary>
        internal static string SetShapeText_Name {
            get {
                return ResourceManager.GetString("SetShapeText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set column chart colors to vary.
        /// </summary>
        internal static string SetVaryColorForColumnChart_Name {
            get {
                return ResourceManager.GetString("SetVaryColorForColumnChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Shape
        ///GrapeCity Documents for Excel lets you embed drawing objects like shapes and pictures in the cells of a worksheet. You can insert arrows, lines, charts, slicers, pictures, and general shapes.
        ///
        ///To create a shape for a worksheet, use the **AddShape** method of the worksheet&apos;s Shapes collection. Then you can configure the Shape instance using properties like these:
        ///
        ///- Configure a shape&apos;s fill style using the **Fill** property 
        ///- Configure a shape&apos;s line style using the **Line** property
        ///- Confi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Shape_Descrip {
            get {
                return ResourceManager.GetString("Shape.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shape.
        /// </summary>
        internal static string Shape_Name {
            get {
                return ResourceManager.GetString("Shape.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy shape.
        /// </summary>
        internal static string ShapeCopy_Name {
            get {
                return ResourceManager.GetString("ShapeCopy.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut shape.
        /// </summary>
        internal static string ShapeCut_Name {
            get {
                return ResourceManager.GetString("ShapeCut.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate shape.
        /// </summary>
        internal static string ShapeDuplicate_Name {
            get {
                return ResourceManager.GetString("ShapeDuplicate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show specific level group.
        /// </summary>
        internal static string ShowSpecificLevel_Name {
            get {
                return ResourceManager.GetString("ShowSpecificLevel.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shrink to fit.
        /// </summary>
        internal static string ShrinkToFit_Name {
            get {
                return ResourceManager.GetString("ShrinkToFit.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple Budget.
        /// </summary>
        internal static string SimpleBudget_Name {
            get {
                return ResourceManager.GetString("SimpleBudget.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple invoice.
        /// </summary>
        internal static string SimpleInvoice_Name {
            get {
                return ResourceManager.GetString("SimpleInvoice.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple personal budget.
        /// </summary>
        internal static string SimplePersonalBudget_Name {
            get {
                return ResourceManager.GetString("SimplePersonalBudget.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Slicer
        ///Slicers are visual filters that you can use to filter a table or pivot table.
        ///
        ///Use the **Add** method of a workbook&apos;s **SlicerCaches** collection to create a slicer cache. It returns an instance of a slicer cache. 
        ///
        ///Use the **Add** method of the slicer cashe&apos;s **Slicers** collection to create a slicer.
        ///
        ///It supports both built-in and custom slicer styles..
        /// </summary>
        internal static string Slicer_Descrip {
            get {
                return ResourceManager.GetString("Slicer.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Slicer.
        /// </summary>
        internal static string Slicer_Name {
            get {
                return ResourceManager.GetString("Slicer.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy slicer.
        /// </summary>
        internal static string SlicerCopy_Name {
            get {
                return ResourceManager.GetString("SlicerCopy.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut slicer.
        /// </summary>
        internal static string SlicerCut_Name {
            get {
                return ResourceManager.GetString("SlicerCut.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate slicer.
        /// </summary>
        internal static string SlicerDuplicate_Name {
            get {
                return ResourceManager.GetString("SlicerDuplicate.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set solid fill.
        /// </summary>
        internal static string SolidFill_Name {
            get {
                return ResourceManager.GetString("SolidFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Sorting
        ///GrapeCity Documents for Excel supports all types of sorting, including:
        ///- Sort by value
        ///- Sort by font color
        ///- Sort by interior
        ///- Sort by icon
        ///- Sort by custom list.
        /// </summary>
        internal static string Sorting_Descrip {
            get {
                return ResourceManager.GetString("Sorting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorting.
        /// </summary>
        internal static string Sorting_Name {
            get {
                return ResourceManager.GetString("Sorting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort by font color.
        /// </summary>
        internal static string SortRangeByFontColor_Name {
            get {
                return ResourceManager.GetString("SortRangeByFontColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort by icon.
        /// </summary>
        internal static string SortRangeByIcon_Name {
            get {
                return ResourceManager.GetString("SortRangeByIcon.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort range by content.
        /// </summary>
        internal static string SortRangeByInterior_Name {
            get {
                return ResourceManager.GetString("SortRangeByInterior.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort range by value.
        /// </summary>
        internal static string SortRangeByValue_Name {
            get {
                return ResourceManager.GetString("SortRangeByValue.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Sparklines
        ///GrapeCity Documents for Excel allows you to highlight specific information and see how it varies over time using Sparklines. Sparklines are small, lightweight charts that are drawn inside cells to quickly visualize data for improved analysis.
        ///
        ///Use the **Add** method of a range&apos;s **SparklineGroups** collection to create a group of new sparklines. Sparklines only exist inside of a sparkline group. There is no way to create a sparkline outside of a sparkline group.
        ///
        ///We support the following  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Sparklines_Descrip {
            get {
                return ResourceManager.GetString("Sparklines.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sparklines.
        /// </summary>
        internal static string Sparklines_Name {
            get {
                return ResourceManager.GetString("Sparklines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Spread.Sheets Viewer
        ///Examples in this folder demonstrate how to use **GrapeCity Documents for Excel** and **Spread.Sheets**, another Spread product that is included in SpreadJS. GrapeCity Documents for Excel works on the server side to import and export Excel template files. Spread.Sheets works in the browser (client side) as a viewer or editor.
        ///
        ///To learn more about **Spread.Sheets**, visit the [Spread.Sheets Home Page](https://www.grapecity.com/en/spreadsheets).
        ///
        ///All examples in this folder work as [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SpreadSheetsViewer_Descrip {
            get {
                return ResourceManager.GetString("SpreadSheetsViewer.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread.Sheets Viewer.
        /// </summary>
        internal static string SpreadSheetsViewer_Name {
            get {
                return ResourceManager.GetString("SpreadSheetsViewer.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-Low-Close stock chart.
        /// </summary>
        internal static string Stock_HighLowCloseStockChart_Name {
            get {
                return ResourceManager.GetString("Stock_HighLowCloseStockChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open-High-Low-Close stock chart.
        /// </summary>
        internal static string Stock_OpenHighLowCloseStock_Name {
            get {
                return ResourceManager.GetString("Stock_OpenHighLowCloseStock.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Volume-High-Low-Close stock chart.
        /// </summary>
        internal static string Stock_VolumeHighLowCloseStock_Name {
            get {
                return ResourceManager.GetString("Stock_VolumeHighLowCloseStock.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Volume-Open-High-Low-Close chart.
        /// </summary>
        internal static string Stock_VolumeOpenHighLowClose_Name {
            get {
                return ResourceManager.GetString("Stock_VolumeOpenHighLowClose.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string String1 {
            get {
                return ResourceManager.GetString("String1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Student calendar.
        /// </summary>
        internal static string StudentCalendar_Name {
            get {
                return ResourceManager.GetString("StudentCalendar.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter table range.
        /// </summary>
        internal static string TableFilter_Name {
            get {
                return ResourceManager.GetString("TableFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Tables
        ///To more easily manage and analyze data in spreadsheet, you can create table for a range. A table consists of rows and columns that you can format and manage independently in a worksheet. You will learn how to:
        ///
        ///- Add or remove a table in a worksheet
        ///- Apply filtering to a table column
        ///- Apply sorting to a table column
        ///- Apply either built-in or custom table styles
        ///- Access each range of a table
        ///- Add or remove a table column
        ///- Perform calculations for a specific table range.
        /// </summary>
        internal static string Tables_Descrip {
            get {
                return ResourceManager.GetString("Tables.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tables.
        /// </summary>
        internal static string Tables_Name {
            get {
                return ResourceManager.GetString("Tables.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort table range.
        /// </summary>
        internal static string TableSort_Name {
            get {
                return ResourceManager.GetString("TableSort.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Export text
        ///Various of text effect can be exported to pdf file, such as:
        ///- Text with Excel number formatter
        ///- Overflow text
        ///- Font effects: text alignment, wordwrap, text indent, shrink to fit, underline, strikethrough .etc.
        /// </summary>
        internal static string Text_Descrip {
            get {
                return ResourceManager.GetString("Text.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export text.
        /// </summary>
        internal static string Text_Name {
            get {
                return ResourceManager.GetString("Text.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply text filter.
        /// </summary>
        internal static string TextFilter_Name {
            get {
                return ResourceManager.GetString("TextFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Text Filter
        ///The example in this folder demonstrates how to use the AutoFilter method to create a text filter. For example, you can filter by rows that contain the letter &quot;e&quot;..
        /// </summary>
        internal static string TextFiltering_Descrip {
            get {
                return ResourceManager.GetString("TextFiltering.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text Filter.
        /// </summary>
        internal static string TextFiltering_Name {
            get {
                return ResourceManager.GetString("TextFiltering.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set text orientation.
        /// </summary>
        internal static string TextOrientation_Name {
            get {
                return ResourceManager.GetString("TextOrientation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export font effects.
        /// </summary>
        internal static string TextStyle_Name {
            get {
                return ResourceManager.GetString("TextStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Theme
        ///GrapeCity Documents for Excel provides you with a set of built-in themes so you can quickly change the overall appearance of a workbook. It also lets you create custom themes and apply them to workbooks.
        ///
        ///- Use the **Theme** property of a workbook instance to change the workbook&apos;s theme. 
        ///- Use the **Add** method of a themes class instance to add a custom theme. 
        ///- Use the built-in properties of the **Themes** class to get a built-in theme instance.
        ///- Use the **Themes** indexer to get a custo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Theme_Descrip {
            get {
                return ResourceManager.GetString("Theme.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme.
        /// </summary>
        internal static string Theme_Name {
            get {
                return ResourceManager.GetString("Theme.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To do list with progress tracker.
        /// </summary>
        internal static string ToDoListWithProgressTracker_Name {
            get {
                return ResourceManager.GetString("ToDoListWithProgressTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ToJson and FromJson.
        /// </summary>
        internal static string ToJsonFromJson_Name {
            get {
                return ResourceManager.GetString("ToJsonFromJson.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Travel expense report.
        /// </summary>
        internal static string TravelExpenseReport_Name {
            get {
                return ResourceManager.GetString("TravelExpenseReport.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tutorial.
        /// </summary>
        internal static string Tutorial_Name {
            get {
                return ResourceManager.GetString("Tutorial.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ungroup range.
        /// </summary>
        internal static string UngroupRange_Name {
            get {
                return ResourceManager.GetString("UngroupRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unprotect worksheet.
        /// </summary>
        internal static string UnprotectWorksheet_Name {
            get {
                return ResourceManager.GetString("UnprotectWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use array formulas.
        /// </summary>
        internal static string UseArrayFormula_Name {
            get {
                return ResourceManager.GetString("UseArrayFormula.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two more GrapeCity Documents for Excel usage scenarios are as follows:
        ///- **Code** Use GrapeCity Documents for Excel API code, then export to an Excel file.
        ///- **Templates** Import an Excel template to the GrapeCity Documents for Excel data model, then use GrapeCity Documents for Excel API code to add content, then export it to an Excel file..
        /// </summary>
        internal static string UseCases_Descrip {
            get {
                return ResourceManager.GetString("UseCases.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Cases.
        /// </summary>
        internal static string UseCases_Name {
            get {
                return ResourceManager.GetString("UseCases.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use date axis.
        /// </summary>
        internal static string UseDateAxis_Name {
            get {
                return ResourceManager.GetString("UseDateAxis.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use slicer to filter table.
        /// </summary>
        internal static string UseSlicerDoFilter_Name {
            get {
                return ResourceManager.GetString("UseSlicerDoFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use a slicer to clear a filter.
        /// </summary>
        internal static string UseSlicerToClearFilter_Name {
            get {
                return ResourceManager.GetString("UseSlicerToClearFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use table formulas.
        /// </summary>
        internal static string UseTableFormula_Name {
            get {
                return ResourceManager.GetString("UseTableFormula.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create value filter.
        /// </summary>
        internal static string ValueFilter_Descrip {
            get {
                return ResourceManager.GetString("ValueFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value Filter.
        /// </summary>
        internal static string ValueFilter_Name {
            get {
                return ResourceManager.GetString("ValueFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export vertical text.
        /// </summary>
        internal static string VerticalText_Name {
            get {
                return ResourceManager.GetString("VerticalText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Website flow chart.
        /// </summary>
        internal static string WebsiteFlowChart_Name {
            get {
                return ResourceManager.GetString("WebsiteFlowChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Workbook
        ///A workbook is a spreadsheet document that contains one or more worksheets that are stored within the Worksheets collection.
        ///
        ///The examples in this folder demonstrate the following cases:
        ///- Create  a new workbook
        ///- Import an Excel file into a workbook
        ///- Import an Excel file with a password to a workbook
        ///- Export a workbook to an Excel file
        ///- Export a workbook to an Excel file with a password
        ///- Import or export a workbook using ToJson and FromJson.
        /// </summary>
        internal static string Workbook_Descrip {
            get {
                return ResourceManager.GetString("Workbook.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workbook.
        /// </summary>
        internal static string Workbook_Name {
            get {
                return ResourceManager.GetString("Workbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Worksheets
        ///The examples in this folder demonstrate the following cases:
        ///- Add a worksheet
        ///- Delete a worksheet
        ///- Protect a worksheet
        ///- Unprotect a worksheet
        ///- Activate a worksheet
        ///- Apply settings to a worksheet.
        /// </summary>
        internal static string Worksheets_Descrip {
            get {
                return ResourceManager.GetString("Worksheets.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Worksheets.
        /// </summary>
        internal static string Worksheets_Name {
            get {
                return ResourceManager.GetString("Worksheets.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrap text.
        /// </summary>
        internal static string WrapText_Name {
            get {
                return ResourceManager.GetString("WrapText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scatter chart.
        /// </summary>
        internal static string XYScatterChart_Name {
            get {
                return ResourceManager.GetString("XYScatterChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scatter with straight lines and markers.
        /// </summary>
        internal static string XYScatterLinesChart_Name {
            get {
                return ResourceManager.GetString("XYScatterLinesChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scatter with smooth Lines.
        /// </summary>
        internal static string XYScatterSmooth_Name {
            get {
                return ResourceManager.GetString("XYScatterSmooth.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scatter with smooth lines and markers.
        /// </summary>
        internal static string XYScatterSmoothWithMarkers_Name {
            get {
                return ResourceManager.GetString("XYScatterSmoothWithMarkers.Name", resourceCulture);
            }
        }
    }
}
